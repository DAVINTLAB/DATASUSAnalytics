{
  "evaluation_timestamp": "2025-10-30T13:56:42.008366",
  "configuration": {
    "llm_provider": "ollama",
    "llm_model": "llama3.1:8b"
  },
  "agent_config": {
    "provider": "ollama",
    "model": "llama3.1:8b"
  },
  "summary": {
    "total_questions": 51,
    "agent_success_rate": 0.9215686274509803,
    "agent_failure_rate": 0.0784313725490196,
    "total_execution_time": 690.3172235488892,
    "avg_execution_time": 13.535631834291944
  },
  "metrics": {
    "Exact Match (EM)": {
      "average_score": 0.1276595744680851,
      "accuracy": 0.1276595744680851,
      "perfect_matches": 6,
      "total_evaluated": 47
    },
    "Component Matching (CM)": {
      "average_score": 0.6347340425531914,
      "accuracy": 0.3617021276595745,
      "perfect_matches": 6,
      "total_evaluated": 47
    },
    "Execution Accuracy (EX)": {
      "average_score": 0.8723404255319149,
      "accuracy": 0.8723404255319149,
      "perfect_matches": 41,
      "total_evaluated": 47
    }
  },
  "difficulty_breakdown": {
    "easy": {
      "total": 17,
      "agent_success": 17,
      "metrics": {
        "Exact Match (EM)": {
          "correct": 1,
          "total": 17,
          "scores": [
            0.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
          ]
        },
        "Component Matching (CM)": {
          "correct": 9,
          "total": 17,
          "scores": [
            0.75,
            1.0,
            0.75,
            0.75,
            0.925,
            0.525,
            0.925,
            0.925,
            0.925,
            0.925,
            0.925,
            0.925,
            0.55,
            0.55,
            0.725,
            0.35,
            0.8
          ]
        },
        "Execution Accuracy (EX)": {
          "correct": 17,
          "total": 17,
          "scores": [
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0
          ]
        }
      }
    },
    "medium": {
      "total": 19,
      "agent_success": 18,
      "metrics": {
        "Exact Match (EM)": {
          "correct": 5,
          "total": 18,
          "scores": [
            0.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            1.0,
            1.0,
            0.0,
            1.0,
            0.0,
            0.0,
            0.0
          ]
        },
        "Component Matching (CM)": {
          "correct": 8,
          "total": 18,
          "scores": [
            0.53,
            1.0,
            0.55,
            0.2,
            0.55,
            0.48,
            1.0,
            0.8,
            0.2375,
            0.925,
            0.705,
            1.0,
            1.0,
            0.525,
            1.0,
            0.925,
            0.38,
            0.4
          ]
        },
        "Execution Accuracy (EX)": {
          "correct": 16,
          "total": 18,
          "scores": [
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            0.0,
            0.0
          ]
        }
      }
    },
    "hard": {
      "total": 15,
      "agent_success": 12,
      "metrics": {
        "Exact Match (EM)": {
          "correct": 0,
          "total": 12,
          "scores": [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
          ]
        },
        "Component Matching (CM)": {
          "correct": 0,
          "total": 12,
          "scores": [
            0.2,
            0.5875,
            0.4,
            0.4,
            0.22,
            0.4,
            0.375,
            0.4,
            0.23,
            0.2,
            0.3625,
            0.625
          ]
        },
        "Execution Accuracy (EX)": {
          "correct": 8,
          "total": 12,
          "scores": [
            1.0,
            0.0,
            1.0,
            0.0,
            1.0,
            1.0,
            1.0,
            1.0,
            0.0,
            1.0,
            0.0,
            1.0
          ]
        }
      }
    }
  },
  "detailed_results": [
    {
      "question_id": "GT001",
      "difficulty": "easy",
      "question": "Quantas internações foram registradas no total?",
      "ground_truth_sql": "SELECT COUNT(*) AS total_internacoes FROM internacoes;",
      "predicted_sql": "SELECT COUNT(\"N_AIH\") FROM internacoes;",
      "agent_success": true,
      "agent_execution_time": 10.48754096031189,
      "metrics": {
        "Exact Match (EM)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "ground_truth_original": "SELECT COUNT(*) AS total_internacoes FROM internacoes;",
            "predicted_original": "SELECT COUNT(\"N_AIH\") FROM internacoes;",
            "ground_truth_normalized": "SELECT COUNT(*) AS total_internacoes FROM internacoes",
            "predicted_normalized": "SELECT COUNT(\"N_AIH\") FROM internacoes",
            "match": false,
            "length_difference": -15,
            "first_difference_position": 13,
            "first_difference_context": {
              "ground_truth": "ECT COUNT(*) AS tota",
              "predicted": "ECT COUNT(\"N_AIH\") F"
            },
            "word_count_difference": -2,
            "differing_words": [
              {
                "position": 1,
                "ground_truth": "COUNT(*)",
                "predicted": "COUNT(\"N_AIH\")"
              },
              {
                "position": 2,
                "ground_truth": "AS",
                "predicted": "FROM"
              },
              {
                "position": 3,
                "ground_truth": "total_internacoes",
                "predicted": "internacoes"
              },
              {
                "position": 4,
                "ground_truth": "FROM",
                "predicted": "<EXTRA>"
              },
              {
                "position": 5,
                "ground_truth": "internacoes",
                "predicted": "<EXTRA>"
              }
            ],
            "common_errors": [
              "Quote mismatch (identifier quoting)"
            ]
          }
        },
        "Component Matching (CM)": {
          "score": 0.75,
          "is_correct": false,
          "error": null,
          "details": {
            "overall_score": 0.75,
            "component_scores": {
              "select": 0.0,
              "from": 1.0,
              "where": 1.0,
              "joins": 1.0,
              "group_by": 1.0,
              "order_by": 1.0,
              "having": 1.0,
              "limit": 1.0
            },
            "component_details": {
              "select": {
                "jaccard_similarity": 0.0,
                "gt_items": [
                  "COUNT ( * ) AS <alias>"
                ],
                "pred_items": [
                  "COUNT ( \"N_AIH\" )"
                ],
                "gt_normalized": [
                  "COUNT ( * ) AS <alias>"
                ],
                "pred_normalized": [
                  "COUNT ( \"N_AIH\" )"
                ],
                "exact_match": false
              },
              "from": {
                "gt_tables": [
                  "internacoes ;"
                ],
                "pred_tables": [
                  "internacoes ;"
                ],
                "intersection_count": 1,
                "union_count": 1,
                "jaccard_similarity": 1.0
              },
              "where": {
                "match": "both_empty"
              },
              "joins": {
                "match": "both_empty"
              },
              "group_by": {
                "match": "both_empty"
              },
              "order_by": {
                "match": "both_empty"
              },
              "having": {
                "match": "both_empty"
              },
              "limit": {
                "match": "both_empty"
              }
            },
            "ground_truth_components": {
              "select": "COUNT ( * ) total_internacoes",
              "from": "internacoes ;",
              "where": "",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": ""
            },
            "predicted_components": {
              "select": "COUNT ( \"N_AIH\" )",
              "from": "internacoes ;",
              "where": "",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": ""
            },
            "clause_weights": {
              "select": 0.25,
              "from": 0.2,
              "where": 0.2,
              "joins": 0.15,
              "group_by": 0.1,
              "order_by": 0.05,
              "having": 0.03,
              "limit": 0.02
            }
          }
        },
        "Execution Accuracy (EX)": {
          "score": 1.0,
          "is_correct": true,
          "error": null,
          "details": {
            "ground_truth_executed": true,
            "predicted_executed": true,
            "ground_truth_rows": 1,
            "predicted_rows": 1,
            "results_match": true,
            "comparison_details": {
              "gt_size": 1,
              "pred_size": 1,
              "normalized_match": true
            }
          }
        }
      }
    },
    {
      "question_id": "GT002",
      "difficulty": "easy",
      "question": "Quantas mortes foram registradas?",
      "ground_truth_sql": "SELECT COUNT(*) AS total_mortes FROM mortes;",
      "predicted_sql": "SELECT COUNT(*) AS total_mortes FROM mortes;",
      "agent_success": true,
      "agent_execution_time": 12.893805503845215,
      "metrics": {
        "Exact Match (EM)": {
          "score": 1.0,
          "is_correct": true,
          "error": null,
          "details": {
            "ground_truth_original": "SELECT COUNT(*) AS total_mortes FROM mortes;",
            "predicted_original": "SELECT COUNT(*) AS total_mortes FROM mortes;",
            "ground_truth_normalized": "SELECT COUNT(*) AS total_mortes FROM mortes",
            "predicted_normalized": "SELECT COUNT(*) AS total_mortes FROM mortes",
            "match": true
          }
        },
        "Component Matching (CM)": {
          "score": 1.0,
          "is_correct": true,
          "error": null,
          "details": {
            "overall_score": 1.0,
            "component_scores": {
              "select": 1.0,
              "from": 1.0,
              "where": 1.0,
              "joins": 1.0,
              "group_by": 1.0,
              "order_by": 1.0,
              "having": 1.0,
              "limit": 1.0
            },
            "component_details": {
              "select": {
                "jaccard_similarity": 1.0,
                "gt_items": [
                  "COUNT ( * ) AS <alias>"
                ],
                "pred_items": [
                  "COUNT ( * ) AS <alias>"
                ],
                "gt_normalized": [
                  "COUNT ( * ) AS <alias>"
                ],
                "pred_normalized": [
                  "COUNT ( * ) AS <alias>"
                ],
                "exact_match": true
              },
              "from": {
                "gt_tables": [
                  "mortes ;"
                ],
                "pred_tables": [
                  "mortes ;"
                ],
                "intersection_count": 1,
                "union_count": 1,
                "jaccard_similarity": 1.0
              },
              "where": {
                "match": "both_empty"
              },
              "joins": {
                "match": "both_empty"
              },
              "group_by": {
                "match": "both_empty"
              },
              "order_by": {
                "match": "both_empty"
              },
              "having": {
                "match": "both_empty"
              },
              "limit": {
                "match": "both_empty"
              }
            },
            "ground_truth_components": {
              "select": "COUNT ( * ) total_mortes",
              "from": "mortes ;",
              "where": "",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": ""
            },
            "predicted_components": {
              "select": "COUNT ( * ) total_mortes",
              "from": "mortes ;",
              "where": "",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": ""
            },
            "clause_weights": {
              "select": 0.25,
              "from": 0.2,
              "where": 0.2,
              "joins": 0.15,
              "group_by": 0.1,
              "order_by": 0.05,
              "having": 0.03,
              "limit": 0.02
            }
          }
        },
        "Execution Accuracy (EX)": {
          "score": 1.0,
          "is_correct": true,
          "error": null,
          "details": {
            "ground_truth_executed": true,
            "predicted_executed": true,
            "ground_truth_rows": 1,
            "predicted_rows": 1,
            "results_match": true,
            "comparison_details": {
              "gt_size": 1,
              "pred_size": 1,
              "normalized_match": true
            }
          }
        }
      }
    },
    {
      "question_id": "GT003",
      "difficulty": "easy",
      "question": "Quantos procedimentos diferentes existem cadastrados?",
      "ground_truth_sql": "SELECT COUNT(*) AS total_procedimentos FROM procedimentos;",
      "predicted_sql": "SELECT COUNT(DISTINCT \"PROC_REA\") FROM procedimentos;",
      "agent_success": true,
      "agent_execution_time": 7.936936140060425,
      "metrics": {
        "Exact Match (EM)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "ground_truth_original": "SELECT COUNT(*) AS total_procedimentos FROM procedimentos;",
            "predicted_original": "SELECT COUNT(DISTINCT \"PROC_REA\") FROM procedimentos;",
            "ground_truth_normalized": "SELECT COUNT(*) AS total_procedimentos FROM procedimentos",
            "predicted_normalized": "SELECT COUNT(DISTINCT \"PROC_REA\") FROM procedimentos",
            "match": false,
            "length_difference": -5,
            "first_difference_position": 13,
            "first_difference_context": {
              "ground_truth": "ECT COUNT(*) AS tota",
              "predicted": "ECT COUNT(DISTINCT \""
            },
            "word_count_difference": -1,
            "differing_words": [
              {
                "position": 1,
                "ground_truth": "COUNT(*)",
                "predicted": "COUNT(DISTINCT"
              },
              {
                "position": 2,
                "ground_truth": "AS",
                "predicted": "\"PROC_REA\")"
              },
              {
                "position": 3,
                "ground_truth": "total_procedimentos",
                "predicted": "FROM"
              },
              {
                "position": 4,
                "ground_truth": "FROM",
                "predicted": "procedimentos"
              },
              {
                "position": 5,
                "ground_truth": "procedimentos",
                "predicted": "<EXTRA>"
              }
            ],
            "common_errors": [
              "Quote mismatch (identifier quoting)"
            ]
          }
        },
        "Component Matching (CM)": {
          "score": 0.75,
          "is_correct": false,
          "error": null,
          "details": {
            "overall_score": 0.75,
            "component_scores": {
              "select": 0.0,
              "from": 1.0,
              "where": 1.0,
              "joins": 1.0,
              "group_by": 1.0,
              "order_by": 1.0,
              "having": 1.0,
              "limit": 1.0
            },
            "component_details": {
              "select": {
                "jaccard_similarity": 0.0,
                "gt_items": [
                  "COUNT ( * ) AS <alias>"
                ],
                "pred_items": [
                  "COUNT ( DISTINCT \"PROC_REA\" )"
                ],
                "gt_normalized": [
                  "COUNT ( * ) AS <alias>"
                ],
                "pred_normalized": [
                  "COUNT ( DISTINCT \"PROC_REA\" )"
                ],
                "exact_match": false
              },
              "from": {
                "gt_tables": [
                  "procedimentos ;"
                ],
                "pred_tables": [
                  "procedimentos ;"
                ],
                "intersection_count": 1,
                "union_count": 1,
                "jaccard_similarity": 1.0
              },
              "where": {
                "match": "both_empty"
              },
              "joins": {
                "match": "both_empty"
              },
              "group_by": {
                "match": "both_empty"
              },
              "order_by": {
                "match": "both_empty"
              },
              "having": {
                "match": "both_empty"
              },
              "limit": {
                "match": "both_empty"
              }
            },
            "ground_truth_components": {
              "select": "COUNT ( * ) total_procedimentos",
              "from": "procedimentos ;",
              "where": "",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": ""
            },
            "predicted_components": {
              "select": "COUNT ( DISTINCT \"PROC_REA\" )",
              "from": "procedimentos ;",
              "where": "",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": ""
            },
            "clause_weights": {
              "select": 0.25,
              "from": 0.2,
              "where": 0.2,
              "joins": 0.15,
              "group_by": 0.1,
              "order_by": 0.05,
              "having": 0.03,
              "limit": 0.02
            }
          }
        },
        "Execution Accuracy (EX)": {
          "score": 1.0,
          "is_correct": true,
          "error": null,
          "details": {
            "ground_truth_executed": true,
            "predicted_executed": true,
            "ground_truth_rows": 1,
            "predicted_rows": 1,
            "results_match": true,
            "comparison_details": {
              "gt_size": 1,
              "pred_size": 1,
              "normalized_match": true
            }
          }
        }
      }
    },
    {
      "question_id": "GT004",
      "difficulty": "easy",
      "question": "Quantos códigos CID-10 estão disponíveis?",
      "ground_truth_sql": "SELECT COUNT(*) AS total_cids FROM cid10;",
      "predicted_sql": "SELECT COUNT(\"CID\") FROM cid10;",
      "agent_success": true,
      "agent_execution_time": 7.6763224601745605,
      "metrics": {
        "Exact Match (EM)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "ground_truth_original": "SELECT COUNT(*) AS total_cids FROM cid10;",
            "predicted_original": "SELECT COUNT(\"CID\") FROM cid10;",
            "ground_truth_normalized": "SELECT COUNT(*) AS total_cids FROM cid10",
            "predicted_normalized": "SELECT COUNT(\"CID\") FROM cid10",
            "match": false,
            "length_difference": -10,
            "first_difference_position": 13,
            "first_difference_context": {
              "ground_truth": "ECT COUNT(*) AS tota",
              "predicted": "ECT COUNT(\"CID\") FRO"
            },
            "word_count_difference": -2,
            "differing_words": [
              {
                "position": 1,
                "ground_truth": "COUNT(*)",
                "predicted": "COUNT(\"CID\")"
              },
              {
                "position": 2,
                "ground_truth": "AS",
                "predicted": "FROM"
              },
              {
                "position": 3,
                "ground_truth": "total_cids",
                "predicted": "cid10"
              },
              {
                "position": 4,
                "ground_truth": "FROM",
                "predicted": "<EXTRA>"
              },
              {
                "position": 5,
                "ground_truth": "cid10",
                "predicted": "<EXTRA>"
              }
            ],
            "common_errors": [
              "Quote mismatch (identifier quoting)"
            ]
          }
        },
        "Component Matching (CM)": {
          "score": 0.75,
          "is_correct": false,
          "error": null,
          "details": {
            "overall_score": 0.75,
            "component_scores": {
              "select": 0.0,
              "from": 1.0,
              "where": 1.0,
              "joins": 1.0,
              "group_by": 1.0,
              "order_by": 1.0,
              "having": 1.0,
              "limit": 1.0
            },
            "component_details": {
              "select": {
                "jaccard_similarity": 0.0,
                "gt_items": [
                  "COUNT ( * ) AS <alias>"
                ],
                "pred_items": [
                  "COUNT ( \"CID\" )"
                ],
                "gt_normalized": [
                  "COUNT ( * ) AS <alias>"
                ],
                "pred_normalized": [
                  "COUNT ( \"CID\" )"
                ],
                "exact_match": false
              },
              "from": {
                "gt_tables": [
                  "cid10 ;"
                ],
                "pred_tables": [
                  "cid10 ;"
                ],
                "intersection_count": 1,
                "union_count": 1,
                "jaccard_similarity": 1.0
              },
              "where": {
                "match": "both_empty"
              },
              "joins": {
                "match": "both_empty"
              },
              "group_by": {
                "match": "both_empty"
              },
              "order_by": {
                "match": "both_empty"
              },
              "having": {
                "match": "both_empty"
              },
              "limit": {
                "match": "both_empty"
              }
            },
            "ground_truth_components": {
              "select": "COUNT ( * ) total_cids",
              "from": "cid10 ;",
              "where": "",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": ""
            },
            "predicted_components": {
              "select": "COUNT ( \"CID\" )",
              "from": "cid10 ;",
              "where": "",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": ""
            },
            "clause_weights": {
              "select": 0.25,
              "from": 0.2,
              "where": 0.2,
              "joins": 0.15,
              "group_by": 0.1,
              "order_by": 0.05,
              "having": 0.03,
              "limit": 0.02
            }
          }
        },
        "Execution Accuracy (EX)": {
          "score": 1.0,
          "is_correct": true,
          "error": null,
          "details": {
            "ground_truth_executed": true,
            "predicted_executed": true,
            "ground_truth_rows": 1,
            "predicted_rows": 1,
            "results_match": true,
            "comparison_details": {
              "gt_size": 1,
              "pred_size": 1,
              "normalized_match": true
            }
          }
        }
      }
    },
    {
      "question_id": "GT005",
      "difficulty": "easy",
      "question": "Quantos hospitais estão cadastrados?",
      "ground_truth_sql": "SELECT COUNT(*) AS total_hospitais FROM hospital;",
      "predicted_sql": "SELECT COUNT(*) FROM hospital;",
      "agent_success": true,
      "agent_execution_time": 6.843672513961792,
      "metrics": {
        "Exact Match (EM)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "ground_truth_original": "SELECT COUNT(*) AS total_hospitais FROM hospital;",
            "predicted_original": "SELECT COUNT(*) FROM hospital;",
            "ground_truth_normalized": "SELECT COUNT(*) AS total_hospitais FROM hospital",
            "predicted_normalized": "SELECT COUNT(*) FROM hospital",
            "match": false,
            "length_difference": -19,
            "first_difference_position": 16,
            "first_difference_context": {
              "ground_truth": " COUNT(*) AS total_h",
              "predicted": " COUNT(*) FROM hospi"
            },
            "word_count_difference": -2,
            "differing_words": [
              {
                "position": 2,
                "ground_truth": "AS",
                "predicted": "FROM"
              },
              {
                "position": 3,
                "ground_truth": "total_hospitais",
                "predicted": "hospital"
              },
              {
                "position": 4,
                "ground_truth": "FROM",
                "predicted": "<EXTRA>"
              },
              {
                "position": 5,
                "ground_truth": "hospital",
                "predicted": "<EXTRA>"
              }
            ],
            "common_errors": []
          }
        },
        "Component Matching (CM)": {
          "score": 0.925,
          "is_correct": true,
          "error": null,
          "details": {
            "overall_score": 0.925,
            "component_scores": {
              "select": 0.7,
              "from": 1.0,
              "where": 1.0,
              "joins": 1.0,
              "group_by": 1.0,
              "order_by": 1.0,
              "having": 1.0,
              "limit": 1.0
            },
            "component_details": {
              "select": {
                "jaccard_similarity": 0.7,
                "gt_items": [
                  "COUNT ( * ) AS <alias>"
                ],
                "pred_items": [
                  "COUNT ( * )"
                ],
                "gt_normalized": [
                  "COUNT ( * ) AS <alias>"
                ],
                "pred_normalized": [
                  "COUNT ( * )"
                ],
                "exact_match": false
              },
              "from": {
                "gt_tables": [
                  "hospital ;"
                ],
                "pred_tables": [
                  "hospital ;"
                ],
                "intersection_count": 1,
                "union_count": 1,
                "jaccard_similarity": 1.0
              },
              "where": {
                "match": "both_empty"
              },
              "joins": {
                "match": "both_empty"
              },
              "group_by": {
                "match": "both_empty"
              },
              "order_by": {
                "match": "both_empty"
              },
              "having": {
                "match": "both_empty"
              },
              "limit": {
                "match": "both_empty"
              }
            },
            "ground_truth_components": {
              "select": "COUNT ( * ) total_hospitais",
              "from": "hospital ;",
              "where": "",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": ""
            },
            "predicted_components": {
              "select": "COUNT ( * )",
              "from": "hospital ;",
              "where": "",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": ""
            },
            "clause_weights": {
              "select": 0.25,
              "from": 0.2,
              "where": 0.2,
              "joins": 0.15,
              "group_by": 0.1,
              "order_by": 0.05,
              "having": 0.03,
              "limit": 0.02
            }
          }
        },
        "Execution Accuracy (EX)": {
          "score": 1.0,
          "is_correct": true,
          "error": null,
          "details": {
            "ground_truth_executed": true,
            "predicted_executed": true,
            "ground_truth_rows": 1,
            "predicted_rows": 1,
            "results_match": true,
            "comparison_details": {
              "gt_size": 1,
              "pred_size": 1,
              "normalized_match": true
            }
          }
        }
      }
    },
    {
      "question_id": "GT006",
      "difficulty": "easy",
      "question": "Quantos municípios têm dados demográficos do IBGE?",
      "ground_truth_sql": "SELECT COUNT(*) AS total_municipios FROM dado_ibge;",
      "predicted_sql": "SELECT COUNT(*) FROM dado_ibge WHERE \"populacao\" IS NOT NULL;",
      "agent_success": true,
      "agent_execution_time": 9.939277410507202,
      "metrics": {
        "Exact Match (EM)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "ground_truth_original": "SELECT COUNT(*) AS total_municipios FROM dado_ibge;",
            "predicted_original": "SELECT COUNT(*) FROM dado_ibge WHERE \"populacao\" IS NOT NULL;",
            "ground_truth_normalized": "SELECT COUNT(*) AS total_municipios FROM dado_ibge",
            "predicted_normalized": "SELECT COUNT(*) FROM dado_ibge WHERE \"populacao\" IS NOT NULL",
            "match": false,
            "length_difference": 10,
            "first_difference_position": 16,
            "first_difference_context": {
              "ground_truth": " COUNT(*) AS total_m",
              "predicted": " COUNT(*) FROM dado_"
            },
            "word_count_difference": 3,
            "differing_words": [
              {
                "position": 2,
                "ground_truth": "AS",
                "predicted": "FROM"
              },
              {
                "position": 3,
                "ground_truth": "total_municipios",
                "predicted": "dado_ibge"
              },
              {
                "position": 4,
                "ground_truth": "FROM",
                "predicted": "WHERE"
              },
              {
                "position": 5,
                "ground_truth": "dado_ibge",
                "predicted": "\"populacao\""
              },
              {
                "position": 6,
                "ground_truth": "<MISSING>",
                "predicted": "IS"
              }
            ],
            "common_errors": [
              "Extra WHERE clause",
              "Quote mismatch (identifier quoting)"
            ]
          }
        },
        "Component Matching (CM)": {
          "score": 0.525,
          "is_correct": false,
          "error": null,
          "details": {
            "overall_score": 0.525,
            "component_scores": {
              "select": 0.7,
              "from": 0.0,
              "where": 0.0,
              "joins": 1.0,
              "group_by": 1.0,
              "order_by": 1.0,
              "having": 1.0,
              "limit": 1.0
            },
            "component_details": {
              "select": {
                "jaccard_similarity": 0.7,
                "gt_items": [
                  "COUNT ( * ) AS <alias>"
                ],
                "pred_items": [
                  "COUNT ( * )"
                ],
                "gt_normalized": [
                  "COUNT ( * ) AS <alias>"
                ],
                "pred_normalized": [
                  "COUNT ( * )"
                ],
                "exact_match": false
              },
              "from": {
                "gt_tables": [
                  "dado_ibge ;"
                ],
                "pred_tables": [
                  "dado_ibge"
                ],
                "intersection_count": 0,
                "union_count": 2,
                "jaccard_similarity": 0.0
              },
              "where": {
                "match": "one_empty"
              },
              "joins": {
                "match": "both_empty"
              },
              "group_by": {
                "match": "both_empty"
              },
              "order_by": {
                "match": "both_empty"
              },
              "having": {
                "match": "both_empty"
              },
              "limit": {
                "match": "both_empty"
              }
            },
            "ground_truth_components": {
              "select": "COUNT ( * ) total_municipios",
              "from": "dado_ibge ;",
              "where": "",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": ""
            },
            "predicted_components": {
              "select": "COUNT ( * )",
              "from": "dado_ibge",
              "where": "\"populacao\" ;",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": ""
            },
            "clause_weights": {
              "select": 0.25,
              "from": 0.2,
              "where": 0.2,
              "joins": 0.15,
              "group_by": 0.1,
              "order_by": 0.05,
              "having": 0.03,
              "limit": 0.02
            }
          }
        },
        "Execution Accuracy (EX)": {
          "score": 1.0,
          "is_correct": true,
          "error": null,
          "details": {
            "ground_truth_executed": true,
            "predicted_executed": true,
            "ground_truth_rows": 1,
            "predicted_rows": 1,
            "results_match": true,
            "comparison_details": {
              "gt_size": 1,
              "pred_size": 1,
              "normalized_match": true
            }
          }
        }
      }
    },
    {
      "question_id": "GT007",
      "difficulty": "easy",
      "question": "Quantos registros de UTI existem?",
      "ground_truth_sql": "SELECT COUNT(*) AS total_uti FROM uti_detalhes;",
      "predicted_sql": "SELECT COUNT(*) FROM uti_detalhes;",
      "agent_success": true,
      "agent_execution_time": 7.745086669921875,
      "metrics": {
        "Exact Match (EM)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "ground_truth_original": "SELECT COUNT(*) AS total_uti FROM uti_detalhes;",
            "predicted_original": "SELECT COUNT(*) FROM uti_detalhes;",
            "ground_truth_normalized": "SELECT COUNT(*) AS total_uti FROM uti_detalhes",
            "predicted_normalized": "SELECT COUNT(*) FROM uti_detalhes",
            "match": false,
            "length_difference": -13,
            "first_difference_position": 16,
            "first_difference_context": {
              "ground_truth": " COUNT(*) AS total_u",
              "predicted": " COUNT(*) FROM uti_d"
            },
            "word_count_difference": -2,
            "differing_words": [
              {
                "position": 2,
                "ground_truth": "AS",
                "predicted": "FROM"
              },
              {
                "position": 3,
                "ground_truth": "total_uti",
                "predicted": "uti_detalhes"
              },
              {
                "position": 4,
                "ground_truth": "FROM",
                "predicted": "<EXTRA>"
              },
              {
                "position": 5,
                "ground_truth": "uti_detalhes",
                "predicted": "<EXTRA>"
              }
            ],
            "common_errors": []
          }
        },
        "Component Matching (CM)": {
          "score": 0.925,
          "is_correct": true,
          "error": null,
          "details": {
            "overall_score": 0.925,
            "component_scores": {
              "select": 0.7,
              "from": 1.0,
              "where": 1.0,
              "joins": 1.0,
              "group_by": 1.0,
              "order_by": 1.0,
              "having": 1.0,
              "limit": 1.0
            },
            "component_details": {
              "select": {
                "jaccard_similarity": 0.7,
                "gt_items": [
                  "COUNT ( * ) AS <alias>"
                ],
                "pred_items": [
                  "COUNT ( * )"
                ],
                "gt_normalized": [
                  "COUNT ( * ) AS <alias>"
                ],
                "pred_normalized": [
                  "COUNT ( * )"
                ],
                "exact_match": false
              },
              "from": {
                "gt_tables": [
                  "uti_detalhes ;"
                ],
                "pred_tables": [
                  "uti_detalhes ;"
                ],
                "intersection_count": 1,
                "union_count": 1,
                "jaccard_similarity": 1.0
              },
              "where": {
                "match": "both_empty"
              },
              "joins": {
                "match": "both_empty"
              },
              "group_by": {
                "match": "both_empty"
              },
              "order_by": {
                "match": "both_empty"
              },
              "having": {
                "match": "both_empty"
              },
              "limit": {
                "match": "both_empty"
              }
            },
            "ground_truth_components": {
              "select": "COUNT ( * ) total_uti",
              "from": "uti_detalhes ;",
              "where": "",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": ""
            },
            "predicted_components": {
              "select": "COUNT ( * )",
              "from": "uti_detalhes ;",
              "where": "",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": ""
            },
            "clause_weights": {
              "select": 0.25,
              "from": 0.2,
              "where": 0.2,
              "joins": 0.15,
              "group_by": 0.1,
              "order_by": 0.05,
              "having": 0.03,
              "limit": 0.02
            }
          }
        },
        "Execution Accuracy (EX)": {
          "score": 1.0,
          "is_correct": true,
          "error": null,
          "details": {
            "ground_truth_executed": true,
            "predicted_executed": true,
            "ground_truth_rows": 1,
            "predicted_rows": 1,
            "results_match": true,
            "comparison_details": {
              "gt_size": 1,
              "pred_size": 1,
              "normalized_match": true
            }
          }
        }
      }
    },
    {
      "question_id": "GT008",
      "difficulty": "easy",
      "question": "Quantos casos de condições especiais foram registrados?",
      "ground_truth_sql": "SELECT COUNT(*) AS total_condicoes FROM condicoes_especificas;",
      "predicted_sql": "SELECT COUNT(*) FROM condicoes_especificas;",
      "agent_success": true,
      "agent_execution_time": 7.537043809890747,
      "metrics": {
        "Exact Match (EM)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "ground_truth_original": "SELECT COUNT(*) AS total_condicoes FROM condicoes_especificas;",
            "predicted_original": "SELECT COUNT(*) FROM condicoes_especificas;",
            "ground_truth_normalized": "SELECT COUNT(*) AS total_condicoes FROM condicoes_especificas",
            "predicted_normalized": "SELECT COUNT(*) FROM condicoes_especificas",
            "match": false,
            "length_difference": -19,
            "first_difference_position": 16,
            "first_difference_context": {
              "ground_truth": " COUNT(*) AS total_c",
              "predicted": " COUNT(*) FROM condi"
            },
            "word_count_difference": -2,
            "differing_words": [
              {
                "position": 2,
                "ground_truth": "AS",
                "predicted": "FROM"
              },
              {
                "position": 3,
                "ground_truth": "total_condicoes",
                "predicted": "condicoes_especificas"
              },
              {
                "position": 4,
                "ground_truth": "FROM",
                "predicted": "<EXTRA>"
              },
              {
                "position": 5,
                "ground_truth": "condicoes_especificas",
                "predicted": "<EXTRA>"
              }
            ],
            "common_errors": []
          }
        },
        "Component Matching (CM)": {
          "score": 0.925,
          "is_correct": true,
          "error": null,
          "details": {
            "overall_score": 0.925,
            "component_scores": {
              "select": 0.7,
              "from": 1.0,
              "where": 1.0,
              "joins": 1.0,
              "group_by": 1.0,
              "order_by": 1.0,
              "having": 1.0,
              "limit": 1.0
            },
            "component_details": {
              "select": {
                "jaccard_similarity": 0.7,
                "gt_items": [
                  "COUNT ( * ) AS <alias>"
                ],
                "pred_items": [
                  "COUNT ( * )"
                ],
                "gt_normalized": [
                  "COUNT ( * ) AS <alias>"
                ],
                "pred_normalized": [
                  "COUNT ( * )"
                ],
                "exact_match": false
              },
              "from": {
                "gt_tables": [
                  "condicoes_especificas ;"
                ],
                "pred_tables": [
                  "condicoes_especificas ;"
                ],
                "intersection_count": 1,
                "union_count": 1,
                "jaccard_similarity": 1.0
              },
              "where": {
                "match": "both_empty"
              },
              "joins": {
                "match": "both_empty"
              },
              "group_by": {
                "match": "both_empty"
              },
              "order_by": {
                "match": "both_empty"
              },
              "having": {
                "match": "both_empty"
              },
              "limit": {
                "match": "both_empty"
              }
            },
            "ground_truth_components": {
              "select": "COUNT ( * ) total_condicoes",
              "from": "condicoes_especificas ;",
              "where": "",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": ""
            },
            "predicted_components": {
              "select": "COUNT ( * )",
              "from": "condicoes_especificas ;",
              "where": "",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": ""
            },
            "clause_weights": {
              "select": 0.25,
              "from": 0.2,
              "where": 0.2,
              "joins": 0.15,
              "group_by": 0.1,
              "order_by": 0.05,
              "having": 0.03,
              "limit": 0.02
            }
          }
        },
        "Execution Accuracy (EX)": {
          "score": 1.0,
          "is_correct": true,
          "error": null,
          "details": {
            "ground_truth_executed": true,
            "predicted_executed": true,
            "ground_truth_rows": 1,
            "predicted_rows": 1,
            "results_match": true,
            "comparison_details": {
              "gt_size": 1,
              "pred_size": 1,
              "normalized_match": true
            }
          }
        }
      }
    },
    {
      "question_id": "GT009",
      "difficulty": "easy",
      "question": "Quantos registros CBOR existem?",
      "ground_truth_sql": "SELECT COUNT(*) AS total_cbor FROM cbor;",
      "predicted_sql": "SELECT COUNT(*) FROM cbor;",
      "agent_success": true,
      "agent_execution_time": 6.328214168548584,
      "metrics": {
        "Exact Match (EM)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "ground_truth_original": "SELECT COUNT(*) AS total_cbor FROM cbor;",
            "predicted_original": "SELECT COUNT(*) FROM cbor;",
            "ground_truth_normalized": "SELECT COUNT(*) AS total_cbor FROM cbor",
            "predicted_normalized": "SELECT COUNT(*) FROM cbor",
            "match": false,
            "length_difference": -14,
            "first_difference_position": 16,
            "first_difference_context": {
              "ground_truth": " COUNT(*) AS total_c",
              "predicted": " COUNT(*) FROM cbor"
            },
            "word_count_difference": -2,
            "differing_words": [
              {
                "position": 2,
                "ground_truth": "AS",
                "predicted": "FROM"
              },
              {
                "position": 3,
                "ground_truth": "total_cbor",
                "predicted": "cbor"
              },
              {
                "position": 4,
                "ground_truth": "FROM",
                "predicted": "<EXTRA>"
              },
              {
                "position": 5,
                "ground_truth": "cbor",
                "predicted": "<EXTRA>"
              }
            ],
            "common_errors": []
          }
        },
        "Component Matching (CM)": {
          "score": 0.925,
          "is_correct": true,
          "error": null,
          "details": {
            "overall_score": 0.925,
            "component_scores": {
              "select": 0.7,
              "from": 1.0,
              "where": 1.0,
              "joins": 1.0,
              "group_by": 1.0,
              "order_by": 1.0,
              "having": 1.0,
              "limit": 1.0
            },
            "component_details": {
              "select": {
                "jaccard_similarity": 0.7,
                "gt_items": [
                  "COUNT ( * ) AS <alias>"
                ],
                "pred_items": [
                  "COUNT ( * )"
                ],
                "gt_normalized": [
                  "COUNT ( * ) AS <alias>"
                ],
                "pred_normalized": [
                  "COUNT ( * )"
                ],
                "exact_match": false
              },
              "from": {
                "gt_tables": [
                  "cbor ;"
                ],
                "pred_tables": [
                  "cbor ;"
                ],
                "intersection_count": 1,
                "union_count": 1,
                "jaccard_similarity": 1.0
              },
              "where": {
                "match": "both_empty"
              },
              "joins": {
                "match": "both_empty"
              },
              "group_by": {
                "match": "both_empty"
              },
              "order_by": {
                "match": "both_empty"
              },
              "having": {
                "match": "both_empty"
              },
              "limit": {
                "match": "both_empty"
              }
            },
            "ground_truth_components": {
              "select": "COUNT ( * ) total_cbor",
              "from": "cbor ;",
              "where": "",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": ""
            },
            "predicted_components": {
              "select": "COUNT ( * )",
              "from": "cbor ;",
              "where": "",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": ""
            },
            "clause_weights": {
              "select": 0.25,
              "from": 0.2,
              "where": 0.2,
              "joins": 0.15,
              "group_by": 0.1,
              "order_by": 0.05,
              "having": 0.03,
              "limit": 0.02
            }
          }
        },
        "Execution Accuracy (EX)": {
          "score": 1.0,
          "is_correct": true,
          "error": null,
          "details": {
            "ground_truth_executed": true,
            "predicted_executed": true,
            "ground_truth_rows": 1,
            "predicted_rows": 1,
            "results_match": true,
            "comparison_details": {
              "gt_size": 1,
              "pred_size": 1,
              "normalized_match": true
            }
          }
        }
      }
    },
    {
      "question_id": "GT010",
      "difficulty": "easy",
      "question": "Quantos casos obstétricos foram registrados?",
      "ground_truth_sql": "SELECT COUNT(*) AS total_obstetricos FROM obstetricos;",
      "predicted_sql": "SELECT COUNT(*) FROM obstetricos;",
      "agent_success": true,
      "agent_execution_time": 7.249379396438599,
      "metrics": {
        "Exact Match (EM)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "ground_truth_original": "SELECT COUNT(*) AS total_obstetricos FROM obstetricos;",
            "predicted_original": "SELECT COUNT(*) FROM obstetricos;",
            "ground_truth_normalized": "SELECT COUNT(*) AS total_obstetricos FROM obstetricos",
            "predicted_normalized": "SELECT COUNT(*) FROM obstetricos",
            "match": false,
            "length_difference": -21,
            "first_difference_position": 16,
            "first_difference_context": {
              "ground_truth": " COUNT(*) AS total_o",
              "predicted": " COUNT(*) FROM obste"
            },
            "word_count_difference": -2,
            "differing_words": [
              {
                "position": 2,
                "ground_truth": "AS",
                "predicted": "FROM"
              },
              {
                "position": 3,
                "ground_truth": "total_obstetricos",
                "predicted": "obstetricos"
              },
              {
                "position": 4,
                "ground_truth": "FROM",
                "predicted": "<EXTRA>"
              },
              {
                "position": 5,
                "ground_truth": "obstetricos",
                "predicted": "<EXTRA>"
              }
            ],
            "common_errors": []
          }
        },
        "Component Matching (CM)": {
          "score": 0.925,
          "is_correct": true,
          "error": null,
          "details": {
            "overall_score": 0.925,
            "component_scores": {
              "select": 0.7,
              "from": 1.0,
              "where": 1.0,
              "joins": 1.0,
              "group_by": 1.0,
              "order_by": 1.0,
              "having": 1.0,
              "limit": 1.0
            },
            "component_details": {
              "select": {
                "jaccard_similarity": 0.7,
                "gt_items": [
                  "COUNT ( * ) AS <alias>"
                ],
                "pred_items": [
                  "COUNT ( * )"
                ],
                "gt_normalized": [
                  "COUNT ( * ) AS <alias>"
                ],
                "pred_normalized": [
                  "COUNT ( * )"
                ],
                "exact_match": false
              },
              "from": {
                "gt_tables": [
                  "obstetricos ;"
                ],
                "pred_tables": [
                  "obstetricos ;"
                ],
                "intersection_count": 1,
                "union_count": 1,
                "jaccard_similarity": 1.0
              },
              "where": {
                "match": "both_empty"
              },
              "joins": {
                "match": "both_empty"
              },
              "group_by": {
                "match": "both_empty"
              },
              "order_by": {
                "match": "both_empty"
              },
              "having": {
                "match": "both_empty"
              },
              "limit": {
                "match": "both_empty"
              }
            },
            "ground_truth_components": {
              "select": "COUNT ( * ) total_obstetricos",
              "from": "obstetricos ;",
              "where": "",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": ""
            },
            "predicted_components": {
              "select": "COUNT ( * )",
              "from": "obstetricos ;",
              "where": "",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": ""
            },
            "clause_weights": {
              "select": 0.25,
              "from": 0.2,
              "where": 0.2,
              "joins": 0.15,
              "group_by": 0.1,
              "order_by": 0.05,
              "having": 0.03,
              "limit": 0.02
            }
          }
        },
        "Execution Accuracy (EX)": {
          "score": 1.0,
          "is_correct": true,
          "error": null,
          "details": {
            "ground_truth_executed": true,
            "predicted_executed": true,
            "ground_truth_rows": 1,
            "predicted_rows": 1,
            "results_match": true,
            "comparison_details": {
              "gt_size": 1,
              "pred_size": 1,
              "normalized_match": true
            }
          }
        }
      }
    },
    {
      "question_id": "GT011",
      "difficulty": "easy",
      "question": "Quantos registros de vínculo previdenciário temos?",
      "ground_truth_sql": "SELECT COUNT(*) AS total_vincprev FROM vincprev;",
      "predicted_sql": "SELECT COUNT(*) FROM vincprev;",
      "agent_success": true,
      "agent_execution_time": 6.542565822601318,
      "metrics": {
        "Exact Match (EM)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "ground_truth_original": "SELECT COUNT(*) AS total_vincprev FROM vincprev;",
            "predicted_original": "SELECT COUNT(*) FROM vincprev;",
            "ground_truth_normalized": "SELECT COUNT(*) AS total_vincprev FROM vincprev",
            "predicted_normalized": "SELECT COUNT(*) FROM vincprev",
            "match": false,
            "length_difference": -18,
            "first_difference_position": 16,
            "first_difference_context": {
              "ground_truth": " COUNT(*) AS total_v",
              "predicted": " COUNT(*) FROM vincp"
            },
            "word_count_difference": -2,
            "differing_words": [
              {
                "position": 2,
                "ground_truth": "AS",
                "predicted": "FROM"
              },
              {
                "position": 3,
                "ground_truth": "total_vincprev",
                "predicted": "vincprev"
              },
              {
                "position": 4,
                "ground_truth": "FROM",
                "predicted": "<EXTRA>"
              },
              {
                "position": 5,
                "ground_truth": "vincprev",
                "predicted": "<EXTRA>"
              }
            ],
            "common_errors": []
          }
        },
        "Component Matching (CM)": {
          "score": 0.925,
          "is_correct": true,
          "error": null,
          "details": {
            "overall_score": 0.925,
            "component_scores": {
              "select": 0.7,
              "from": 1.0,
              "where": 1.0,
              "joins": 1.0,
              "group_by": 1.0,
              "order_by": 1.0,
              "having": 1.0,
              "limit": 1.0
            },
            "component_details": {
              "select": {
                "jaccard_similarity": 0.7,
                "gt_items": [
                  "COUNT ( * ) AS <alias>"
                ],
                "pred_items": [
                  "COUNT ( * )"
                ],
                "gt_normalized": [
                  "COUNT ( * ) AS <alias>"
                ],
                "pred_normalized": [
                  "COUNT ( * )"
                ],
                "exact_match": false
              },
              "from": {
                "gt_tables": [
                  "vincprev ;"
                ],
                "pred_tables": [
                  "vincprev ;"
                ],
                "intersection_count": 1,
                "union_count": 1,
                "jaccard_similarity": 1.0
              },
              "where": {
                "match": "both_empty"
              },
              "joins": {
                "match": "both_empty"
              },
              "group_by": {
                "match": "both_empty"
              },
              "order_by": {
                "match": "both_empty"
              },
              "having": {
                "match": "both_empty"
              },
              "limit": {
                "match": "both_empty"
              }
            },
            "ground_truth_components": {
              "select": "COUNT ( * ) total_vincprev",
              "from": "vincprev ;",
              "where": "",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": ""
            },
            "predicted_components": {
              "select": "COUNT ( * )",
              "from": "vincprev ;",
              "where": "",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": ""
            },
            "clause_weights": {
              "select": 0.25,
              "from": 0.2,
              "where": 0.2,
              "joins": 0.15,
              "group_by": 0.1,
              "order_by": 0.05,
              "having": 0.03,
              "limit": 0.02
            }
          }
        },
        "Execution Accuracy (EX)": {
          "score": 1.0,
          "is_correct": true,
          "error": null,
          "details": {
            "ground_truth_executed": true,
            "predicted_executed": true,
            "ground_truth_rows": 1,
            "predicted_rows": 1,
            "results_match": true,
            "comparison_details": {
              "gt_size": 1,
              "pred_size": 1,
              "normalized_match": true
            }
          }
        }
      }
    },
    {
      "question_id": "GT012",
      "difficulty": "easy",
      "question": "Quantos registros de instrução educacional existem?",
      "ground_truth_sql": "SELECT COUNT(*) AS total_instrucao FROM instrucao;",
      "predicted_sql": "SELECT COUNT(*) FROM instrucao;",
      "agent_success": true,
      "agent_execution_time": 6.717947244644165,
      "metrics": {
        "Exact Match (EM)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "ground_truth_original": "SELECT COUNT(*) AS total_instrucao FROM instrucao;",
            "predicted_original": "SELECT COUNT(*) FROM instrucao;",
            "ground_truth_normalized": "SELECT COUNT(*) AS total_instrucao FROM instrucao",
            "predicted_normalized": "SELECT COUNT(*) FROM instrucao",
            "match": false,
            "length_difference": -19,
            "first_difference_position": 16,
            "first_difference_context": {
              "ground_truth": " COUNT(*) AS total_i",
              "predicted": " COUNT(*) FROM instr"
            },
            "word_count_difference": -2,
            "differing_words": [
              {
                "position": 2,
                "ground_truth": "AS",
                "predicted": "FROM"
              },
              {
                "position": 3,
                "ground_truth": "total_instrucao",
                "predicted": "instrucao"
              },
              {
                "position": 4,
                "ground_truth": "FROM",
                "predicted": "<EXTRA>"
              },
              {
                "position": 5,
                "ground_truth": "instrucao",
                "predicted": "<EXTRA>"
              }
            ],
            "common_errors": []
          }
        },
        "Component Matching (CM)": {
          "score": 0.925,
          "is_correct": true,
          "error": null,
          "details": {
            "overall_score": 0.925,
            "component_scores": {
              "select": 0.7,
              "from": 1.0,
              "where": 1.0,
              "joins": 1.0,
              "group_by": 1.0,
              "order_by": 1.0,
              "having": 1.0,
              "limit": 1.0
            },
            "component_details": {
              "select": {
                "jaccard_similarity": 0.7,
                "gt_items": [
                  "COUNT ( * ) AS <alias>"
                ],
                "pred_items": [
                  "COUNT ( * )"
                ],
                "gt_normalized": [
                  "COUNT ( * ) AS <alias>"
                ],
                "pred_normalized": [
                  "COUNT ( * )"
                ],
                "exact_match": false
              },
              "from": {
                "gt_tables": [
                  "instrucao ;"
                ],
                "pred_tables": [
                  "instrucao ;"
                ],
                "intersection_count": 1,
                "union_count": 1,
                "jaccard_similarity": 1.0
              },
              "where": {
                "match": "both_empty"
              },
              "joins": {
                "match": "both_empty"
              },
              "group_by": {
                "match": "both_empty"
              },
              "order_by": {
                "match": "both_empty"
              },
              "having": {
                "match": "both_empty"
              },
              "limit": {
                "match": "both_empty"
              }
            },
            "ground_truth_components": {
              "select": "COUNT ( * ) total_instrucao",
              "from": "instrucao ;",
              "where": "",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": ""
            },
            "predicted_components": {
              "select": "COUNT ( * )",
              "from": "instrucao ;",
              "where": "",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": ""
            },
            "clause_weights": {
              "select": 0.25,
              "from": 0.2,
              "where": 0.2,
              "joins": 0.15,
              "group_by": 0.1,
              "order_by": 0.05,
              "having": 0.03,
              "limit": 0.02
            }
          }
        },
        "Execution Accuracy (EX)": {
          "score": 1.0,
          "is_correct": true,
          "error": null,
          "details": {
            "ground_truth_executed": true,
            "predicted_executed": true,
            "ground_truth_rows": 1,
            "predicted_rows": 1,
            "results_match": true,
            "comparison_details": {
              "gt_size": 1,
              "pred_size": 1,
              "normalized_match": true
            }
          }
        }
      }
    },
    {
      "question_id": "GT013",
      "difficulty": "medium",
      "question": "Quantos pacientes do sexo masculino foram internados?",
      "ground_truth_sql": "SELECT COUNT(*) AS homens FROM internacoes WHERE \"SEXO\" = 1;",
      "predicted_sql": "SELECT COUNT(i.\"N_AIH\") FROM internacoes i WHERE i.\"SEXO\" = 1 LIMIT 100;",
      "agent_success": true,
      "agent_execution_time": 9.692983150482178,
      "metrics": {
        "Exact Match (EM)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "ground_truth_original": "SELECT COUNT(*) AS homens FROM internacoes WHERE \"SEXO\" = 1;",
            "predicted_original": "SELECT COUNT(i.\"N_AIH\") FROM internacoes i WHERE i.\"SEXO\" = 1 LIMIT 100;",
            "ground_truth_normalized": "SELECT COUNT(*) AS homens FROM internacoes WHERE \"SEXO\" = 1",
            "predicted_normalized": "SELECT COUNT(i.\"N_AIH\") FROM internacoes i WHERE i.\"SEXO\" = 1 LIMIT 100",
            "match": false,
            "length_difference": 12,
            "first_difference_position": 13,
            "first_difference_context": {
              "ground_truth": "ECT COUNT(*) AS home",
              "predicted": "ECT COUNT(i.\"N_AIH\")"
            },
            "word_count_difference": 1,
            "differing_words": [
              {
                "position": 1,
                "ground_truth": "COUNT(*)",
                "predicted": "COUNT(i.\"N_AIH\")"
              },
              {
                "position": 2,
                "ground_truth": "AS",
                "predicted": "FROM"
              },
              {
                "position": 3,
                "ground_truth": "homens",
                "predicted": "internacoes"
              },
              {
                "position": 4,
                "ground_truth": "FROM",
                "predicted": "i"
              },
              {
                "position": 5,
                "ground_truth": "internacoes",
                "predicted": "WHERE"
              }
            ],
            "common_errors": [
              "Extra LIMIT clause",
              "Quote mismatch (identifier quoting)"
            ]
          }
        },
        "Component Matching (CM)": {
          "score": 0.53,
          "is_correct": false,
          "error": null,
          "details": {
            "overall_score": 0.53,
            "component_scores": {
              "select": 0.0,
              "from": 1.0,
              "where": 0.0,
              "joins": 1.0,
              "group_by": 1.0,
              "order_by": 1.0,
              "having": 1.0,
              "limit": 0.0
            },
            "component_details": {
              "select": {
                "jaccard_similarity": 0.0,
                "gt_items": [
                  "COUNT ( * ) AS <alias>"
                ],
                "pred_items": [
                  "COUNT ( i . \"N_AIH\" )"
                ],
                "gt_normalized": [
                  "COUNT ( * ) AS <alias>"
                ],
                "pred_normalized": [
                  "COUNT ( i . \"N_AIH\" )"
                ],
                "exact_match": false
              },
              "from": {
                "gt_tables": [
                  "internacoes"
                ],
                "pred_tables": [
                  "internacoes"
                ],
                "intersection_count": 1,
                "union_count": 1,
                "jaccard_similarity": 1.0
              },
              "where": {
                "gt_conditions": [
                  "\"SEXO\" = 1 "
                ],
                "pred_conditions": [
                  "i . \"SEXO\" = 1"
                ],
                "intersection_count": 0,
                "union_count": 2,
                "jaccard_similarity": 0.0
              },
              "joins": {
                "match": "both_empty"
              },
              "group_by": {
                "match": "both_empty"
              },
              "order_by": {
                "match": "both_empty"
              },
              "having": {
                "match": "both_empty"
              },
              "limit": {
                "match": "one_empty"
              }
            },
            "ground_truth_components": {
              "select": "COUNT ( * ) homens",
              "from": "internacoes",
              "where": "\"SEXO\" = 1 ;",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": ""
            },
            "predicted_components": {
              "select": "COUNT ( i . \"N_AIH\" )",
              "from": "internacoes i",
              "where": "i . \"SEXO\" = 1",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "100 ;",
              "joins": ""
            },
            "clause_weights": {
              "select": 0.25,
              "from": 0.2,
              "where": 0.2,
              "joins": 0.15,
              "group_by": 0.1,
              "order_by": 0.05,
              "having": 0.03,
              "limit": 0.02
            }
          }
        },
        "Execution Accuracy (EX)": {
          "score": 1.0,
          "is_correct": true,
          "error": null,
          "details": {
            "ground_truth_executed": true,
            "predicted_executed": true,
            "ground_truth_rows": 1,
            "predicted_rows": 1,
            "results_match": true,
            "comparison_details": {
              "gt_size": 1,
              "pred_size": 1,
              "normalized_match": true
            }
          }
        }
      }
    },
    {
      "question_id": "GT014",
      "difficulty": "medium",
      "question": "Quantas internações por meningite ocasionaram em morte?",
      "ground_truth_sql": "SELECT COUNT(mo.\"N_AIH\") FROM mortes mo JOIN internacoes i ON mo.\"N_AIH\" = i.\"N_AIH\" JOIN cid10 c ON mo.\"CID_MORTE\" = c.\"CID\" WHERE c.\"CD_DESCRICAO\" ILIKE '%meningite%' AND mo.\"N_AIH\" IS NOT NULL;",
      "predicted_sql": "SELECT COUNT(mo.\"N_AIH\") FROM mortes mo JOIN internacoes i ON mo.\"N_AIH\" = i.\"N_AIH\" JOIN cid10 c ON mo.\"CID_MORTE\" = c.\"CID\" WHERE c.\"CD_DESCRICAO\" ILIKE '%meningite%' AND mo.\"N_AIH\" IS NOT NULL;",
      "agent_success": true,
      "agent_execution_time": 20.315141916275024,
      "metrics": {
        "Exact Match (EM)": {
          "score": 1.0,
          "is_correct": true,
          "error": null,
          "details": {
            "ground_truth_original": "SELECT COUNT(mo.\"N_AIH\") FROM mortes mo JOIN internacoes i ON mo.\"N_AIH\" = i.\"N_AIH\" JOIN cid10 c ON mo.\"CID_MORTE\" = c.\"CID\" WHERE c.\"CD_DESCRICAO\" ILIKE '%meningite%' AND mo.\"N_AIH\" IS NOT NULL;",
            "predicted_original": "SELECT COUNT(mo.\"N_AIH\") FROM mortes mo JOIN internacoes i ON mo.\"N_AIH\" = i.\"N_AIH\" JOIN cid10 c ON mo.\"CID_MORTE\" = c.\"CID\" WHERE c.\"CD_DESCRICAO\" ILIKE '%meningite%' AND mo.\"N_AIH\" IS NOT NULL;",
            "ground_truth_normalized": "SELECT COUNT(mo.\"N_AIH\") FROM mortes mo JOIN internacoes i ON mo.\"N_AIH\" = i.\"N_AIH\" JOIN cid10 c ON mo.\"CID_MORTE\" = c.\"CID\" WHERE c.\"CD_DESCRICAO\" ILIKE '%meningite%' AND mo.\"N_AIH\" IS NOT NULL",
            "predicted_normalized": "SELECT COUNT(mo.\"N_AIH\") FROM mortes mo JOIN internacoes i ON mo.\"N_AIH\" = i.\"N_AIH\" JOIN cid10 c ON mo.\"CID_MORTE\" = c.\"CID\" WHERE c.\"CD_DESCRICAO\" ILIKE '%meningite%' AND mo.\"N_AIH\" IS NOT NULL",
            "match": true
          }
        },
        "Component Matching (CM)": {
          "score": 1.0,
          "is_correct": true,
          "error": null,
          "details": {
            "overall_score": 1.0,
            "component_scores": {
              "select": 1.0,
              "from": 1.0,
              "where": 1.0,
              "joins": 1.0,
              "group_by": 1.0,
              "order_by": 1.0,
              "having": 1.0,
              "limit": 1.0
            },
            "component_details": {
              "select": {
                "jaccard_similarity": 1.0,
                "gt_items": [
                  "COUNT ( mo . \"N_AIH\" )"
                ],
                "pred_items": [
                  "COUNT ( mo . \"N_AIH\" )"
                ],
                "gt_normalized": [
                  "COUNT ( mo . \"N_AIH\" )"
                ],
                "pred_normalized": [
                  "COUNT ( mo . \"N_AIH\" )"
                ],
                "exact_match": true
              },
              "from": {
                "gt_tables": [
                  "mortes"
                ],
                "pred_tables": [
                  "mortes"
                ],
                "intersection_count": 1,
                "union_count": 1,
                "jaccard_similarity": 1.0
              },
              "where": {
                "gt_conditions": [
                  "c . \"CD_DESCRICAO\" ILIKE '%meningite%' mo . \"N_AIH\" "
                ],
                "pred_conditions": [
                  "c . \"CD_DESCRICAO\" ILIKE '%meningite%' mo . \"N_AIH\" "
                ],
                "intersection_count": 1,
                "union_count": 1,
                "jaccard_similarity": 1.0
              },
              "joins": {
                "gt_normalized": "internacoes i mo . \"N_AIH\" = i . \"N_AIH\" cid10 c mo . \"CID_MORTE\" = c . \"CID\"",
                "pred_normalized": "internacoes i mo . \"N_AIH\" = i . \"N_AIH\" cid10 c mo . \"CID_MORTE\" = c . \"CID\"",
                "exact_match": true
              },
              "group_by": {
                "match": "both_empty"
              },
              "order_by": {
                "match": "both_empty"
              },
              "having": {
                "match": "both_empty"
              },
              "limit": {
                "match": "both_empty"
              }
            },
            "ground_truth_components": {
              "select": "COUNT ( mo . \"N_AIH\" )",
              "from": "mortes mo",
              "where": "c . \"CD_DESCRICAO\" ILIKE '%meningite%' mo . \"N_AIH\" ;",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": "internacoes i mo . \"N_AIH\" = i . \"N_AIH\" cid10 c mo . \"CID_MORTE\" = c . \"CID\""
            },
            "predicted_components": {
              "select": "COUNT ( mo . \"N_AIH\" )",
              "from": "mortes mo",
              "where": "c . \"CD_DESCRICAO\" ILIKE '%meningite%' mo . \"N_AIH\" ;",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": "internacoes i mo . \"N_AIH\" = i . \"N_AIH\" cid10 c mo . \"CID_MORTE\" = c . \"CID\""
            },
            "clause_weights": {
              "select": 0.25,
              "from": 0.2,
              "where": 0.2,
              "joins": 0.15,
              "group_by": 0.1,
              "order_by": 0.05,
              "having": 0.03,
              "limit": 0.02
            }
          }
        },
        "Execution Accuracy (EX)": {
          "score": 1.0,
          "is_correct": true,
          "error": null,
          "details": {
            "ground_truth_executed": true,
            "predicted_executed": true,
            "ground_truth_rows": 1,
            "predicted_rows": 1,
            "results_match": true,
            "comparison_details": {
              "gt_size": 1,
              "pred_size": 1,
              "normalized_match": true
            }
          }
        }
      }
    },
    {
      "question_id": "GT015",
      "difficulty": "medium",
      "question": "Qual a descrição do código CID A15?",
      "ground_truth_sql": "SELECT \"CD_DESCRICAO\" FROM cid10 WHERE \"CID\" = 'A15';",
      "predicted_sql": "SELECT c.\"CD_DESCRICAO\" FROM cid10 c WHERE c.\"CID\" = 'A15';",
      "agent_success": true,
      "agent_execution_time": 8.02942943572998,
      "metrics": {
        "Exact Match (EM)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "ground_truth_original": "SELECT \"CD_DESCRICAO\" FROM cid10 WHERE \"CID\" = 'A15';",
            "predicted_original": "SELECT c.\"CD_DESCRICAO\" FROM cid10 c WHERE c.\"CID\" = 'A15';",
            "ground_truth_normalized": "SELECT \"CD_DESCRICAO\" FROM cid10 WHERE \"CID\" = 'A15'",
            "predicted_normalized": "SELECT c.\"CD_DESCRICAO\" FROM cid10 c WHERE c.\"CID\" = 'A15'",
            "match": false,
            "length_difference": 6,
            "first_difference_position": 7,
            "first_difference_context": {
              "ground_truth": "SELECT \"CD_DESCRI",
              "predicted": "SELECT c.\"CD_DESC"
            },
            "word_count_difference": 1,
            "differing_words": [
              {
                "position": 1,
                "ground_truth": "\"CD_DESCRICAO\"",
                "predicted": "c.\"CD_DESCRICAO\""
              },
              {
                "position": 4,
                "ground_truth": "WHERE",
                "predicted": "c"
              },
              {
                "position": 5,
                "ground_truth": "\"CID\"",
                "predicted": "WHERE"
              },
              {
                "position": 6,
                "ground_truth": "=",
                "predicted": "c.\"CID\""
              },
              {
                "position": 7,
                "ground_truth": "'A15'",
                "predicted": "="
              }
            ],
            "common_errors": []
          }
        },
        "Component Matching (CM)": {
          "score": 0.55,
          "is_correct": false,
          "error": null,
          "details": {
            "overall_score": 0.55,
            "component_scores": {
              "select": 0.0,
              "from": 1.0,
              "where": 0.0,
              "joins": 1.0,
              "group_by": 1.0,
              "order_by": 1.0,
              "having": 1.0,
              "limit": 1.0
            },
            "component_details": {
              "select": {
                "jaccard_similarity": 0.0,
                "gt_items": [
                  "\"CD_DESCRICAO\""
                ],
                "pred_items": [
                  "c . \"CD_DESCRICAO\""
                ],
                "gt_normalized": [
                  "\"CD_DESCRICAO\""
                ],
                "pred_normalized": [
                  "c . \"CD_DESCRICAO\""
                ],
                "exact_match": false
              },
              "from": {
                "gt_tables": [
                  "cid10"
                ],
                "pred_tables": [
                  "cid10"
                ],
                "intersection_count": 1,
                "union_count": 1,
                "jaccard_similarity": 1.0
              },
              "where": {
                "gt_conditions": [
                  "\"CID\" = 'A15' "
                ],
                "pred_conditions": [
                  "c . \"CID\" = 'A15' "
                ],
                "intersection_count": 0,
                "union_count": 2,
                "jaccard_similarity": 0.0
              },
              "joins": {
                "match": "both_empty"
              },
              "group_by": {
                "match": "both_empty"
              },
              "order_by": {
                "match": "both_empty"
              },
              "having": {
                "match": "both_empty"
              },
              "limit": {
                "match": "both_empty"
              }
            },
            "ground_truth_components": {
              "select": "\"CD_DESCRICAO\"",
              "from": "cid10",
              "where": "\"CID\" = 'A15' ;",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": ""
            },
            "predicted_components": {
              "select": "c . \"CD_DESCRICAO\"",
              "from": "cid10 c",
              "where": "c . \"CID\" = 'A15' ;",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": ""
            },
            "clause_weights": {
              "select": 0.25,
              "from": 0.2,
              "where": 0.2,
              "joins": 0.15,
              "group_by": 0.1,
              "order_by": 0.05,
              "having": 0.03,
              "limit": 0.02
            }
          }
        },
        "Execution Accuracy (EX)": {
          "score": 1.0,
          "is_correct": true,
          "error": null,
          "details": {
            "ground_truth_executed": true,
            "predicted_executed": true,
            "ground_truth_rows": 1,
            "predicted_rows": 1,
            "results_match": true,
            "comparison_details": {
              "gt_size": 1,
              "pred_size": 1,
              "normalized_match": true
            }
          }
        }
      }
    },
    {
      "question_id": "GT016",
      "difficulty": "medium",
      "question": "Quantos casos de VDRL positivo foram registrados?",
      "ground_truth_sql": "SELECT COUNT(*) AS vdrl_positivo FROM condicoes_especificas WHERE \"IND_VDRL\" = '1';",
      "predicted_sql": "SELECT COUNT(i.\"N_AIH\") FROM internacoes i JOIN condicoes_especificas c ON i.\"N_AIH\" = c.\"N_AIH\" WHERE c.\"IND_VDRL\" = '1';",
      "agent_success": true,
      "agent_execution_time": 12.433635950088501,
      "metrics": {
        "Exact Match (EM)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "ground_truth_original": "SELECT COUNT(*) AS vdrl_positivo FROM condicoes_especificas WHERE \"IND_VDRL\" = '1';",
            "predicted_original": "SELECT COUNT(i.\"N_AIH\") FROM internacoes i JOIN condicoes_especificas c ON i.\"N_AIH\" = c.\"N_AIH\" WHERE c.\"IND_VDRL\" = '1';",
            "ground_truth_normalized": "SELECT COUNT(*) AS vdrl_positivo FROM condicoes_especificas WHERE \"IND_VDRL\" = '1'",
            "predicted_normalized": "SELECT COUNT(i.\"N_AIH\") FROM internacoes i JOIN condicoes_especificas c ON i.\"N_AIH\" = c.\"N_AIH\" WHERE c.\"IND_VDRL\" = '1'",
            "match": false,
            "length_difference": 39,
            "first_difference_position": 13,
            "first_difference_context": {
              "ground_truth": "ECT COUNT(*) AS vdrl",
              "predicted": "ECT COUNT(i.\"N_AIH\")"
            },
            "word_count_difference": 6,
            "differing_words": [
              {
                "position": 1,
                "ground_truth": "COUNT(*)",
                "predicted": "COUNT(i.\"N_AIH\")"
              },
              {
                "position": 2,
                "ground_truth": "AS",
                "predicted": "FROM"
              },
              {
                "position": 3,
                "ground_truth": "vdrl_positivo",
                "predicted": "internacoes"
              },
              {
                "position": 4,
                "ground_truth": "FROM",
                "predicted": "i"
              },
              {
                "position": 5,
                "ground_truth": "condicoes_especificas",
                "predicted": "JOIN"
              }
            ],
            "common_errors": [
              "Quote mismatch (identifier quoting)",
              "Unexpected JOIN operation"
            ]
          }
        },
        "Component Matching (CM)": {
          "score": 0.2,
          "is_correct": false,
          "error": null,
          "details": {
            "overall_score": 0.2,
            "component_scores": {
              "select": 0.0,
              "from": 0.0,
              "where": 0.0,
              "joins": 0.0,
              "group_by": 1.0,
              "order_by": 1.0,
              "having": 1.0,
              "limit": 1.0
            },
            "component_details": {
              "select": {
                "jaccard_similarity": 0.0,
                "gt_items": [
                  "COUNT ( * ) AS <alias>"
                ],
                "pred_items": [
                  "COUNT ( i . \"N_AIH\" )"
                ],
                "gt_normalized": [
                  "COUNT ( * ) AS <alias>"
                ],
                "pred_normalized": [
                  "COUNT ( i . \"N_AIH\" )"
                ],
                "exact_match": false
              },
              "from": {
                "gt_tables": [
                  "condicoes_especificas"
                ],
                "pred_tables": [
                  "internacoes"
                ],
                "intersection_count": 0,
                "union_count": 2,
                "jaccard_similarity": 0.0
              },
              "where": {
                "gt_conditions": [
                  "\"IND_VDRL\" = '1' "
                ],
                "pred_conditions": [
                  "c . \"IND_VDRL\" = '1' "
                ],
                "intersection_count": 0,
                "union_count": 2,
                "jaccard_similarity": 0.0
              },
              "joins": {
                "match": "one_empty"
              },
              "group_by": {
                "match": "both_empty"
              },
              "order_by": {
                "match": "both_empty"
              },
              "having": {
                "match": "both_empty"
              },
              "limit": {
                "match": "both_empty"
              }
            },
            "ground_truth_components": {
              "select": "COUNT ( * ) vdrl_positivo",
              "from": "condicoes_especificas",
              "where": "\"IND_VDRL\" = '1' ;",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": ""
            },
            "predicted_components": {
              "select": "COUNT ( i . \"N_AIH\" )",
              "from": "internacoes i",
              "where": "c . \"IND_VDRL\" = '1' ;",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": "condicoes_especificas c i . \"N_AIH\" = c . \"N_AIH\""
            },
            "clause_weights": {
              "select": 0.25,
              "from": 0.2,
              "where": 0.2,
              "joins": 0.15,
              "group_by": 0.1,
              "order_by": 0.05,
              "having": 0.03,
              "limit": 0.02
            }
          }
        },
        "Execution Accuracy (EX)": {
          "score": 1.0,
          "is_correct": true,
          "error": null,
          "details": {
            "ground_truth_executed": true,
            "predicted_executed": true,
            "ground_truth_rows": 1,
            "predicted_rows": 1,
            "results_match": true,
            "comparison_details": {
              "gt_size": 1,
              "pred_size": 1,
              "normalized_match": true
            }
          }
        }
      }
    },
    {
      "question_id": "GT017",
      "difficulty": "medium",
      "question": "Qual o tempo médio de permanência hospitalar?",
      "ground_truth_sql": "SELECT AVG(\"QT_DIARIAS\") AS tempo_medio_uti FROM internacoes;",
      "predicted_sql": "SELECT AVG(i.\"QT_DIARIAS\") AS \"tempo_medio_permanencia_hospitalar\" FROM internacoes i;",
      "agent_success": true,
      "agent_execution_time": 9.701197385787964,
      "metrics": {
        "Exact Match (EM)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "ground_truth_original": "SELECT AVG(\"QT_DIARIAS\") AS tempo_medio_uti FROM internacoes;",
            "predicted_original": "SELECT AVG(i.\"QT_DIARIAS\") AS \"tempo_medio_permanencia_hospitalar\" FROM internacoes i;",
            "ground_truth_normalized": "SELECT AVG(\"QT_DIARIAS\") AS tempo_medio_uti FROM internacoes",
            "predicted_normalized": "SELECT AVG(i.\"QT_DIARIAS\") AS \"tempo_medio_permanencia_hospitalar\" FROM internacoes i",
            "match": false,
            "length_difference": 25,
            "first_difference_position": 11,
            "first_difference_context": {
              "ground_truth": "ELECT AVG(\"QT_DIARIA",
              "predicted": "ELECT AVG(i.\"QT_DIAR"
            },
            "word_count_difference": 1,
            "differing_words": [
              {
                "position": 1,
                "ground_truth": "AVG(\"QT_DIARIAS\")",
                "predicted": "AVG(i.\"QT_DIARIAS\")"
              },
              {
                "position": 3,
                "ground_truth": "tempo_medio_uti",
                "predicted": "\"tempo_medio_permanencia_hospitalar\""
              },
              {
                "position": 6,
                "ground_truth": "<MISSING>",
                "predicted": "i"
              }
            ],
            "common_errors": [
              "Quote mismatch (identifier quoting)"
            ]
          }
        },
        "Component Matching (CM)": {
          "score": 0.55,
          "is_correct": false,
          "error": null,
          "details": {
            "overall_score": 0.55,
            "component_scores": {
              "select": 0.0,
              "from": 0.0,
              "where": 1.0,
              "joins": 1.0,
              "group_by": 1.0,
              "order_by": 1.0,
              "having": 1.0,
              "limit": 1.0
            },
            "component_details": {
              "select": {
                "jaccard_similarity": 0.0,
                "gt_items": [
                  "AVG ( \"QT_DIARIAS\" ) AS <alias>"
                ],
                "pred_items": [
                  "AVG ( i . \"QT_DIARIAS\" ) \"tempo_medio_permanencia_hospitalar\""
                ],
                "gt_normalized": [
                  "AVG ( \"QT_DIARIAS\" ) AS <alias>"
                ],
                "pred_normalized": [
                  "AVG ( i . \"QT_DIARIAS\" ) \"tempo_medio_permanencia_hospitalar\""
                ],
                "exact_match": false
              },
              "from": {
                "gt_tables": [
                  "internacoes ;"
                ],
                "pred_tables": [
                  "internacoes i ;"
                ],
                "intersection_count": 0,
                "union_count": 2,
                "jaccard_similarity": 0.0
              },
              "where": {
                "match": "both_empty"
              },
              "joins": {
                "match": "both_empty"
              },
              "group_by": {
                "match": "both_empty"
              },
              "order_by": {
                "match": "both_empty"
              },
              "having": {
                "match": "both_empty"
              },
              "limit": {
                "match": "both_empty"
              }
            },
            "ground_truth_components": {
              "select": "AVG ( \"QT_DIARIAS\" ) tempo_medio_uti",
              "from": "internacoes ;",
              "where": "",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": ""
            },
            "predicted_components": {
              "select": "AVG ( i . \"QT_DIARIAS\" ) \"tempo_medio_permanencia_hospitalar\"",
              "from": "internacoes i ;",
              "where": "",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": ""
            },
            "clause_weights": {
              "select": 0.25,
              "from": 0.2,
              "where": 0.2,
              "joins": 0.15,
              "group_by": 0.1,
              "order_by": 0.05,
              "having": 0.03,
              "limit": 0.02
            }
          }
        },
        "Execution Accuracy (EX)": {
          "score": 1.0,
          "is_correct": true,
          "error": null,
          "details": {
            "ground_truth_executed": true,
            "predicted_executed": true,
            "ground_truth_rows": 1,
            "predicted_rows": 1,
            "results_match": true,
            "comparison_details": {
              "gt_size": 1,
              "pred_size": 1,
              "normalized_match": true
            }
          }
        }
      }
    },
    {
      "question_id": "GT018",
      "difficulty": "medium",
      "question": "Qual município tem a maior população segundo dados do IBGE?",
      "ground_truth_sql": "SELECT nome_municipio FROM dado_ibge WHERE populacao IS NOT NULL ORDER BY populacao DESC LIMIT 1;",
      "predicted_sql": "SELECT \"nome_municipio\" FROM dado_ibge WHERE \"populacao\" = ( SELECT MAX(\"populacao\") FROM dado_ibge );",
      "agent_success": true,
      "agent_execution_time": 10.90281367301941,
      "metrics": {
        "Exact Match (EM)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "ground_truth_original": "SELECT nome_municipio FROM dado_ibge WHERE populacao IS NOT NULL ORDER BY populacao DESC LIMIT 1;",
            "predicted_original": "SELECT \"nome_municipio\" FROM dado_ibge WHERE \"populacao\" = ( SELECT MAX(\"populacao\") FROM dado_ibge );",
            "ground_truth_normalized": "SELECT nome_municipio FROM dado_ibge WHERE populacao IS NOT NULL ORDER BY populacao DESC LIMIT 1",
            "predicted_normalized": "SELECT \"nome_municipio\" FROM dado_ibge WHERE \"populacao\" = ( SELECT MAX(\"populacao\") FROM dado_ibge )",
            "match": false,
            "length_difference": 5,
            "first_difference_position": 7,
            "first_difference_context": {
              "ground_truth": "SELECT nome_munic",
              "predicted": "SELECT \"nome_muni"
            },
            "word_count_difference": -2,
            "differing_words": [
              {
                "position": 1,
                "ground_truth": "nome_municipio",
                "predicted": "\"nome_municipio\""
              },
              {
                "position": 5,
                "ground_truth": "populacao",
                "predicted": "\"populacao\""
              },
              {
                "position": 6,
                "ground_truth": "IS",
                "predicted": "="
              },
              {
                "position": 7,
                "ground_truth": "NOT",
                "predicted": "("
              },
              {
                "position": 8,
                "ground_truth": "NULL",
                "predicted": "SELECT"
              }
            ],
            "common_errors": [
              "Missing ORDER BY clause",
              "Missing LIMIT clause",
              "Quote mismatch (identifier quoting)"
            ]
          }
        },
        "Component Matching (CM)": {
          "score": 0.48,
          "is_correct": false,
          "error": null,
          "details": {
            "overall_score": 0.48,
            "component_scores": {
              "select": 0.0,
              "from": 1.0,
              "where": 0.0,
              "joins": 1.0,
              "group_by": 1.0,
              "order_by": 0.0,
              "having": 1.0,
              "limit": 0.0
            },
            "component_details": {
              "select": {
                "jaccard_similarity": 0.0,
                "gt_items": [
                  "nome_municipio"
                ],
                "pred_items": [
                  "\"nome_municipio\""
                ],
                "gt_normalized": [
                  "nome_municipio"
                ],
                "pred_normalized": [
                  "\"nome_municipio\""
                ],
                "exact_match": false
              },
              "from": {
                "gt_tables": [
                  "dado_ibge"
                ],
                "pred_tables": [
                  "dado_ibge"
                ],
                "intersection_count": 1,
                "union_count": 1,
                "jaccard_similarity": 1.0
              },
              "where": {
                "gt_conditions": [
                  "populacao"
                ],
                "pred_conditions": [
                  "\"populacao\" = ( SELECT MAX ( \"populacao\" ) FROM dado_ibge ) "
                ],
                "intersection_count": 0,
                "union_count": 2,
                "jaccard_similarity": 0.0
              },
              "joins": {
                "match": "both_empty"
              },
              "group_by": {
                "match": "both_empty"
              },
              "order_by": {
                "match": "one_empty"
              },
              "having": {
                "match": "both_empty"
              },
              "limit": {
                "match": "one_empty"
              }
            },
            "ground_truth_components": {
              "select": "nome_municipio",
              "from": "dado_ibge",
              "where": "populacao",
              "group_by": "",
              "having": "",
              "order_by": "populacao",
              "limit": "1 ;",
              "joins": ""
            },
            "predicted_components": {
              "select": "\"nome_municipio\"",
              "from": "dado_ibge",
              "where": "\"populacao\" = ( SELECT MAX ( \"populacao\" ) FROM dado_ibge ) ;",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": ""
            },
            "clause_weights": {
              "select": 0.25,
              "from": 0.2,
              "where": 0.2,
              "joins": 0.15,
              "group_by": 0.1,
              "order_by": 0.05,
              "having": 0.03,
              "limit": 0.02
            }
          }
        },
        "Execution Accuracy (EX)": {
          "score": 1.0,
          "is_correct": true,
          "error": null,
          "details": {
            "ground_truth_executed": true,
            "predicted_executed": true,
            "ground_truth_rows": 1,
            "predicted_rows": 1,
            "results_match": true,
            "comparison_details": {
              "gt_size": 1,
              "pred_size": 1,
              "normalized_match": true
            }
          }
        }
      }
    },
    {
      "question_id": "GT019",
      "difficulty": "medium",
      "question": "\"Quais os cinco municípios com mais internações obstétricas registradas?",
      "ground_truth_sql": " SELECT mu.nome, COUNT(o.\"N_AIH\") AS total_internacoes FROM obstetricos o JOIN internacoes i ON o.\"N_AIH\" = i.\"N_AIH\" JOIN municipios mu ON i.\"MUNIC_RES\" = mu.codigo_6d GROUP BY mu.nome ORDER BY total_internacoes DESC LIMIT 5;",
      "predicted_sql": "SELECT mu.nome, COUNT(o.\"N_AIH\") AS total_internacoes FROM obstetricos o JOIN internacoes i ON o.\"N_AIH\" = i.\"N_AIH\" JOIN municipios mu ON i.\"MUNIC_RES\" = mu.codigo_6d GROUP BY mu.nome ORDER BY total_internacoes DESC LIMIT 5;",
      "agent_success": true,
      "agent_execution_time": 14.6771981716156,
      "metrics": {
        "Exact Match (EM)": {
          "score": 1.0,
          "is_correct": true,
          "error": null,
          "details": {
            "ground_truth_original": " SELECT mu.nome, COUNT(o.\"N_AIH\") AS total_internacoes FROM obstetricos o JOIN internacoes i ON o.\"N_AIH\" = i.\"N_AIH\" JOIN municipios mu ON i.\"MUNIC_RES\" = mu.codigo_6d GROUP BY mu.nome ORDER BY total_internacoes DESC LIMIT 5;",
            "predicted_original": "SELECT mu.nome, COUNT(o.\"N_AIH\") AS total_internacoes FROM obstetricos o JOIN internacoes i ON o.\"N_AIH\" = i.\"N_AIH\" JOIN municipios mu ON i.\"MUNIC_RES\" = mu.codigo_6d GROUP BY mu.nome ORDER BY total_internacoes DESC LIMIT 5;",
            "ground_truth_normalized": "SELECT mu.nome, COUNT(o.\"N_AIH\") AS total_internacoes FROM obstetricos o JOIN internacoes i ON o.\"N_AIH\" = i.\"N_AIH\" JOIN municipios mu ON i.\"MUNIC_RES\" = mu.codigo_6d GROUP BY mu.nome ORDER BY total_internacoes DESC LIMIT 5",
            "predicted_normalized": "SELECT mu.nome, COUNT(o.\"N_AIH\") AS total_internacoes FROM obstetricos o JOIN internacoes i ON o.\"N_AIH\" = i.\"N_AIH\" JOIN municipios mu ON i.\"MUNIC_RES\" = mu.codigo_6d GROUP BY mu.nome ORDER BY total_internacoes DESC LIMIT 5",
            "match": true
          }
        },
        "Component Matching (CM)": {
          "score": 1.0,
          "is_correct": true,
          "error": null,
          "details": {
            "overall_score": 1.0,
            "component_scores": {
              "select": 1.0,
              "from": 1.0,
              "where": 1.0,
              "joins": 1.0,
              "group_by": 1.0,
              "order_by": 1.0,
              "having": 1.0,
              "limit": 1.0
            },
            "component_details": {
              "select": {
                "jaccard_similarity": 1.0,
                "gt_items": [
                  "mu . AS <alias>",
                  "COUNT ( o . \"N_AIH\" ) AS <alias>"
                ],
                "pred_items": [
                  "mu . AS <alias>",
                  "COUNT ( o . \"N_AIH\" ) AS <alias>"
                ],
                "gt_normalized": [
                  "mu . AS <alias>",
                  "COUNT ( o . \"N_AIH\" ) AS <alias>"
                ],
                "pred_normalized": [
                  "mu . AS <alias>",
                  "COUNT ( o . \"N_AIH\" ) AS <alias>"
                ],
                "exact_match": true
              },
              "from": {
                "gt_tables": [
                  "obstetricos"
                ],
                "pred_tables": [
                  "obstetricos"
                ],
                "intersection_count": 1,
                "union_count": 1,
                "jaccard_similarity": 1.0
              },
              "where": {
                "match": "both_empty"
              },
              "joins": {
                "gt_normalized": "internacoes i o . \"N_AIH\" = i . \"N_AIH\" municipios mu i . \"MUNIC_RES\" = mu . codigo_6d",
                "pred_normalized": "internacoes i o . \"N_AIH\" = i . \"N_AIH\" municipios mu i . \"MUNIC_RES\" = mu . codigo_6d",
                "exact_match": true
              },
              "group_by": {
                "gt_normalized": "mu . nome",
                "pred_normalized": "mu . nome",
                "exact_match": true
              },
              "order_by": {
                "gt_normalized": "total_internacoes",
                "pred_normalized": "total_internacoes",
                "exact_match": true
              },
              "having": {
                "match": "both_empty"
              },
              "limit": {
                "gt_numbers": [
                  "5"
                ],
                "pred_numbers": [
                  "5"
                ],
                "match": true
              }
            },
            "ground_truth_components": {
              "select": "mu . nome , COUNT ( o . \"N_AIH\" ) total_internacoes",
              "from": "obstetricos o",
              "where": "",
              "group_by": "mu . nome",
              "having": "",
              "order_by": "total_internacoes",
              "limit": "5 ;",
              "joins": "internacoes i o . \"N_AIH\" = i . \"N_AIH\" municipios mu i . \"MUNIC_RES\" = mu . codigo_6d"
            },
            "predicted_components": {
              "select": "mu . nome , COUNT ( o . \"N_AIH\" ) total_internacoes",
              "from": "obstetricos o",
              "where": "",
              "group_by": "mu . nome",
              "having": "",
              "order_by": "total_internacoes",
              "limit": "5 ;",
              "joins": "internacoes i o . \"N_AIH\" = i . \"N_AIH\" municipios mu i . \"MUNIC_RES\" = mu . codigo_6d"
            },
            "clause_weights": {
              "select": 0.25,
              "from": 0.2,
              "where": 0.2,
              "joins": 0.15,
              "group_by": 0.1,
              "order_by": 0.05,
              "having": 0.03,
              "limit": 0.02
            }
          }
        },
        "Execution Accuracy (EX)": {
          "score": 1.0,
          "is_correct": true,
          "error": null,
          "details": {
            "ground_truth_executed": true,
            "predicted_executed": true,
            "ground_truth_rows": 5,
            "predicted_rows": 5,
            "results_match": true,
            "comparison_details": {
              "gt_size": 5,
              "pred_size": 5,
              "normalized_match": true
            }
          }
        }
      }
    },
    {
      "question_id": "GT020",
      "difficulty": "hard",
      "question": "Quantas internações resultaram em óbito?",
      "ground_truth_sql": "SELECT COUNT(DISTINCT i.\"N_AIH\") AS internacoes_com_obito FROM internacoes i INNER JOIN mortes m ON i.\"N_AIH\" = m.\"N_AIH\";",
      "predicted_sql": "SELECT COUNT(i.\"N_AIH\") FROM mortes mo JOIN internacoes i ON mo.\"N_AIH\" = i.\"N_AIH\" WHERE mo.\"CID_MORTE\" IS NOT NULL;",
      "agent_success": true,
      "agent_execution_time": 10.586133480072021,
      "metrics": {
        "Exact Match (EM)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "ground_truth_original": "SELECT COUNT(DISTINCT i.\"N_AIH\") AS internacoes_com_obito FROM internacoes i INNER JOIN mortes m ON i.\"N_AIH\" = m.\"N_AIH\";",
            "predicted_original": "SELECT COUNT(i.\"N_AIH\") FROM mortes mo JOIN internacoes i ON mo.\"N_AIH\" = i.\"N_AIH\" WHERE mo.\"CID_MORTE\" IS NOT NULL;",
            "ground_truth_normalized": "SELECT COUNT(DISTINCT i.\"N_AIH\") AS internacoes_com_obito FROM internacoes i INNER JOIN mortes m ON i.\"N_AIH\" = m.\"N_AIH\"",
            "predicted_normalized": "SELECT COUNT(i.\"N_AIH\") FROM mortes mo JOIN internacoes i ON mo.\"N_AIH\" = i.\"N_AIH\" WHERE mo.\"CID_MORTE\" IS NOT NULL",
            "match": false,
            "length_difference": -5,
            "first_difference_position": 13,
            "first_difference_context": {
              "ground_truth": "ECT COUNT(DISTINCT i",
              "predicted": "ECT COUNT(i.\"N_AIH\")"
            },
            "word_count_difference": 1,
            "differing_words": [
              {
                "position": 1,
                "ground_truth": "COUNT(DISTINCT",
                "predicted": "COUNT(i.\"N_AIH\")"
              },
              {
                "position": 2,
                "ground_truth": "i.\"N_AIH\")",
                "predicted": "FROM"
              },
              {
                "position": 3,
                "ground_truth": "AS",
                "predicted": "mortes"
              },
              {
                "position": 4,
                "ground_truth": "internacoes_com_obito",
                "predicted": "mo"
              },
              {
                "position": 5,
                "ground_truth": "FROM",
                "predicted": "JOIN"
              }
            ],
            "common_errors": [
              "Extra WHERE clause",
              "Quote mismatch (identifier quoting)"
            ]
          }
        },
        "Component Matching (CM)": {
          "score": 0.2,
          "is_correct": false,
          "error": null,
          "details": {
            "overall_score": 0.2,
            "component_scores": {
              "select": 0.0,
              "from": 0.0,
              "where": 0.0,
              "joins": 0.0,
              "group_by": 1.0,
              "order_by": 1.0,
              "having": 1.0,
              "limit": 1.0
            },
            "component_details": {
              "select": {
                "jaccard_similarity": 0.0,
                "gt_items": [
                  "COUNT ( DISTINCT i . \"N_AIH\" ) AS <alias>"
                ],
                "pred_items": [
                  "COUNT ( i . \"N_AIH\" )"
                ],
                "gt_normalized": [
                  "COUNT ( DISTINCT i . \"N_AIH\" ) AS <alias>"
                ],
                "pred_normalized": [
                  "COUNT ( i . \"N_AIH\" )"
                ],
                "exact_match": false
              },
              "from": {
                "gt_tables": [
                  "internacoes i mortes m i . \"N_AIH\" = m . \"N_AIH\" ;"
                ],
                "pred_tables": [
                  "mortes"
                ],
                "intersection_count": 0,
                "union_count": 2,
                "jaccard_similarity": 0.0
              },
              "where": {
                "match": "one_empty"
              },
              "joins": {
                "match": "one_empty"
              },
              "group_by": {
                "match": "both_empty"
              },
              "order_by": {
                "match": "both_empty"
              },
              "having": {
                "match": "both_empty"
              },
              "limit": {
                "match": "both_empty"
              }
            },
            "ground_truth_components": {
              "select": "COUNT ( DISTINCT i . \"N_AIH\" ) internacoes_com_obito",
              "from": "internacoes i mortes m i . \"N_AIH\" = m . \"N_AIH\" ;",
              "where": "",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": ""
            },
            "predicted_components": {
              "select": "COUNT ( i . \"N_AIH\" )",
              "from": "mortes mo",
              "where": "mo . \"CID_MORTE\" ;",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": "internacoes i mo . \"N_AIH\" = i . \"N_AIH\""
            },
            "clause_weights": {
              "select": 0.25,
              "from": 0.2,
              "where": 0.2,
              "joins": 0.15,
              "group_by": 0.1,
              "order_by": 0.05,
              "having": 0.03,
              "limit": 0.02
            }
          }
        },
        "Execution Accuracy (EX)": {
          "score": 1.0,
          "is_correct": true,
          "error": null,
          "details": {
            "ground_truth_executed": true,
            "predicted_executed": true,
            "ground_truth_rows": 1,
            "predicted_rows": 1,
            "results_match": true,
            "comparison_details": {
              "gt_size": 1,
              "pred_size": 1,
              "normalized_match": true
            }
          }
        }
      }
    },
    {
      "question_id": "GT021",
      "difficulty": "hard",
      "question": "Quais são os 5 procedimentos mais comuns (baseado em códigos únicos)?",
      "ground_truth_sql": " SELECT \"PROC_REA\" AS procedimento, COUNT(DISTINCT i.\"N_AIH\") AS total_internacoes FROM internacoes i GROUP BY \"PROC_REA\" ORDER BY total_internacoes DESC LIMIT 5;",
      "predicted_sql": "SELECT \"PROC_REA\", COUNT(*) AS total_procedimentos FROM procedimentos GROUP BY \"PROC_REA\" ORDER BY total_procedimentos DESC LIMIT 5;",
      "agent_success": true,
      "agent_execution_time": 10.822888612747192,
      "metrics": {
        "Exact Match (EM)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "ground_truth_original": " SELECT \"PROC_REA\" AS procedimento, COUNT(DISTINCT i.\"N_AIH\") AS total_internacoes FROM internacoes i GROUP BY \"PROC_REA\" ORDER BY total_internacoes DESC LIMIT 5;",
            "predicted_original": "SELECT \"PROC_REA\", COUNT(*) AS total_procedimentos FROM procedimentos GROUP BY \"PROC_REA\" ORDER BY total_procedimentos DESC LIMIT 5;",
            "ground_truth_normalized": "SELECT \"PROC_REA\" AS procedimento, COUNT(DISTINCT i.\"N_AIH\") AS total_internacoes FROM internacoes i GROUP BY \"PROC_REA\" ORDER BY total_internacoes DESC LIMIT 5",
            "predicted_normalized": "SELECT \"PROC_REA\", COUNT(*) AS total_procedimentos FROM procedimentos GROUP BY \"PROC_REA\" ORDER BY total_procedimentos DESC LIMIT 5",
            "match": false,
            "length_difference": -29,
            "first_difference_position": 17,
            "first_difference_context": {
              "ground_truth": "\"PROC_REA\" AS proced",
              "predicted": "\"PROC_REA\", COUNT(*)"
            },
            "word_count_difference": -4,
            "differing_words": [
              {
                "position": 1,
                "ground_truth": "\"PROC_REA\"",
                "predicted": "\"PROC_REA\","
              },
              {
                "position": 2,
                "ground_truth": "AS",
                "predicted": "COUNT(*)"
              },
              {
                "position": 3,
                "ground_truth": "procedimento,",
                "predicted": "AS"
              },
              {
                "position": 4,
                "ground_truth": "COUNT(DISTINCT",
                "predicted": "total_procedimentos"
              },
              {
                "position": 5,
                "ground_truth": "i.\"N_AIH\")",
                "predicted": "FROM"
              }
            ],
            "common_errors": [
              "Quote mismatch (identifier quoting)"
            ]
          }
        },
        "Component Matching (CM)": {
          "score": 0.5875,
          "is_correct": false,
          "error": null,
          "details": {
            "overall_score": 0.5875,
            "component_scores": {
              "select": 0.35,
              "from": 0.0,
              "where": 1.0,
              "joins": 1.0,
              "group_by": 1.0,
              "order_by": 0.0,
              "having": 1.0,
              "limit": 1.0
            },
            "component_details": {
              "select": {
                "jaccard_similarity": 0.35,
                "gt_items": [
                  "\"PROC_REA\" AS <alias>",
                  "COUNT ( DISTINCT i . \"N_AIH\" ) AS <alias>"
                ],
                "pred_items": [
                  "\"PROC_REA\"",
                  "COUNT ( * ) AS <alias>"
                ],
                "gt_normalized": [
                  "\"PROC_REA\" AS <alias>",
                  "COUNT ( DISTINCT i . \"N_AIH\" ) AS <alias>"
                ],
                "pred_normalized": [
                  "\"PROC_REA\"",
                  "COUNT ( * ) AS <alias>"
                ],
                "exact_match": false
              },
              "from": {
                "gt_tables": [
                  "internacoes"
                ],
                "pred_tables": [
                  "procedimentos"
                ],
                "intersection_count": 0,
                "union_count": 2,
                "jaccard_similarity": 0.0
              },
              "where": {
                "match": "both_empty"
              },
              "joins": {
                "match": "both_empty"
              },
              "group_by": {
                "gt_normalized": "\"PROC_REA\"",
                "pred_normalized": "\"PROC_REA\"",
                "exact_match": true
              },
              "order_by": {
                "gt_normalized": "total_internacoes",
                "pred_normalized": "total_procedimentos",
                "exact_match": false
              },
              "having": {
                "match": "both_empty"
              },
              "limit": {
                "gt_numbers": [
                  "5"
                ],
                "pred_numbers": [
                  "5"
                ],
                "match": true
              }
            },
            "ground_truth_components": {
              "select": "\"PROC_REA\" procedimento , COUNT ( DISTINCT i . \"N_AIH\" ) total_internacoes",
              "from": "internacoes i",
              "where": "",
              "group_by": "\"PROC_REA\"",
              "having": "",
              "order_by": "total_internacoes",
              "limit": "5 ;",
              "joins": ""
            },
            "predicted_components": {
              "select": "\"PROC_REA\" , COUNT ( * ) total_procedimentos",
              "from": "procedimentos",
              "where": "",
              "group_by": "\"PROC_REA\"",
              "having": "",
              "order_by": "total_procedimentos",
              "limit": "5 ;",
              "joins": ""
            },
            "clause_weights": {
              "select": 0.25,
              "from": 0.2,
              "where": 0.2,
              "joins": 0.15,
              "group_by": 0.1,
              "order_by": 0.05,
              "having": 0.03,
              "limit": 0.02
            }
          }
        },
        "Execution Accuracy (EX)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "ground_truth_executed": true,
            "predicted_executed": true,
            "ground_truth_rows": 5,
            "predicted_rows": 5,
            "results_match": false,
            "comparison_details": {
              "gt_size": 5,
              "pred_size": 5,
              "normalized_match": false,
              "missing_rows_count": 5,
              "extra_rows_count": 5,
              "missing_rows_sample": [
                [
                  "0303140151",
                  711504
                ],
                [
                  "0310010039",
                  694875
                ],
                [
                  "0411010034",
                  532429
                ],
                [
                  "0303140046",
                  347873
                ],
                [
                  "0303010037",
                  284046
                ]
              ],
              "extra_rows_sample": [
                [
                  "206010087",
                  1
                ],
                [
                  "407020497",
                  1
                ],
                [
                  "202050211",
                  1
                ],
                [
                  "604540078",
                  1
                ],
                [
                  "604400012",
                  1
                ]
              ],
              "overlap_ratio": 0.0
            }
          }
        }
      }
    },
    {
      "question_id": "GT022",
      "difficulty": "hard",
      "question": "Quantos hospitais registraram pelo menos uma morte?",
      "ground_truth_sql": "SELECT COUNT(DISTINCT h.\"CNES\") AS hospitais_com_mortes FROM hospital h JOIN internacoes i ON h.\"CNES\" = i.\"CNES\" JOIN mortes m ON i.\"N_AIH\" = m.\"N_AIH\";",
      "predicted_sql": "SELECT COUNT(DISTINCT i.\"CNES\") FROM internacoes i JOIN mortes mo ON i.\"N_AIH\" = mo.\"N_AIH\";",
      "agent_success": true,
      "agent_execution_time": 11.099112510681152,
      "metrics": {
        "Exact Match (EM)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "ground_truth_original": "SELECT COUNT(DISTINCT h.\"CNES\") AS hospitais_com_mortes FROM hospital h JOIN internacoes i ON h.\"CNES\" = i.\"CNES\" JOIN mortes m ON i.\"N_AIH\" = m.\"N_AIH\";",
            "predicted_original": "SELECT COUNT(DISTINCT i.\"CNES\") FROM internacoes i JOIN mortes mo ON i.\"N_AIH\" = mo.\"N_AIH\";",
            "ground_truth_normalized": "SELECT COUNT(DISTINCT h.\"CNES\") AS hospitais_com_mortes FROM hospital h JOIN internacoes i ON h.\"CNES\" = i.\"CNES\" JOIN mortes m ON i.\"N_AIH\" = m.\"N_AIH\"",
            "predicted_normalized": "SELECT COUNT(DISTINCT i.\"CNES\") FROM internacoes i JOIN mortes mo ON i.\"N_AIH\" = mo.\"N_AIH\"",
            "match": false,
            "length_difference": -61,
            "first_difference_position": 22,
            "first_difference_context": {
              "ground_truth": "(DISTINCT h.\"CNES\") ",
              "predicted": "(DISTINCT i.\"CNES\") "
            },
            "word_count_difference": -9,
            "differing_words": [
              {
                "position": 2,
                "ground_truth": "h.\"CNES\")",
                "predicted": "i.\"CNES\")"
              },
              {
                "position": 3,
                "ground_truth": "AS",
                "predicted": "FROM"
              },
              {
                "position": 4,
                "ground_truth": "hospitais_com_mortes",
                "predicted": "internacoes"
              },
              {
                "position": 5,
                "ground_truth": "FROM",
                "predicted": "i"
              },
              {
                "position": 6,
                "ground_truth": "hospital",
                "predicted": "JOIN"
              }
            ],
            "common_errors": [
              "Quote mismatch (identifier quoting)"
            ]
          }
        },
        "Component Matching (CM)": {
          "score": 0.4,
          "is_correct": false,
          "error": null,
          "details": {
            "overall_score": 0.4,
            "component_scores": {
              "select": 0.0,
              "from": 0.0,
              "where": 1.0,
              "joins": 0.0,
              "group_by": 1.0,
              "order_by": 1.0,
              "having": 1.0,
              "limit": 1.0
            },
            "component_details": {
              "select": {
                "jaccard_similarity": 0.0,
                "gt_items": [
                  "COUNT ( DISTINCT h . \"CNES\" ) AS <alias>"
                ],
                "pred_items": [
                  "COUNT ( DISTINCT i . \"CNES\" )"
                ],
                "gt_normalized": [
                  "COUNT ( DISTINCT h . \"CNES\" ) AS <alias>"
                ],
                "pred_normalized": [
                  "COUNT ( DISTINCT i . \"CNES\" )"
                ],
                "exact_match": false
              },
              "from": {
                "gt_tables": [
                  "hospital"
                ],
                "pred_tables": [
                  "internacoes"
                ],
                "intersection_count": 0,
                "union_count": 2,
                "jaccard_similarity": 0.0
              },
              "where": {
                "match": "both_empty"
              },
              "joins": {
                "gt_normalized": "internacoes i h . \"CNES\" = i . \"CNES\" mortes m i . \"N_AIH\" = m . \"N_AIH\" ",
                "pred_normalized": "mortes mo i . \"N_AIH\" = mo . \"N_AIH\" ",
                "exact_match": false
              },
              "group_by": {
                "match": "both_empty"
              },
              "order_by": {
                "match": "both_empty"
              },
              "having": {
                "match": "both_empty"
              },
              "limit": {
                "match": "both_empty"
              }
            },
            "ground_truth_components": {
              "select": "COUNT ( DISTINCT h . \"CNES\" ) hospitais_com_mortes",
              "from": "hospital h",
              "where": "",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": "internacoes i h . \"CNES\" = i . \"CNES\" mortes m i . \"N_AIH\" = m . \"N_AIH\" ;"
            },
            "predicted_components": {
              "select": "COUNT ( DISTINCT i . \"CNES\" )",
              "from": "internacoes i",
              "where": "",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": "mortes mo i . \"N_AIH\" = mo . \"N_AIH\" ;"
            },
            "clause_weights": {
              "select": 0.25,
              "from": 0.2,
              "where": 0.2,
              "joins": 0.15,
              "group_by": 0.1,
              "order_by": 0.05,
              "having": 0.03,
              "limit": 0.02
            }
          }
        },
        "Execution Accuracy (EX)": {
          "score": 1.0,
          "is_correct": true,
          "error": null,
          "details": {
            "ground_truth_executed": true,
            "predicted_executed": true,
            "ground_truth_rows": 1,
            "predicted_rows": 1,
            "results_match": true,
            "comparison_details": {
              "gt_size": 1,
              "pred_size": 1,
              "normalized_match": true
            }
          }
        }
      }
    },
    {
      "question_id": "GT023",
      "difficulty": "hard",
      "question": "Quantas internações de UTI resultaram em óbito?",
      "ground_truth_sql": "SELECT COUNT(DISTINCT u.\"N_AIH\") AS uti_com_obito FROM uti_detalhes u JOIN mortes m ON u.\"N_AIH\" = m.\"N_AIH\";",
      "predicted_sql": "SELECT COUNT(i.\"N_AIH\") FROM uti_detalhes u JOIN internacoes i ON u.\"N_AIH\" = i.\"N_AIH\" JOIN mortes m ON i.\"N_AIH\" = m.\"N_AIH\" WHERE u.\"UTI_INT_TO\" > 0 AND m.\"CID_MORTE\" IS NOT NULL;",
      "agent_success": true,
      "agent_execution_time": 12.83811616897583,
      "metrics": {
        "Exact Match (EM)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "ground_truth_original": "SELECT COUNT(DISTINCT u.\"N_AIH\") AS uti_com_obito FROM uti_detalhes u JOIN mortes m ON u.\"N_AIH\" = m.\"N_AIH\";",
            "predicted_original": "SELECT COUNT(i.\"N_AIH\") FROM uti_detalhes u JOIN internacoes i ON u.\"N_AIH\" = i.\"N_AIH\" JOIN mortes m ON i.\"N_AIH\" = m.\"N_AIH\" WHERE u.\"UTI_INT_TO\" > 0 AND m.\"CID_MORTE\" IS NOT NULL;",
            "ground_truth_normalized": "SELECT COUNT(DISTINCT u.\"N_AIH\") AS uti_com_obito FROM uti_detalhes u JOIN mortes m ON u.\"N_AIH\" = m.\"N_AIH\"",
            "predicted_normalized": "SELECT COUNT(i.\"N_AIH\") FROM uti_detalhes u JOIN internacoes i ON u.\"N_AIH\" = i.\"N_AIH\" JOIN mortes m ON i.\"N_AIH\" = m.\"N_AIH\" WHERE u.\"UTI_INT_TO\" > 0 AND m.\"CID_MORTE\" IS NOT NULL",
            "match": false,
            "length_difference": 73,
            "first_difference_position": 13,
            "first_difference_context": {
              "ground_truth": "ECT COUNT(DISTINCT u",
              "predicted": "ECT COUNT(i.\"N_AIH\")"
            },
            "word_count_difference": 13,
            "differing_words": [
              {
                "position": 1,
                "ground_truth": "COUNT(DISTINCT",
                "predicted": "COUNT(i.\"N_AIH\")"
              },
              {
                "position": 2,
                "ground_truth": "u.\"N_AIH\")",
                "predicted": "FROM"
              },
              {
                "position": 3,
                "ground_truth": "AS",
                "predicted": "uti_detalhes"
              },
              {
                "position": 4,
                "ground_truth": "uti_com_obito",
                "predicted": "u"
              },
              {
                "position": 5,
                "ground_truth": "FROM",
                "predicted": "JOIN"
              }
            ],
            "common_errors": [
              "Extra WHERE clause",
              "Quote mismatch (identifier quoting)"
            ]
          }
        },
        "Component Matching (CM)": {
          "score": 0.4,
          "is_correct": false,
          "error": null,
          "details": {
            "overall_score": 0.4,
            "component_scores": {
              "select": 0.0,
              "from": 1.0,
              "where": 0.0,
              "joins": 0.0,
              "group_by": 1.0,
              "order_by": 1.0,
              "having": 1.0,
              "limit": 1.0
            },
            "component_details": {
              "select": {
                "jaccard_similarity": 0.0,
                "gt_items": [
                  "COUNT ( DISTINCT u . \"N_AIH\" ) AS <alias>"
                ],
                "pred_items": [
                  "COUNT ( i . \"N_AIH\" )"
                ],
                "gt_normalized": [
                  "COUNT ( DISTINCT u . \"N_AIH\" ) AS <alias>"
                ],
                "pred_normalized": [
                  "COUNT ( i . \"N_AIH\" )"
                ],
                "exact_match": false
              },
              "from": {
                "gt_tables": [
                  "uti_detalhes"
                ],
                "pred_tables": [
                  "uti_detalhes"
                ],
                "intersection_count": 1,
                "union_count": 1,
                "jaccard_similarity": 1.0
              },
              "where": {
                "match": "one_empty"
              },
              "joins": {
                "gt_normalized": "mortes m u . \"N_AIH\" = m . \"N_AIH\" ",
                "pred_normalized": "internacoes i u . \"N_AIH\" = i . \"N_AIH\" mortes m i . \"N_AIH\" = m . \"N_AIH\"",
                "exact_match": false
              },
              "group_by": {
                "match": "both_empty"
              },
              "order_by": {
                "match": "both_empty"
              },
              "having": {
                "match": "both_empty"
              },
              "limit": {
                "match": "both_empty"
              }
            },
            "ground_truth_components": {
              "select": "COUNT ( DISTINCT u . \"N_AIH\" ) uti_com_obito",
              "from": "uti_detalhes u",
              "where": "",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": "mortes m u . \"N_AIH\" = m . \"N_AIH\" ;"
            },
            "predicted_components": {
              "select": "COUNT ( i . \"N_AIH\" )",
              "from": "uti_detalhes u",
              "where": "u . \"UTI_INT_TO\" > 0 m . \"CID_MORTE\" ;",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": "internacoes i u . \"N_AIH\" = i . \"N_AIH\" mortes m i . \"N_AIH\" = m . \"N_AIH\""
            },
            "clause_weights": {
              "select": 0.25,
              "from": 0.2,
              "where": 0.2,
              "joins": 0.15,
              "group_by": 0.1,
              "order_by": 0.05,
              "having": 0.03,
              "limit": 0.02
            }
          }
        },
        "Execution Accuracy (EX)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "ground_truth_executed": true,
            "predicted_executed": true,
            "ground_truth_rows": 1,
            "predicted_rows": 1,
            "results_match": false,
            "comparison_details": {
              "gt_size": 1,
              "pred_size": 1,
              "normalized_match": false,
              "missing_rows_count": 1,
              "extra_rows_count": 1,
              "missing_rows_sample": [
                [
                  23768
                ]
              ],
              "extra_rows_sample": [
                [
                  0
                ]
              ],
              "overlap_ratio": 0.0
            }
          }
        }
      }
    },
    {
      "question_id": "GT024",
      "difficulty": "hard",
      "question": "Quais hospitais têm mais de 1000 internações registradas?",
      "ground_truth_sql": "SELECT h.\"CNES\", COUNT(i.\"N_AIH\") AS total_internacoes FROM hospital h JOIN internacoes i ON h.\"CNES\" = i.\"CNES\" GROUP BY h.\"CNES\" HAVING COUNT(i.\"N_AIH\") > 1000 ORDER BY total_internacoes DESC;",
      "predicted_sql": "SELECT \"CNES\", COUNT(*) AS total_internacoes FROM internacoes GROUP BY \"CNES\" HAVING COUNT(*) > 1000;",
      "agent_success": true,
      "agent_execution_time": 14.564347505569458,
      "metrics": {
        "Exact Match (EM)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "ground_truth_original": "SELECT h.\"CNES\", COUNT(i.\"N_AIH\") AS total_internacoes FROM hospital h JOIN internacoes i ON h.\"CNES\" = i.\"CNES\" GROUP BY h.\"CNES\" HAVING COUNT(i.\"N_AIH\") > 1000 ORDER BY total_internacoes DESC;",
            "predicted_original": "SELECT \"CNES\", COUNT(*) AS total_internacoes FROM internacoes GROUP BY \"CNES\" HAVING COUNT(*) > 1000;",
            "ground_truth_normalized": "SELECT h.\"CNES\", COUNT(i.\"N_AIH\") AS total_internacoes FROM hospital h JOIN internacoes i ON h.\"CNES\" = i.\"CNES\" GROUP BY h.\"CNES\" HAVING COUNT(i.\"N_AIH\") > 1000 ORDER BY total_internacoes DESC",
            "predicted_normalized": "SELECT \"CNES\", COUNT(*) AS total_internacoes FROM internacoes GROUP BY \"CNES\" HAVING COUNT(*) > 1000",
            "match": false,
            "length_difference": -93,
            "first_difference_position": 7,
            "first_difference_context": {
              "ground_truth": "SELECT h.\"CNES\", ",
              "predicted": "SELECT \"CNES\", CO"
            },
            "word_count_difference": -12,
            "differing_words": [
              {
                "position": 1,
                "ground_truth": "h.\"CNES\",",
                "predicted": "\"CNES\","
              },
              {
                "position": 2,
                "ground_truth": "COUNT(i.\"N_AIH\")",
                "predicted": "COUNT(*)"
              },
              {
                "position": 6,
                "ground_truth": "hospital",
                "predicted": "internacoes"
              },
              {
                "position": 7,
                "ground_truth": "h",
                "predicted": "GROUP"
              },
              {
                "position": 8,
                "ground_truth": "JOIN",
                "predicted": "BY"
              }
            ],
            "common_errors": [
              "Missing ORDER BY clause",
              "Quote mismatch (identifier quoting)",
              "Missing JOIN operation"
            ]
          }
        },
        "Component Matching (CM)": {
          "score": 0.22,
          "is_correct": false,
          "error": null,
          "details": {
            "overall_score": 0.22,
            "component_scores": {
              "select": 0.0,
              "from": 0.0,
              "where": 1.0,
              "joins": 0.0,
              "group_by": 0.0,
              "order_by": 0.0,
              "having": 0.0,
              "limit": 1.0
            },
            "component_details": {
              "select": {
                "jaccard_similarity": 0.0,
                "gt_items": [
                  "h . \"CNES\"",
                  "COUNT ( i . \"N_AIH\" ) AS <alias>"
                ],
                "pred_items": [
                  "\"CNES\"",
                  "COUNT ( * ) AS <alias>"
                ],
                "gt_normalized": [
                  "h . \"CNES\"",
                  "COUNT ( i . \"N_AIH\" ) AS <alias>"
                ],
                "pred_normalized": [
                  "\"CNES\"",
                  "COUNT ( * ) AS <alias>"
                ],
                "exact_match": false
              },
              "from": {
                "gt_tables": [
                  "hospital"
                ],
                "pred_tables": [
                  "internacoes"
                ],
                "intersection_count": 0,
                "union_count": 2,
                "jaccard_similarity": 0.0
              },
              "where": {
                "match": "both_empty"
              },
              "joins": {
                "match": "one_empty"
              },
              "group_by": {
                "gt_normalized": "h . \"CNES\"",
                "pred_normalized": "\"CNES\"",
                "exact_match": false
              },
              "order_by": {
                "match": "one_empty"
              },
              "having": {
                "gt_normalized": "COUNT ( i . \"N_AIH\" ) > 1000",
                "pred_normalized": "COUNT ( * ) > 1000 ",
                "exact_match": false
              },
              "limit": {
                "match": "both_empty"
              }
            },
            "ground_truth_components": {
              "select": "h . \"CNES\" , COUNT ( i . \"N_AIH\" ) total_internacoes",
              "from": "hospital h",
              "where": "",
              "group_by": "h . \"CNES\"",
              "having": "COUNT ( i . \"N_AIH\" ) > 1000",
              "order_by": "total_internacoes ;",
              "limit": "",
              "joins": "internacoes i h . \"CNES\" = i . \"CNES\""
            },
            "predicted_components": {
              "select": "\"CNES\" , COUNT ( * ) total_internacoes",
              "from": "internacoes",
              "where": "",
              "group_by": "\"CNES\"",
              "having": "COUNT ( * ) > 1000 ;",
              "order_by": "",
              "limit": "",
              "joins": ""
            },
            "clause_weights": {
              "select": 0.25,
              "from": 0.2,
              "where": 0.2,
              "joins": 0.15,
              "group_by": 0.1,
              "order_by": 0.05,
              "having": 0.03,
              "limit": 0.02
            }
          }
        },
        "Execution Accuracy (EX)": {
          "score": 1.0,
          "is_correct": true,
          "error": null,
          "details": {
            "ground_truth_executed": true,
            "predicted_executed": true,
            "ground_truth_rows": 307,
            "predicted_rows": 307,
            "results_match": true,
            "comparison_details": {
              "gt_size": 307,
              "pred_size": 307,
              "normalized_match": true
            }
          }
        }
      }
    },
    {
      "question_id": "GT025",
      "difficulty": "hard",
      "question": "Quantas internações com condições especiais resultaram em morte?",
      "ground_truth_sql": "SELECT COUNT(DISTINCT c.\"N_AIH\") AS condicoes_com_obito FROM condicoes_especificas c JOIN mortes m ON c.\"N_AIH\" = m.\"N_AIH\";",
      "predicted_sql": "SELECT COUNT(DISTINCT i.\"N_AIH\") FROM condicoes_especificas ce JOIN internacoes i ON ce.\"N_AIH\" = i.\"N_AIH\" JOIN mortes m ON i.\"N_AIH\" = m.\"N_AIH\" WHERE ce.\"IND_VDRL\" IS NOT NULL;",
      "agent_success": true,
      "agent_execution_time": 13.050130367279053,
      "metrics": {
        "Exact Match (EM)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "ground_truth_original": "SELECT COUNT(DISTINCT c.\"N_AIH\") AS condicoes_com_obito FROM condicoes_especificas c JOIN mortes m ON c.\"N_AIH\" = m.\"N_AIH\";",
            "predicted_original": "SELECT COUNT(DISTINCT i.\"N_AIH\") FROM condicoes_especificas ce JOIN internacoes i ON ce.\"N_AIH\" = i.\"N_AIH\" JOIN mortes m ON i.\"N_AIH\" = m.\"N_AIH\" WHERE ce.\"IND_VDRL\" IS NOT NULL;",
            "ground_truth_normalized": "SELECT COUNT(DISTINCT c.\"N_AIH\") AS condicoes_com_obito FROM condicoes_especificas c JOIN mortes m ON c.\"N_AIH\" = m.\"N_AIH\"",
            "predicted_normalized": "SELECT COUNT(DISTINCT i.\"N_AIH\") FROM condicoes_especificas ce JOIN internacoes i ON ce.\"N_AIH\" = i.\"N_AIH\" JOIN mortes m ON i.\"N_AIH\" = m.\"N_AIH\" WHERE ce.\"IND_VDRL\" IS NOT NULL",
            "match": false,
            "length_difference": 55,
            "first_difference_position": 22,
            "first_difference_context": {
              "ground_truth": "(DISTINCT c.\"N_AIH\")",
              "predicted": "(DISTINCT i.\"N_AIH\")"
            },
            "word_count_difference": 10,
            "differing_words": [
              {
                "position": 2,
                "ground_truth": "c.\"N_AIH\")",
                "predicted": "i.\"N_AIH\")"
              },
              {
                "position": 3,
                "ground_truth": "AS",
                "predicted": "FROM"
              },
              {
                "position": 4,
                "ground_truth": "condicoes_com_obito",
                "predicted": "condicoes_especificas"
              },
              {
                "position": 5,
                "ground_truth": "FROM",
                "predicted": "ce"
              },
              {
                "position": 6,
                "ground_truth": "condicoes_especificas",
                "predicted": "JOIN"
              }
            ],
            "common_errors": [
              "Extra WHERE clause",
              "Quote mismatch (identifier quoting)"
            ]
          }
        },
        "Component Matching (CM)": {
          "score": 0.4,
          "is_correct": false,
          "error": null,
          "details": {
            "overall_score": 0.4,
            "component_scores": {
              "select": 0.0,
              "from": 1.0,
              "where": 0.0,
              "joins": 0.0,
              "group_by": 1.0,
              "order_by": 1.0,
              "having": 1.0,
              "limit": 1.0
            },
            "component_details": {
              "select": {
                "jaccard_similarity": 0.0,
                "gt_items": [
                  "COUNT ( DISTINCT c . \"N_AIH\" ) AS <alias>"
                ],
                "pred_items": [
                  "COUNT ( DISTINCT i . \"N_AIH\" )"
                ],
                "gt_normalized": [
                  "COUNT ( DISTINCT c . \"N_AIH\" ) AS <alias>"
                ],
                "pred_normalized": [
                  "COUNT ( DISTINCT i . \"N_AIH\" )"
                ],
                "exact_match": false
              },
              "from": {
                "gt_tables": [
                  "condicoes_especificas"
                ],
                "pred_tables": [
                  "condicoes_especificas"
                ],
                "intersection_count": 1,
                "union_count": 1,
                "jaccard_similarity": 1.0
              },
              "where": {
                "match": "one_empty"
              },
              "joins": {
                "gt_normalized": "mortes m c . \"N_AIH\" = m . \"N_AIH\" ",
                "pred_normalized": "internacoes i ce . \"N_AIH\" = i . \"N_AIH\" mortes m i . \"N_AIH\" = m . \"N_AIH\"",
                "exact_match": false
              },
              "group_by": {
                "match": "both_empty"
              },
              "order_by": {
                "match": "both_empty"
              },
              "having": {
                "match": "both_empty"
              },
              "limit": {
                "match": "both_empty"
              }
            },
            "ground_truth_components": {
              "select": "COUNT ( DISTINCT c . \"N_AIH\" ) condicoes_com_obito",
              "from": "condicoes_especificas c",
              "where": "",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": "mortes m c . \"N_AIH\" = m . \"N_AIH\" ;"
            },
            "predicted_components": {
              "select": "COUNT ( DISTINCT i . \"N_AIH\" )",
              "from": "condicoes_especificas ce",
              "where": "ce . \"IND_VDRL\" ;",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": "internacoes i ce . \"N_AIH\" = i . \"N_AIH\" mortes m i . \"N_AIH\" = m . \"N_AIH\""
            },
            "clause_weights": {
              "select": 0.25,
              "from": 0.2,
              "where": 0.2,
              "joins": 0.15,
              "group_by": 0.1,
              "order_by": 0.05,
              "having": 0.03,
              "limit": 0.02
            }
          }
        },
        "Execution Accuracy (EX)": {
          "score": 1.0,
          "is_correct": true,
          "error": null,
          "details": {
            "ground_truth_executed": true,
            "predicted_executed": true,
            "ground_truth_rows": 1,
            "predicted_rows": 1,
            "results_match": true,
            "comparison_details": {
              "gt_size": 1,
              "pred_size": 1,
              "normalized_match": true
            }
          }
        }
      }
    },
    {
      "question_id": "GT026",
      "difficulty": "hard",
      "question": "Qual o valor médio das internações que resultaram em óbito?",
      "ground_truth_sql": "SELECT AVG(i.\"VAL_TOT\") AS valor_medio_obitos FROM internacoes i JOIN mortes m ON i.\"N_AIH\" = m.\"N_AIH\" WHERE i.\"VAL_TOT\" IS NOT NULL;",
      "predicted_sql": "SELECT AVG(i.\"VAL_TOT\") FROM mortes mo JOIN internacoes i ON mo.\"N_AIH\" = i.\"N_AIH\";",
      "agent_success": true,
      "agent_execution_time": 10.844112396240234,
      "metrics": {
        "Exact Match (EM)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "ground_truth_original": "SELECT AVG(i.\"VAL_TOT\") AS valor_medio_obitos FROM internacoes i JOIN mortes m ON i.\"N_AIH\" = m.\"N_AIH\" WHERE i.\"VAL_TOT\" IS NOT NULL;",
            "predicted_original": "SELECT AVG(i.\"VAL_TOT\") FROM mortes mo JOIN internacoes i ON mo.\"N_AIH\" = i.\"N_AIH\";",
            "ground_truth_normalized": "SELECT AVG(i.\"VAL_TOT\") AS valor_medio_obitos FROM internacoes i JOIN mortes m ON i.\"N_AIH\" = m.\"N_AIH\" WHERE i.\"VAL_TOT\" IS NOT NULL",
            "predicted_normalized": "SELECT AVG(i.\"VAL_TOT\") FROM mortes mo JOIN internacoes i ON mo.\"N_AIH\" = i.\"N_AIH\"",
            "match": false,
            "length_difference": -50,
            "first_difference_position": 24,
            "first_difference_context": {
              "ground_truth": "VAL_TOT\") AS valor_m",
              "predicted": "VAL_TOT\") FROM morte"
            },
            "word_count_difference": -7,
            "differing_words": [
              {
                "position": 2,
                "ground_truth": "AS",
                "predicted": "FROM"
              },
              {
                "position": 3,
                "ground_truth": "valor_medio_obitos",
                "predicted": "mortes"
              },
              {
                "position": 4,
                "ground_truth": "FROM",
                "predicted": "mo"
              },
              {
                "position": 5,
                "ground_truth": "internacoes",
                "predicted": "JOIN"
              },
              {
                "position": 6,
                "ground_truth": "i",
                "predicted": "internacoes"
              }
            ],
            "common_errors": [
              "Missing WHERE clause",
              "Quote mismatch (identifier quoting)"
            ]
          }
        },
        "Component Matching (CM)": {
          "score": 0.375,
          "is_correct": false,
          "error": null,
          "details": {
            "overall_score": 0.375,
            "component_scores": {
              "select": 0.7,
              "from": 0.0,
              "where": 0.0,
              "joins": 0.0,
              "group_by": 1.0,
              "order_by": 1.0,
              "having": 1.0,
              "limit": 1.0
            },
            "component_details": {
              "select": {
                "jaccard_similarity": 0.7,
                "gt_items": [
                  "AVG ( i . \"VAL_TOT\" ) AS <alias>"
                ],
                "pred_items": [
                  "AVG ( i . \"VAL_TOT\" )"
                ],
                "gt_normalized": [
                  "AVG ( i . \"VAL_TOT\" ) AS <alias>"
                ],
                "pred_normalized": [
                  "AVG ( i . \"VAL_TOT\" )"
                ],
                "exact_match": false
              },
              "from": {
                "gt_tables": [
                  "internacoes"
                ],
                "pred_tables": [
                  "mortes"
                ],
                "intersection_count": 0,
                "union_count": 2,
                "jaccard_similarity": 0.0
              },
              "where": {
                "match": "one_empty"
              },
              "joins": {
                "gt_normalized": "mortes m i . \"N_AIH\" = m . \"N_AIH\"",
                "pred_normalized": "internacoes i mo . \"N_AIH\" = i . \"N_AIH\" ",
                "exact_match": false
              },
              "group_by": {
                "match": "both_empty"
              },
              "order_by": {
                "match": "both_empty"
              },
              "having": {
                "match": "both_empty"
              },
              "limit": {
                "match": "both_empty"
              }
            },
            "ground_truth_components": {
              "select": "AVG ( i . \"VAL_TOT\" ) valor_medio_obitos",
              "from": "internacoes i",
              "where": "i . \"VAL_TOT\" ;",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": "mortes m i . \"N_AIH\" = m . \"N_AIH\""
            },
            "predicted_components": {
              "select": "AVG ( i . \"VAL_TOT\" )",
              "from": "mortes mo",
              "where": "",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": "internacoes i mo . \"N_AIH\" = i . \"N_AIH\" ;"
            },
            "clause_weights": {
              "select": 0.25,
              "from": 0.2,
              "where": 0.2,
              "joins": 0.15,
              "group_by": 0.1,
              "order_by": 0.05,
              "having": 0.03,
              "limit": 0.02
            }
          }
        },
        "Execution Accuracy (EX)": {
          "score": 1.0,
          "is_correct": true,
          "error": null,
          "details": {
            "ground_truth_executed": true,
            "predicted_executed": true,
            "ground_truth_rows": 1,
            "predicted_rows": 1,
            "results_match": true,
            "comparison_details": {
              "gt_size": 1,
              "pred_size": 1,
              "normalized_match": true
            }
          }
        }
      }
    },
    {
      "question_id": "GT027",
      "difficulty": "hard",
      "question": "Quantos casos CBOR tiveram acompanhamento em UTI?",
      "ground_truth_sql": "SELECT COUNT(DISTINCT c.\"N_AIH\") AS cbor_com_uti FROM cbor c JOIN uti_detalhes u ON c.\"N_AIH\" = u.\"N_AIH\";",
      "predicted_sql": "SELECT COUNT(DISTINCT i.\"N_AIH\") FROM internacoes i JOIN cbor cb ON i.\"N_AIH\" = cb.\"N_AIH\" JOIN uti_detalhes ud ON i.\"N_AIH\" = ud.\"N_AIH\";",
      "agent_success": true,
      "agent_execution_time": 11.56369423866272,
      "metrics": {
        "Exact Match (EM)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "ground_truth_original": "SELECT COUNT(DISTINCT c.\"N_AIH\") AS cbor_com_uti FROM cbor c JOIN uti_detalhes u ON c.\"N_AIH\" = u.\"N_AIH\";",
            "predicted_original": "SELECT COUNT(DISTINCT i.\"N_AIH\") FROM internacoes i JOIN cbor cb ON i.\"N_AIH\" = cb.\"N_AIH\" JOIN uti_detalhes ud ON i.\"N_AIH\" = ud.\"N_AIH\";",
            "ground_truth_normalized": "SELECT COUNT(DISTINCT c.\"N_AIH\") AS cbor_com_uti FROM cbor c JOIN uti_detalhes u ON c.\"N_AIH\" = u.\"N_AIH\"",
            "predicted_normalized": "SELECT COUNT(DISTINCT i.\"N_AIH\") FROM internacoes i JOIN cbor cb ON i.\"N_AIH\" = cb.\"N_AIH\" JOIN uti_detalhes ud ON i.\"N_AIH\" = ud.\"N_AIH\"",
            "match": false,
            "length_difference": 32,
            "first_difference_position": 22,
            "first_difference_context": {
              "ground_truth": "(DISTINCT c.\"N_AIH\")",
              "predicted": "(DISTINCT i.\"N_AIH\")"
            },
            "word_count_difference": 5,
            "differing_words": [
              {
                "position": 2,
                "ground_truth": "c.\"N_AIH\")",
                "predicted": "i.\"N_AIH\")"
              },
              {
                "position": 3,
                "ground_truth": "AS",
                "predicted": "FROM"
              },
              {
                "position": 4,
                "ground_truth": "cbor_com_uti",
                "predicted": "internacoes"
              },
              {
                "position": 5,
                "ground_truth": "FROM",
                "predicted": "i"
              },
              {
                "position": 6,
                "ground_truth": "cbor",
                "predicted": "JOIN"
              }
            ],
            "common_errors": [
              "Quote mismatch (identifier quoting)"
            ]
          }
        },
        "Component Matching (CM)": {
          "score": 0.4,
          "is_correct": false,
          "error": null,
          "details": {
            "overall_score": 0.4,
            "component_scores": {
              "select": 0.0,
              "from": 0.0,
              "where": 1.0,
              "joins": 0.0,
              "group_by": 1.0,
              "order_by": 1.0,
              "having": 1.0,
              "limit": 1.0
            },
            "component_details": {
              "select": {
                "jaccard_similarity": 0.0,
                "gt_items": [
                  "COUNT ( DISTINCT c . \"N_AIH\" ) AS <alias>"
                ],
                "pred_items": [
                  "COUNT ( DISTINCT i . \"N_AIH\" )"
                ],
                "gt_normalized": [
                  "COUNT ( DISTINCT c . \"N_AIH\" ) AS <alias>"
                ],
                "pred_normalized": [
                  "COUNT ( DISTINCT i . \"N_AIH\" )"
                ],
                "exact_match": false
              },
              "from": {
                "gt_tables": [
                  "cbor"
                ],
                "pred_tables": [
                  "internacoes"
                ],
                "intersection_count": 0,
                "union_count": 2,
                "jaccard_similarity": 0.0
              },
              "where": {
                "match": "both_empty"
              },
              "joins": {
                "gt_normalized": "uti_detalhes u c . \"N_AIH\" = u . \"N_AIH\" ",
                "pred_normalized": "cbor cb i . \"N_AIH\" = cb . \"N_AIH\" uti_detalhes ud i . \"N_AIH\" = ud . \"N_AIH\" ",
                "exact_match": false
              },
              "group_by": {
                "match": "both_empty"
              },
              "order_by": {
                "match": "both_empty"
              },
              "having": {
                "match": "both_empty"
              },
              "limit": {
                "match": "both_empty"
              }
            },
            "ground_truth_components": {
              "select": "COUNT ( DISTINCT c . \"N_AIH\" ) cbor_com_uti",
              "from": "cbor c",
              "where": "",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": "uti_detalhes u c . \"N_AIH\" = u . \"N_AIH\" ;"
            },
            "predicted_components": {
              "select": "COUNT ( DISTINCT i . \"N_AIH\" )",
              "from": "internacoes i",
              "where": "",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": "cbor cb i . \"N_AIH\" = cb . \"N_AIH\" uti_detalhes ud i . \"N_AIH\" = ud . \"N_AIH\" ;"
            },
            "clause_weights": {
              "select": 0.25,
              "from": 0.2,
              "where": 0.2,
              "joins": 0.15,
              "group_by": 0.1,
              "order_by": 0.05,
              "having": 0.03,
              "limit": 0.02
            }
          }
        },
        "Execution Accuracy (EX)": {
          "score": 1.0,
          "is_correct": true,
          "error": null,
          "details": {
            "ground_truth_executed": true,
            "predicted_executed": true,
            "ground_truth_rows": 1,
            "predicted_rows": 1,
            "results_match": true,
            "comparison_details": {
              "gt_size": 1,
              "pred_size": 1,
              "normalized_match": true
            }
          }
        }
      }
    },
    {
      "question_id": "GT028",
      "difficulty": "hard",
      "question": "Qual a taxa de mortalidade por município (top 10)?",
      "ground_truth_sql": "SELECT i.\"MUNIC_RES\", COUNT(DISTINCT i.\"N_AIH\") as internacoes, COUNT(DISTINCT m.\"N_AIH\") as mortes, ROUND(COUNT(DISTINCT m.\"N_AIH\")::numeric / COUNT(DISTINCT i.\"N_AIH\") * 100, 2) as taxa_mortalidade FROM internacoes i LEFT JOIN mortes m ON i.\"N_AIH\" = m.\"N_AIH\" WHERE i.\"MUNIC_RES\" IS NOT NULL GROUP BY i.\"MUNIC_RES\" HAVING COUNT(DISTINCT i.\"N_AIH\") > 100 ORDER BY taxa_mortalidade DESC LIMIT 10;",
      "predicted_sql": "",
      "agent_success": false,
      "agent_execution_time": 87.05462455749512,
      "metrics": {
        "Exact Match (EM)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "ground_truth_normalized": "",
            "predicted_normalized": "",
            "reason": "Empty or missing SQL query"
          }
        },
        "Component Matching (CM)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "reason": "Empty or missing SQL query",
            "component_scores": {}
          }
        },
        "Execution Accuracy (EX)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "reason": "Empty or missing SQL query",
            "ground_truth_executed": false,
            "predicted_executed": false
          }
        }
      }
    },
    {
      "question_id": "GT030",
      "difficulty": "medium",
      "question": "Qual é o valor médio de UTI para homens?",
      "ground_truth_sql": "SELECT AVG(u.\"VAL_UTI\") AS valor_medio_uti_homens FROM uti_detalhes u JOIN internacoes i ON u.\"N_AIH\" = i.\"N_AIH\" WHERE i.\"SEXO\" = 1 AND u.\"VAL_UTI\" IS NOT NULL;",
      "predicted_sql": "SELECT AVG(u.\"VAL_UTI\") AS media_uti_homem FROM uti_detalhes u JOIN internacoes i ON u.\"N_AIH\" = i.\"N_AIH\" WHERE i.\"SEXO\" = 1;",
      "agent_success": true,
      "agent_execution_time": 17.174968004226685,
      "metrics": {
        "Exact Match (EM)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "ground_truth_original": "SELECT AVG(u.\"VAL_UTI\") AS valor_medio_uti_homens FROM uti_detalhes u JOIN internacoes i ON u.\"N_AIH\" = i.\"N_AIH\" WHERE i.\"SEXO\" = 1 AND u.\"VAL_UTI\" IS NOT NULL;",
            "predicted_original": "SELECT AVG(u.\"VAL_UTI\") AS media_uti_homem FROM uti_detalhes u JOIN internacoes i ON u.\"N_AIH\" = i.\"N_AIH\" WHERE i.\"SEXO\" = 1;",
            "ground_truth_normalized": "SELECT AVG(u.\"VAL_UTI\") AS valor_medio_uti_homens FROM uti_detalhes u JOIN internacoes i ON u.\"N_AIH\" = i.\"N_AIH\" WHERE i.\"SEXO\" = 1 AND u.\"VAL_UTI\" IS NOT NULL",
            "predicted_normalized": "SELECT AVG(u.\"VAL_UTI\") AS media_uti_homem FROM uti_detalhes u JOIN internacoes i ON u.\"N_AIH\" = i.\"N_AIH\" WHERE i.\"SEXO\" = 1",
            "match": false,
            "length_difference": -35,
            "first_difference_position": 27,
            "first_difference_context": {
              "ground_truth": "_UTI\") AS valor_medi",
              "predicted": "_UTI\") AS media_uti_"
            },
            "word_count_difference": -5,
            "differing_words": [
              {
                "position": 3,
                "ground_truth": "valor_medio_uti_homens",
                "predicted": "media_uti_homem"
              },
              {
                "position": 18,
                "ground_truth": "AND",
                "predicted": "<EXTRA>"
              },
              {
                "position": 19,
                "ground_truth": "u.\"VAL_UTI\"",
                "predicted": "<EXTRA>"
              },
              {
                "position": 20,
                "ground_truth": "IS",
                "predicted": "<EXTRA>"
              },
              {
                "position": 21,
                "ground_truth": "NOT",
                "predicted": "<EXTRA>"
              }
            ],
            "common_errors": [
              "Quote mismatch (identifier quoting)"
            ]
          }
        },
        "Component Matching (CM)": {
          "score": 0.8,
          "is_correct": true,
          "error": null,
          "details": {
            "overall_score": 0.8,
            "component_scores": {
              "select": 1.0,
              "from": 1.0,
              "where": 0.0,
              "joins": 1.0,
              "group_by": 1.0,
              "order_by": 1.0,
              "having": 1.0,
              "limit": 1.0
            },
            "component_details": {
              "select": {
                "jaccard_similarity": 1.0,
                "gt_items": [
                  "AVG ( u . \"VAL_UTI\" ) AS <alias>"
                ],
                "pred_items": [
                  "AVG ( u . \"VAL_UTI\" ) AS <alias>"
                ],
                "gt_normalized": [
                  "AVG ( u . \"VAL_UTI\" ) AS <alias>"
                ],
                "pred_normalized": [
                  "AVG ( u . \"VAL_UTI\" ) AS <alias>"
                ],
                "exact_match": true
              },
              "from": {
                "gt_tables": [
                  "uti_detalhes"
                ],
                "pred_tables": [
                  "uti_detalhes"
                ],
                "intersection_count": 1,
                "union_count": 1,
                "jaccard_similarity": 1.0
              },
              "where": {
                "gt_conditions": [
                  "i . \"SEXO\" = 1 u . \"VAL_UTI\" "
                ],
                "pred_conditions": [
                  "i . \"SEXO\" = 1 "
                ],
                "intersection_count": 0,
                "union_count": 2,
                "jaccard_similarity": 0.0
              },
              "joins": {
                "gt_normalized": "internacoes i u . \"N_AIH\" = i . \"N_AIH\"",
                "pred_normalized": "internacoes i u . \"N_AIH\" = i . \"N_AIH\"",
                "exact_match": true
              },
              "group_by": {
                "match": "both_empty"
              },
              "order_by": {
                "match": "both_empty"
              },
              "having": {
                "match": "both_empty"
              },
              "limit": {
                "match": "both_empty"
              }
            },
            "ground_truth_components": {
              "select": "AVG ( u . \"VAL_UTI\" ) valor_medio_uti_homens",
              "from": "uti_detalhes u",
              "where": "i . \"SEXO\" = 1 u . \"VAL_UTI\" ;",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": "internacoes i u . \"N_AIH\" = i . \"N_AIH\""
            },
            "predicted_components": {
              "select": "AVG ( u . \"VAL_UTI\" ) media_uti_homem",
              "from": "uti_detalhes u",
              "where": "i . \"SEXO\" = 1 ;",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": "internacoes i u . \"N_AIH\" = i . \"N_AIH\""
            },
            "clause_weights": {
              "select": 0.25,
              "from": 0.2,
              "where": 0.2,
              "joins": 0.15,
              "group_by": 0.1,
              "order_by": 0.05,
              "having": 0.03,
              "limit": 0.02
            }
          }
        },
        "Execution Accuracy (EX)": {
          "score": 1.0,
          "is_correct": true,
          "error": null,
          "details": {
            "ground_truth_executed": true,
            "predicted_executed": true,
            "ground_truth_rows": 1,
            "predicted_rows": 1,
            "results_match": true,
            "comparison_details": {
              "gt_size": 1,
              "pred_size": 1,
              "normalized_match": true
            }
          }
        }
      }
    },
    {
      "question_id": "GT031",
      "difficulty": "easy",
      "question": "Quantas mulheres foram internadas?",
      "ground_truth_sql": "SELECT COUNT(*) AS total_mulheres FROM internacoes WHERE \"SEXO\" = 3;",
      "predicted_sql": "SELECT COUNT(i.\"N_AIH\") FROM internacoes i WHERE i.\"SEXO\" = 3;",
      "agent_success": true,
      "agent_execution_time": 8.830778360366821,
      "metrics": {
        "Exact Match (EM)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "ground_truth_original": "SELECT COUNT(*) AS total_mulheres FROM internacoes WHERE \"SEXO\" = 3;",
            "predicted_original": "SELECT COUNT(i.\"N_AIH\") FROM internacoes i WHERE i.\"SEXO\" = 3;",
            "ground_truth_normalized": "SELECT COUNT(*) AS total_mulheres FROM internacoes WHERE \"SEXO\" = 3",
            "predicted_normalized": "SELECT COUNT(i.\"N_AIH\") FROM internacoes i WHERE i.\"SEXO\" = 3",
            "match": false,
            "length_difference": -6,
            "first_difference_position": 13,
            "first_difference_context": {
              "ground_truth": "ECT COUNT(*) AS tota",
              "predicted": "ECT COUNT(i.\"N_AIH\")"
            },
            "word_count_difference": -1,
            "differing_words": [
              {
                "position": 1,
                "ground_truth": "COUNT(*)",
                "predicted": "COUNT(i.\"N_AIH\")"
              },
              {
                "position": 2,
                "ground_truth": "AS",
                "predicted": "FROM"
              },
              {
                "position": 3,
                "ground_truth": "total_mulheres",
                "predicted": "internacoes"
              },
              {
                "position": 4,
                "ground_truth": "FROM",
                "predicted": "i"
              },
              {
                "position": 5,
                "ground_truth": "internacoes",
                "predicted": "WHERE"
              }
            ],
            "common_errors": [
              "Quote mismatch (identifier quoting)"
            ]
          }
        },
        "Component Matching (CM)": {
          "score": 0.55,
          "is_correct": false,
          "error": null,
          "details": {
            "overall_score": 0.55,
            "component_scores": {
              "select": 0.0,
              "from": 1.0,
              "where": 0.0,
              "joins": 1.0,
              "group_by": 1.0,
              "order_by": 1.0,
              "having": 1.0,
              "limit": 1.0
            },
            "component_details": {
              "select": {
                "jaccard_similarity": 0.0,
                "gt_items": [
                  "COUNT ( * ) AS <alias>"
                ],
                "pred_items": [
                  "COUNT ( i . \"N_AIH\" )"
                ],
                "gt_normalized": [
                  "COUNT ( * ) AS <alias>"
                ],
                "pred_normalized": [
                  "COUNT ( i . \"N_AIH\" )"
                ],
                "exact_match": false
              },
              "from": {
                "gt_tables": [
                  "internacoes"
                ],
                "pred_tables": [
                  "internacoes"
                ],
                "intersection_count": 1,
                "union_count": 1,
                "jaccard_similarity": 1.0
              },
              "where": {
                "gt_conditions": [
                  "\"SEXO\" = 3 "
                ],
                "pred_conditions": [
                  "i . \"SEXO\" = 3 "
                ],
                "intersection_count": 0,
                "union_count": 2,
                "jaccard_similarity": 0.0
              },
              "joins": {
                "match": "both_empty"
              },
              "group_by": {
                "match": "both_empty"
              },
              "order_by": {
                "match": "both_empty"
              },
              "having": {
                "match": "both_empty"
              },
              "limit": {
                "match": "both_empty"
              }
            },
            "ground_truth_components": {
              "select": "COUNT ( * ) total_mulheres",
              "from": "internacoes",
              "where": "\"SEXO\" = 3 ;",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": ""
            },
            "predicted_components": {
              "select": "COUNT ( i . \"N_AIH\" )",
              "from": "internacoes i",
              "where": "i . \"SEXO\" = 3 ;",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": ""
            },
            "clause_weights": {
              "select": 0.25,
              "from": 0.2,
              "where": 0.2,
              "joins": 0.15,
              "group_by": 0.1,
              "order_by": 0.05,
              "having": 0.03,
              "limit": 0.02
            }
          }
        },
        "Execution Accuracy (EX)": {
          "score": 1.0,
          "is_correct": true,
          "error": null,
          "details": {
            "ground_truth_executed": true,
            "predicted_executed": true,
            "ground_truth_rows": 1,
            "predicted_rows": 1,
            "results_match": true,
            "comparison_details": {
              "gt_size": 1,
              "pred_size": 1,
              "normalized_match": true
            }
          }
        }
      }
    },
    {
      "question_id": "GT032",
      "difficulty": "easy",
      "question": "Qual a latitude e longitude de Porto Alegre?",
      "ground_truth_sql": "SELECT latitude, longitude FROM municipios WHERE nome = 'Porto Alegre';",
      "predicted_sql": "SELECT \"latitude\", \"longitude\" FROM municipios WHERE \"nome\" = 'Porto Alegre';",
      "agent_success": true,
      "agent_execution_time": 10.600874423980713,
      "metrics": {
        "Exact Match (EM)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "ground_truth_original": "SELECT latitude, longitude FROM municipios WHERE nome = 'Porto Alegre';",
            "predicted_original": "SELECT \"latitude\", \"longitude\" FROM municipios WHERE \"nome\" = 'Porto Alegre';",
            "ground_truth_normalized": "SELECT latitude, longitude FROM municipios WHERE nome = 'Porto Alegre'",
            "predicted_normalized": "SELECT \"latitude\", \"longitude\" FROM municipios WHERE \"nome\" = 'Porto Alegre'",
            "match": false,
            "length_difference": 6,
            "first_difference_position": 7,
            "first_difference_context": {
              "ground_truth": "SELECT latitude, ",
              "predicted": "SELECT \"latitude\""
            },
            "word_count_difference": 0,
            "differing_words": [
              {
                "position": 1,
                "ground_truth": "latitude,",
                "predicted": "\"latitude\","
              },
              {
                "position": 2,
                "ground_truth": "longitude",
                "predicted": "\"longitude\""
              },
              {
                "position": 6,
                "ground_truth": "nome",
                "predicted": "\"nome\""
              }
            ],
            "common_errors": [
              "Quote mismatch (identifier quoting)"
            ]
          }
        },
        "Component Matching (CM)": {
          "score": 0.55,
          "is_correct": false,
          "error": null,
          "details": {
            "overall_score": 0.55,
            "component_scores": {
              "select": 0.0,
              "from": 1.0,
              "where": 0.0,
              "joins": 1.0,
              "group_by": 1.0,
              "order_by": 1.0,
              "having": 1.0,
              "limit": 1.0
            },
            "component_details": {
              "select": {
                "jaccard_similarity": 0.0,
                "gt_items": [
                  "latitude",
                  "longitude"
                ],
                "pred_items": [
                  "\"latitude\"",
                  "\"longitude\""
                ],
                "gt_normalized": [
                  "latitude",
                  "longitude"
                ],
                "pred_normalized": [
                  "\"latitude\"",
                  "\"longitude\""
                ],
                "exact_match": false
              },
              "from": {
                "gt_tables": [
                  "municipios"
                ],
                "pred_tables": [
                  "municipios"
                ],
                "intersection_count": 1,
                "union_count": 1,
                "jaccard_similarity": 1.0
              },
              "where": {
                "gt_conditions": [
                  "nome = 'Porto Alegre' "
                ],
                "pred_conditions": [
                  "\"nome\" = 'Porto Alegre' "
                ],
                "intersection_count": 0,
                "union_count": 2,
                "jaccard_similarity": 0.0
              },
              "joins": {
                "match": "both_empty"
              },
              "group_by": {
                "match": "both_empty"
              },
              "order_by": {
                "match": "both_empty"
              },
              "having": {
                "match": "both_empty"
              },
              "limit": {
                "match": "both_empty"
              }
            },
            "ground_truth_components": {
              "select": "latitude , longitude",
              "from": "municipios",
              "where": "nome = 'Porto Alegre' ;",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": ""
            },
            "predicted_components": {
              "select": "\"latitude\" , \"longitude\"",
              "from": "municipios",
              "where": "\"nome\" = 'Porto Alegre' ;",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": ""
            },
            "clause_weights": {
              "select": 0.25,
              "from": 0.2,
              "where": 0.2,
              "joins": 0.15,
              "group_by": 0.1,
              "order_by": 0.05,
              "having": 0.03,
              "limit": 0.02
            }
          }
        },
        "Execution Accuracy (EX)": {
          "score": 1.0,
          "is_correct": true,
          "error": null,
          "details": {
            "ground_truth_executed": true,
            "predicted_executed": true,
            "ground_truth_rows": 1,
            "predicted_rows": 1,
            "results_match": true,
            "comparison_details": {
              "gt_size": 1,
              "pred_size": 1,
              "normalized_match": true
            }
          }
        }
      }
    },
    {
      "question_id": "GT033",
      "difficulty": "easy",
      "question": "Quantos municípios estão no estado do RS?",
      "ground_truth_sql": "SELECT COUNT(*) AS municipios_rs FROM municipios WHERE estado = 'RS';",
      "predicted_sql": "SELECT COUNT(*) FROM municipios WHERE \"estado\" = 'RS';",
      "agent_success": true,
      "agent_execution_time": 9.538923740386963,
      "metrics": {
        "Exact Match (EM)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "ground_truth_original": "SELECT COUNT(*) AS municipios_rs FROM municipios WHERE estado = 'RS';",
            "predicted_original": "SELECT COUNT(*) FROM municipios WHERE \"estado\" = 'RS';",
            "ground_truth_normalized": "SELECT COUNT(*) AS municipios_rs FROM municipios WHERE estado = 'RS'",
            "predicted_normalized": "SELECT COUNT(*) FROM municipios WHERE \"estado\" = 'RS'",
            "match": false,
            "length_difference": -15,
            "first_difference_position": 16,
            "first_difference_context": {
              "ground_truth": " COUNT(*) AS municip",
              "predicted": " COUNT(*) FROM munic"
            },
            "word_count_difference": -2,
            "differing_words": [
              {
                "position": 2,
                "ground_truth": "AS",
                "predicted": "FROM"
              },
              {
                "position": 3,
                "ground_truth": "municipios_rs",
                "predicted": "municipios"
              },
              {
                "position": 4,
                "ground_truth": "FROM",
                "predicted": "WHERE"
              },
              {
                "position": 5,
                "ground_truth": "municipios",
                "predicted": "\"estado\""
              },
              {
                "position": 6,
                "ground_truth": "WHERE",
                "predicted": "="
              }
            ],
            "common_errors": [
              "Quote mismatch (identifier quoting)"
            ]
          }
        },
        "Component Matching (CM)": {
          "score": 0.725,
          "is_correct": false,
          "error": null,
          "details": {
            "overall_score": 0.725,
            "component_scores": {
              "select": 0.7,
              "from": 1.0,
              "where": 0.0,
              "joins": 1.0,
              "group_by": 1.0,
              "order_by": 1.0,
              "having": 1.0,
              "limit": 1.0
            },
            "component_details": {
              "select": {
                "jaccard_similarity": 0.7,
                "gt_items": [
                  "COUNT ( * ) AS <alias>"
                ],
                "pred_items": [
                  "COUNT ( * )"
                ],
                "gt_normalized": [
                  "COUNT ( * ) AS <alias>"
                ],
                "pred_normalized": [
                  "COUNT ( * )"
                ],
                "exact_match": false
              },
              "from": {
                "gt_tables": [
                  "municipios"
                ],
                "pred_tables": [
                  "municipios"
                ],
                "intersection_count": 1,
                "union_count": 1,
                "jaccard_similarity": 1.0
              },
              "where": {
                "gt_conditions": [
                  "estado = 'RS' "
                ],
                "pred_conditions": [
                  "\"estado\" = 'RS' "
                ],
                "intersection_count": 0,
                "union_count": 2,
                "jaccard_similarity": 0.0
              },
              "joins": {
                "match": "both_empty"
              },
              "group_by": {
                "match": "both_empty"
              },
              "order_by": {
                "match": "both_empty"
              },
              "having": {
                "match": "both_empty"
              },
              "limit": {
                "match": "both_empty"
              }
            },
            "ground_truth_components": {
              "select": "COUNT ( * ) municipios_rs",
              "from": "municipios",
              "where": "estado = 'RS' ;",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": ""
            },
            "predicted_components": {
              "select": "COUNT ( * )",
              "from": "municipios",
              "where": "\"estado\" = 'RS' ;",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": ""
            },
            "clause_weights": {
              "select": 0.25,
              "from": 0.2,
              "where": 0.2,
              "joins": 0.15,
              "group_by": 0.1,
              "order_by": 0.05,
              "having": 0.03,
              "limit": 0.02
            }
          }
        },
        "Execution Accuracy (EX)": {
          "score": 1.0,
          "is_correct": true,
          "error": null,
          "details": {
            "ground_truth_executed": true,
            "predicted_executed": true,
            "ground_truth_rows": 1,
            "predicted_rows": 1,
            "results_match": true,
            "comparison_details": {
              "gt_size": 1,
              "pred_size": 1,
              "normalized_match": true
            }
          }
        }
      }
    },
    {
      "question_id": "GT034",
      "difficulty": "easy",
      "question": "Qual a idade média dos pacientes internados?",
      "ground_truth_sql": "SELECT AVG(\"IDADE\") AS idade_media FROM internacoes WHERE \"IDADE\" IS NOT NULL;",
      "predicted_sql": "SELECT AVG(i.\"IDADE\") AS idade_media FROM internacoes i;",
      "agent_success": true,
      "agent_execution_time": 8.82056736946106,
      "metrics": {
        "Exact Match (EM)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "ground_truth_original": "SELECT AVG(\"IDADE\") AS idade_media FROM internacoes WHERE \"IDADE\" IS NOT NULL;",
            "predicted_original": "SELECT AVG(i.\"IDADE\") AS idade_media FROM internacoes i;",
            "ground_truth_normalized": "SELECT AVG(\"IDADE\") AS idade_media FROM internacoes WHERE \"IDADE\" IS NOT NULL",
            "predicted_normalized": "SELECT AVG(i.\"IDADE\") AS idade_media FROM internacoes i",
            "match": false,
            "length_difference": -22,
            "first_difference_position": 11,
            "first_difference_context": {
              "ground_truth": "ELECT AVG(\"IDADE\") A",
              "predicted": "ELECT AVG(i.\"IDADE\")"
            },
            "word_count_difference": -4,
            "differing_words": [
              {
                "position": 1,
                "ground_truth": "AVG(\"IDADE\")",
                "predicted": "AVG(i.\"IDADE\")"
              },
              {
                "position": 6,
                "ground_truth": "WHERE",
                "predicted": "i"
              },
              {
                "position": 7,
                "ground_truth": "\"IDADE\"",
                "predicted": "<EXTRA>"
              },
              {
                "position": 8,
                "ground_truth": "IS",
                "predicted": "<EXTRA>"
              },
              {
                "position": 9,
                "ground_truth": "NOT",
                "predicted": "<EXTRA>"
              }
            ],
            "common_errors": [
              "Missing WHERE clause",
              "Quote mismatch (identifier quoting)"
            ]
          }
        },
        "Component Matching (CM)": {
          "score": 0.35,
          "is_correct": false,
          "error": null,
          "details": {
            "overall_score": 0.35,
            "component_scores": {
              "select": 0.0,
              "from": 0.0,
              "where": 0.0,
              "joins": 1.0,
              "group_by": 1.0,
              "order_by": 1.0,
              "having": 1.0,
              "limit": 1.0
            },
            "component_details": {
              "select": {
                "jaccard_similarity": 0.0,
                "gt_items": [
                  "AVG ( \"IDADE\" ) AS <alias>"
                ],
                "pred_items": [
                  "AVG ( i . \"IDADE\" ) AS <alias>"
                ],
                "gt_normalized": [
                  "AVG ( \"IDADE\" ) AS <alias>"
                ],
                "pred_normalized": [
                  "AVG ( i . \"IDADE\" ) AS <alias>"
                ],
                "exact_match": false
              },
              "from": {
                "gt_tables": [
                  "internacoes"
                ],
                "pred_tables": [
                  "internacoes i ;"
                ],
                "intersection_count": 0,
                "union_count": 2,
                "jaccard_similarity": 0.0
              },
              "where": {
                "match": "one_empty"
              },
              "joins": {
                "match": "both_empty"
              },
              "group_by": {
                "match": "both_empty"
              },
              "order_by": {
                "match": "both_empty"
              },
              "having": {
                "match": "both_empty"
              },
              "limit": {
                "match": "both_empty"
              }
            },
            "ground_truth_components": {
              "select": "AVG ( \"IDADE\" ) idade_media",
              "from": "internacoes",
              "where": "\"IDADE\" ;",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": ""
            },
            "predicted_components": {
              "select": "AVG ( i . \"IDADE\" ) idade_media",
              "from": "internacoes i ;",
              "where": "",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": ""
            },
            "clause_weights": {
              "select": 0.25,
              "from": 0.2,
              "where": 0.2,
              "joins": 0.15,
              "group_by": 0.1,
              "order_by": 0.05,
              "having": 0.03,
              "limit": 0.02
            }
          }
        },
        "Execution Accuracy (EX)": {
          "score": 1.0,
          "is_correct": true,
          "error": null,
          "details": {
            "ground_truth_executed": true,
            "predicted_executed": true,
            "ground_truth_rows": 1,
            "predicted_rows": 1,
            "results_match": true,
            "comparison_details": {
              "gt_size": 1,
              "pred_size": 1,
              "normalized_match": true
            }
          }
        }
      }
    },
    {
      "question_id": "GT035",
      "difficulty": "easy",
      "question": "Quantas internações duraram mais de 30 dias?",
      "ground_truth_sql": " SELECT COUNT(*) FROM internacoes i WHERE i.\"QT_DIARIAS\" > 30;",
      "predicted_sql": "SELECT COUNT(*) FROM internacoes i WHERE \"QT_DIARIAS\" > 30;",
      "agent_success": true,
      "agent_execution_time": 9.082849979400635,
      "metrics": {
        "Exact Match (EM)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "ground_truth_original": " SELECT COUNT(*) FROM internacoes i WHERE i.\"QT_DIARIAS\" > 30;",
            "predicted_original": "SELECT COUNT(*) FROM internacoes i WHERE \"QT_DIARIAS\" > 30;",
            "ground_truth_normalized": "SELECT COUNT(*) FROM internacoes i WHERE i.\"QT_DIARIAS\" > 30",
            "predicted_normalized": "SELECT COUNT(*) FROM internacoes i WHERE \"QT_DIARIAS\" > 30",
            "match": false,
            "length_difference": -2,
            "first_difference_position": 41,
            "first_difference_context": {
              "ground_truth": "s i WHERE i.\"QT_DIAR",
              "predicted": "s i WHERE \"QT_DIARIA"
            },
            "word_count_difference": 0,
            "differing_words": [
              {
                "position": 6,
                "ground_truth": "i.\"QT_DIARIAS\"",
                "predicted": "\"QT_DIARIAS\""
              }
            ],
            "common_errors": []
          }
        },
        "Component Matching (CM)": {
          "score": 0.8,
          "is_correct": true,
          "error": null,
          "details": {
            "overall_score": 0.8,
            "component_scores": {
              "select": 1.0,
              "from": 1.0,
              "where": 0.0,
              "joins": 1.0,
              "group_by": 1.0,
              "order_by": 1.0,
              "having": 1.0,
              "limit": 1.0
            },
            "component_details": {
              "select": {
                "jaccard_similarity": 1.0,
                "gt_items": [
                  "COUNT ( * )"
                ],
                "pred_items": [
                  "COUNT ( * )"
                ],
                "gt_normalized": [
                  "COUNT ( * )"
                ],
                "pred_normalized": [
                  "COUNT ( * )"
                ],
                "exact_match": true
              },
              "from": {
                "gt_tables": [
                  "internacoes"
                ],
                "pred_tables": [
                  "internacoes"
                ],
                "intersection_count": 1,
                "union_count": 1,
                "jaccard_similarity": 1.0
              },
              "where": {
                "gt_conditions": [
                  "i . \"QT_DIARIAS\" > 30 "
                ],
                "pred_conditions": [
                  "\"QT_DIARIAS\" > 30 "
                ],
                "intersection_count": 0,
                "union_count": 2,
                "jaccard_similarity": 0.0
              },
              "joins": {
                "match": "both_empty"
              },
              "group_by": {
                "match": "both_empty"
              },
              "order_by": {
                "match": "both_empty"
              },
              "having": {
                "match": "both_empty"
              },
              "limit": {
                "match": "both_empty"
              }
            },
            "ground_truth_components": {
              "select": "COUNT ( * )",
              "from": "internacoes i",
              "where": "i . \"QT_DIARIAS\" > 30 ;",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": ""
            },
            "predicted_components": {
              "select": "COUNT ( * )",
              "from": "internacoes i",
              "where": "\"QT_DIARIAS\" > 30 ;",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": ""
            },
            "clause_weights": {
              "select": 0.25,
              "from": 0.2,
              "where": 0.2,
              "joins": 0.15,
              "group_by": 0.1,
              "order_by": 0.05,
              "having": 0.03,
              "limit": 0.02
            }
          }
        },
        "Execution Accuracy (EX)": {
          "score": 1.0,
          "is_correct": true,
          "error": null,
          "details": {
            "ground_truth_executed": true,
            "predicted_executed": true,
            "ground_truth_rows": 1,
            "predicted_rows": 1,
            "results_match": true,
            "comparison_details": {
              "gt_size": 1,
              "pred_size": 1,
              "normalized_match": true
            }
          }
        }
      }
    },
    {
      "question_id": "GT037",
      "difficulty": "medium",
      "question": "Qual o diagnóstico mais comum nas internações?",
      "ground_truth_sql": "SELECT c.\"CD_DESCRICAO\" AS diagnostico, COUNT(*) AS total FROM internacoes i JOIN cid10 c ON i.\"DIAG_PRINC\" = c.\"CID\" WHERE i.\"DIAG_PRINC\" IS NOT NULL GROUP BY c.\"CD_DESCRICAO\" ORDER BY total DESC LIMIT 1;",
      "predicted_sql": "SELECT c.\"CD_DESCRICAO\", COUNT(i.\"DIAG_PRINC\") AS total_diagnosticos FROM cid10 c JOIN internacoes i ON c.\"CID\" = i.\"DIAG_PRINC\" GROUP BY c.\"CD_DESCRICAO\" ORDER BY total_diagnosticos DESC LIMIT 1;",
      "agent_success": true,
      "agent_execution_time": 12.352306842803955,
      "metrics": {
        "Exact Match (EM)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "ground_truth_original": "SELECT c.\"CD_DESCRICAO\" AS diagnostico, COUNT(*) AS total FROM internacoes i JOIN cid10 c ON i.\"DIAG_PRINC\" = c.\"CID\" WHERE i.\"DIAG_PRINC\" IS NOT NULL GROUP BY c.\"CD_DESCRICAO\" ORDER BY total DESC LIMIT 1;",
            "predicted_original": "SELECT c.\"CD_DESCRICAO\", COUNT(i.\"DIAG_PRINC\") AS total_diagnosticos FROM cid10 c JOIN internacoes i ON c.\"CID\" = i.\"DIAG_PRINC\" GROUP BY c.\"CD_DESCRICAO\" ORDER BY total_diagnosticos DESC LIMIT 1;",
            "ground_truth_normalized": "SELECT c.\"CD_DESCRICAO\" AS diagnostico, COUNT(*) AS total FROM internacoes i JOIN cid10 c ON i.\"DIAG_PRINC\" = c.\"CID\" WHERE i.\"DIAG_PRINC\" IS NOT NULL GROUP BY c.\"CD_DESCRICAO\" ORDER BY total DESC LIMIT 1",
            "predicted_normalized": "SELECT c.\"CD_DESCRICAO\", COUNT(i.\"DIAG_PRINC\") AS total_diagnosticos FROM cid10 c JOIN internacoes i ON c.\"CID\" = i.\"DIAG_PRINC\" GROUP BY c.\"CD_DESCRICAO\" ORDER BY total_diagnosticos DESC LIMIT 1",
            "match": false,
            "length_difference": -9,
            "first_difference_position": 23,
            "first_difference_context": {
              "ground_truth": "DESCRICAO\" AS diagno",
              "predicted": "DESCRICAO\", COUNT(i."
            },
            "word_count_difference": -7,
            "differing_words": [
              {
                "position": 1,
                "ground_truth": "c.\"CD_DESCRICAO\"",
                "predicted": "c.\"CD_DESCRICAO\","
              },
              {
                "position": 2,
                "ground_truth": "AS",
                "predicted": "COUNT(i.\"DIAG_PRINC\")"
              },
              {
                "position": 3,
                "ground_truth": "diagnostico,",
                "predicted": "AS"
              },
              {
                "position": 4,
                "ground_truth": "COUNT(*)",
                "predicted": "total_diagnosticos"
              },
              {
                "position": 5,
                "ground_truth": "AS",
                "predicted": "FROM"
              }
            ],
            "common_errors": [
              "Missing WHERE clause"
            ]
          }
        },
        "Component Matching (CM)": {
          "score": 0.2375,
          "is_correct": false,
          "error": null,
          "details": {
            "overall_score": 0.2375,
            "component_scores": {
              "select": 0.35,
              "from": 0.0,
              "where": 0.0,
              "joins": 0.0,
              "group_by": 1.0,
              "order_by": 0.0,
              "having": 1.0,
              "limit": 1.0
            },
            "component_details": {
              "select": {
                "jaccard_similarity": 0.35,
                "gt_items": [
                  "c . \"CD_DESCRICAO\" AS <alias>",
                  "COUNT ( * ) AS <alias>"
                ],
                "pred_items": [
                  "c . \"CD_DESCRICAO\"",
                  "COUNT ( i . \"DIAG_PRINC\" ) AS <alias>"
                ],
                "gt_normalized": [
                  "c . \"CD_DESCRICAO\" AS <alias>",
                  "COUNT ( * ) AS <alias>"
                ],
                "pred_normalized": [
                  "c . \"CD_DESCRICAO\"",
                  "COUNT ( i . \"DIAG_PRINC\" ) AS <alias>"
                ],
                "exact_match": false
              },
              "from": {
                "gt_tables": [
                  "internacoes"
                ],
                "pred_tables": [
                  "cid10"
                ],
                "intersection_count": 0,
                "union_count": 2,
                "jaccard_similarity": 0.0
              },
              "where": {
                "match": "one_empty"
              },
              "joins": {
                "gt_normalized": "cid10 c i . \"DIAG_PRINC\" = c . \"CID\"",
                "pred_normalized": "internacoes i c . \"CID\" = i . \"DIAG_PRINC\"",
                "exact_match": false
              },
              "group_by": {
                "gt_normalized": "c . \"CD_DESCRICAO\"",
                "pred_normalized": "c . \"CD_DESCRICAO\"",
                "exact_match": true
              },
              "order_by": {
                "gt_normalized": "total",
                "pred_normalized": "total_diagnosticos",
                "exact_match": false
              },
              "having": {
                "match": "both_empty"
              },
              "limit": {
                "gt_numbers": [
                  "1"
                ],
                "pred_numbers": [
                  "1"
                ],
                "match": true
              }
            },
            "ground_truth_components": {
              "select": "c . \"CD_DESCRICAO\" diagnostico , COUNT ( * ) total",
              "from": "internacoes i",
              "where": "i . \"DIAG_PRINC\"",
              "group_by": "c . \"CD_DESCRICAO\"",
              "having": "",
              "order_by": "total",
              "limit": "1 ;",
              "joins": "cid10 c i . \"DIAG_PRINC\" = c . \"CID\""
            },
            "predicted_components": {
              "select": "c . \"CD_DESCRICAO\" , COUNT ( i . \"DIAG_PRINC\" ) total_diagnosticos",
              "from": "cid10 c",
              "where": "",
              "group_by": "c . \"CD_DESCRICAO\"",
              "having": "",
              "order_by": "total_diagnosticos",
              "limit": "1 ;",
              "joins": "internacoes i c . \"CID\" = i . \"DIAG_PRINC\""
            },
            "clause_weights": {
              "select": 0.25,
              "from": 0.2,
              "where": 0.2,
              "joins": 0.15,
              "group_by": 0.1,
              "order_by": 0.05,
              "having": 0.03,
              "limit": 0.02
            }
          }
        },
        "Execution Accuracy (EX)": {
          "score": 1.0,
          "is_correct": true,
          "error": null,
          "details": {
            "ground_truth_executed": true,
            "predicted_executed": true,
            "ground_truth_rows": 1,
            "predicted_rows": 1,
            "results_match": true,
            "comparison_details": {
              "gt_size": 1,
              "pred_size": 1,
              "normalized_match": true
            }
          }
        }
      }
    },
    {
      "question_id": "GT038",
      "difficulty": "medium",
      "question": "Quantas internações ocorreram em 2015?",
      "ground_truth_sql": "SELECT COUNT(*) AS internacoes_2015 FROM internacoes WHERE EXTRACT(YEAR FROM \"DT_INTER\") = 2015;",
      "predicted_sql": "SELECT COUNT(*) FROM internacoes WHERE EXTRACT(YEAR FROM \"DT_INTER\") = 2015;",
      "agent_success": true,
      "agent_execution_time": 9.737032890319824,
      "metrics": {
        "Exact Match (EM)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "ground_truth_original": "SELECT COUNT(*) AS internacoes_2015 FROM internacoes WHERE EXTRACT(YEAR FROM \"DT_INTER\") = 2015;",
            "predicted_original": "SELECT COUNT(*) FROM internacoes WHERE EXTRACT(YEAR FROM \"DT_INTER\") = 2015;",
            "ground_truth_normalized": "SELECT COUNT(*) AS internacoes_2015 FROM internacoes WHERE EXTRACT(YEAR FROM \"DT_INTER\") = 2015",
            "predicted_normalized": "SELECT COUNT(*) FROM internacoes WHERE EXTRACT(YEAR FROM \"DT_INTER\") = 2015",
            "match": false,
            "length_difference": -20,
            "first_difference_position": 16,
            "first_difference_context": {
              "ground_truth": " COUNT(*) AS interna",
              "predicted": " COUNT(*) FROM inter"
            },
            "word_count_difference": -2,
            "differing_words": [
              {
                "position": 2,
                "ground_truth": "AS",
                "predicted": "FROM"
              },
              {
                "position": 3,
                "ground_truth": "internacoes_2015",
                "predicted": "internacoes"
              },
              {
                "position": 4,
                "ground_truth": "FROM",
                "predicted": "WHERE"
              },
              {
                "position": 5,
                "ground_truth": "internacoes",
                "predicted": "EXTRACT(YEAR"
              },
              {
                "position": 6,
                "ground_truth": "WHERE",
                "predicted": "FROM"
              }
            ],
            "common_errors": []
          }
        },
        "Component Matching (CM)": {
          "score": 0.925,
          "is_correct": true,
          "error": null,
          "details": {
            "overall_score": 0.925,
            "component_scores": {
              "select": 0.7,
              "from": 1.0,
              "where": 1.0,
              "joins": 1.0,
              "group_by": 1.0,
              "order_by": 1.0,
              "having": 1.0,
              "limit": 1.0
            },
            "component_details": {
              "select": {
                "jaccard_similarity": 0.7,
                "gt_items": [
                  "COUNT ( * ) AS <alias>"
                ],
                "pred_items": [
                  "COUNT ( * )"
                ],
                "gt_normalized": [
                  "COUNT ( * ) AS <alias>"
                ],
                "pred_normalized": [
                  "COUNT ( * )"
                ],
                "exact_match": false
              },
              "from": {
                "gt_tables": [
                  "internacoes"
                ],
                "pred_tables": [
                  "internacoes"
                ],
                "intersection_count": 1,
                "union_count": 1,
                "jaccard_similarity": 1.0
              },
              "where": {
                "gt_conditions": [
                  "EXTRACT ( YEAR FROM \"DT_INTER\" ) = 2015 "
                ],
                "pred_conditions": [
                  "EXTRACT ( YEAR FROM \"DT_INTER\" ) = 2015 "
                ],
                "intersection_count": 1,
                "union_count": 1,
                "jaccard_similarity": 1.0
              },
              "joins": {
                "match": "both_empty"
              },
              "group_by": {
                "match": "both_empty"
              },
              "order_by": {
                "match": "both_empty"
              },
              "having": {
                "match": "both_empty"
              },
              "limit": {
                "match": "both_empty"
              }
            },
            "ground_truth_components": {
              "select": "COUNT ( * ) internacoes_2015",
              "from": "internacoes",
              "where": "EXTRACT ( YEAR FROM \"DT_INTER\" ) = 2015 ;",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": ""
            },
            "predicted_components": {
              "select": "COUNT ( * )",
              "from": "internacoes",
              "where": "EXTRACT ( YEAR FROM \"DT_INTER\" ) = 2015 ;",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": ""
            },
            "clause_weights": {
              "select": 0.25,
              "from": 0.2,
              "where": 0.2,
              "joins": 0.15,
              "group_by": 0.1,
              "order_by": 0.05,
              "having": 0.03,
              "limit": 0.02
            }
          }
        },
        "Execution Accuracy (EX)": {
          "score": 1.0,
          "is_correct": true,
          "error": null,
          "details": {
            "ground_truth_executed": true,
            "predicted_executed": true,
            "ground_truth_rows": 1,
            "predicted_rows": 1,
            "results_match": true,
            "comparison_details": {
              "gt_size": 1,
              "pred_size": 1,
              "normalized_match": true
            }
          }
        }
      }
    },
    {
      "question_id": "GT040",
      "difficulty": "medium",
      "question": "Quantos pacientes nasceram antes de 1950?",
      "ground_truth_sql": "SELECT COUNT(*) AS nascidos_antes_1950 FROM internacoes WHERE EXTRACT(YEAR FROM \"NASC\") < 1950;",
      "predicted_sql": "SELECT COUNT(*) FROM internacoes i WHERE i.\"NASC\" < '1950-01-01' LIMIT 100;",
      "agent_success": true,
      "agent_execution_time": 9.375836849212646,
      "metrics": {
        "Exact Match (EM)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "ground_truth_original": "SELECT COUNT(*) AS nascidos_antes_1950 FROM internacoes WHERE EXTRACT(YEAR FROM \"NASC\") < 1950;",
            "predicted_original": "SELECT COUNT(*) FROM internacoes i WHERE i.\"NASC\" < '1950-01-01' LIMIT 100;",
            "ground_truth_normalized": "SELECT COUNT(*) AS nascidos_antes_1950 FROM internacoes WHERE EXTRACT(YEAR FROM \"NASC\") < 1950",
            "predicted_normalized": "SELECT COUNT(*) FROM internacoes i WHERE i.\"NASC\" < '1950-01-01' LIMIT 100",
            "match": false,
            "length_difference": -20,
            "first_difference_position": 16,
            "first_difference_context": {
              "ground_truth": " COUNT(*) AS nascido",
              "predicted": " COUNT(*) FROM inter"
            },
            "word_count_difference": -1,
            "differing_words": [
              {
                "position": 2,
                "ground_truth": "AS",
                "predicted": "FROM"
              },
              {
                "position": 3,
                "ground_truth": "nascidos_antes_1950",
                "predicted": "internacoes"
              },
              {
                "position": 4,
                "ground_truth": "FROM",
                "predicted": "i"
              },
              {
                "position": 5,
                "ground_truth": "internacoes",
                "predicted": "WHERE"
              },
              {
                "position": 6,
                "ground_truth": "WHERE",
                "predicted": "i.\"NASC\""
              }
            ],
            "common_errors": [
              "Extra LIMIT clause"
            ]
          }
        },
        "Component Matching (CM)": {
          "score": 0.705,
          "is_correct": false,
          "error": null,
          "details": {
            "overall_score": 0.705,
            "component_scores": {
              "select": 0.7,
              "from": 1.0,
              "where": 0.0,
              "joins": 1.0,
              "group_by": 1.0,
              "order_by": 1.0,
              "having": 1.0,
              "limit": 0.0
            },
            "component_details": {
              "select": {
                "jaccard_similarity": 0.7,
                "gt_items": [
                  "COUNT ( * ) AS <alias>"
                ],
                "pred_items": [
                  "COUNT ( * )"
                ],
                "gt_normalized": [
                  "COUNT ( * ) AS <alias>"
                ],
                "pred_normalized": [
                  "COUNT ( * )"
                ],
                "exact_match": false
              },
              "from": {
                "gt_tables": [
                  "internacoes"
                ],
                "pred_tables": [
                  "internacoes"
                ],
                "intersection_count": 1,
                "union_count": 1,
                "jaccard_similarity": 1.0
              },
              "where": {
                "gt_conditions": [
                  "EXTRACT ( YEAR FROM \"NASC\" ) < 1950 "
                ],
                "pred_conditions": [
                  "i . \"NASC\" < '1950-01-01'"
                ],
                "intersection_count": 0,
                "union_count": 2,
                "jaccard_similarity": 0.0
              },
              "joins": {
                "match": "both_empty"
              },
              "group_by": {
                "match": "both_empty"
              },
              "order_by": {
                "match": "both_empty"
              },
              "having": {
                "match": "both_empty"
              },
              "limit": {
                "match": "one_empty"
              }
            },
            "ground_truth_components": {
              "select": "COUNT ( * ) nascidos_antes_1950",
              "from": "internacoes",
              "where": "EXTRACT ( YEAR FROM \"NASC\" ) < 1950 ;",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": ""
            },
            "predicted_components": {
              "select": "COUNT ( * )",
              "from": "internacoes i",
              "where": "i . \"NASC\" < '1950-01-01'",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "100 ;",
              "joins": ""
            },
            "clause_weights": {
              "select": 0.25,
              "from": 0.2,
              "where": 0.2,
              "joins": 0.15,
              "group_by": 0.1,
              "order_by": 0.05,
              "having": 0.03,
              "limit": 0.02
            }
          }
        },
        "Execution Accuracy (EX)": {
          "score": 1.0,
          "is_correct": true,
          "error": null,
          "details": {
            "ground_truth_executed": true,
            "predicted_executed": true,
            "ground_truth_rows": 1,
            "predicted_rows": 1,
            "results_match": true,
            "comparison_details": {
              "gt_size": 1,
              "pred_size": 1,
              "normalized_match": true
            }
          }
        }
      }
    },
    {
      "question_id": "GT041",
      "difficulty": "medium",
      "question": "Qual município teve o maior número de internações masculinas em 2020?",
      "ground_truth_sql": "SELECT mu.nome, COUNT(i.\"N_AIH\") AS total_internacoes FROM internacoes i JOIN municipios mu ON i.\"MUNIC_RES\" = mu.codigo_6d WHERE EXTRACT(YEAR FROM i.\"DT_INTER\") = 2020 AND i.\"SEXO\" = 1 GROUP BY mu.nome ORDER BY total_internacoes DESC LIMIT 1;",
      "predicted_sql": "SELECT mu.nome, COUNT(i.\"N_AIH\") AS total_internacoes FROM internacoes i JOIN municipios mu ON i.\"MUNIC_RES\" = mu.codigo_6d WHERE EXTRACT(YEAR FROM i.\"DT_INTER\") = 2020 AND i.\"SEXO\" = 1 GROUP BY mu.nome ORDER BY total_internacoes DESC LIMIT 1;",
      "agent_success": true,
      "agent_execution_time": 13.894505739212036,
      "metrics": {
        "Exact Match (EM)": {
          "score": 1.0,
          "is_correct": true,
          "error": null,
          "details": {
            "ground_truth_original": "SELECT mu.nome, COUNT(i.\"N_AIH\") AS total_internacoes FROM internacoes i JOIN municipios mu ON i.\"MUNIC_RES\" = mu.codigo_6d WHERE EXTRACT(YEAR FROM i.\"DT_INTER\") = 2020 AND i.\"SEXO\" = 1 GROUP BY mu.nome ORDER BY total_internacoes DESC LIMIT 1;",
            "predicted_original": "SELECT mu.nome, COUNT(i.\"N_AIH\") AS total_internacoes FROM internacoes i JOIN municipios mu ON i.\"MUNIC_RES\" = mu.codigo_6d WHERE EXTRACT(YEAR FROM i.\"DT_INTER\") = 2020 AND i.\"SEXO\" = 1 GROUP BY mu.nome ORDER BY total_internacoes DESC LIMIT 1;",
            "ground_truth_normalized": "SELECT mu.nome, COUNT(i.\"N_AIH\") AS total_internacoes FROM internacoes i JOIN municipios mu ON i.\"MUNIC_RES\" = mu.codigo_6d WHERE EXTRACT(YEAR FROM i.\"DT_INTER\") = 2020 AND i.\"SEXO\" = 1 GROUP BY mu.nome ORDER BY total_internacoes DESC LIMIT 1",
            "predicted_normalized": "SELECT mu.nome, COUNT(i.\"N_AIH\") AS total_internacoes FROM internacoes i JOIN municipios mu ON i.\"MUNIC_RES\" = mu.codigo_6d WHERE EXTRACT(YEAR FROM i.\"DT_INTER\") = 2020 AND i.\"SEXO\" = 1 GROUP BY mu.nome ORDER BY total_internacoes DESC LIMIT 1",
            "match": true
          }
        },
        "Component Matching (CM)": {
          "score": 1.0,
          "is_correct": true,
          "error": null,
          "details": {
            "overall_score": 1.0,
            "component_scores": {
              "select": 1.0,
              "from": 1.0,
              "where": 1.0,
              "joins": 1.0,
              "group_by": 1.0,
              "order_by": 1.0,
              "having": 1.0,
              "limit": 1.0
            },
            "component_details": {
              "select": {
                "jaccard_similarity": 1.0,
                "gt_items": [
                  "mu . AS <alias>",
                  "COUNT ( i . \"N_AIH\" ) AS <alias>"
                ],
                "pred_items": [
                  "mu . AS <alias>",
                  "COUNT ( i . \"N_AIH\" ) AS <alias>"
                ],
                "gt_normalized": [
                  "mu . AS <alias>",
                  "COUNT ( i . \"N_AIH\" ) AS <alias>"
                ],
                "pred_normalized": [
                  "mu . AS <alias>",
                  "COUNT ( i . \"N_AIH\" ) AS <alias>"
                ],
                "exact_match": true
              },
              "from": {
                "gt_tables": [
                  "internacoes"
                ],
                "pred_tables": [
                  "internacoes"
                ],
                "intersection_count": 1,
                "union_count": 1,
                "jaccard_similarity": 1.0
              },
              "where": {
                "gt_conditions": [
                  "EXTRACT ( YEAR FROM i . \"DT_INTER\" ) = 2020 i . \"SEXO\" = 1"
                ],
                "pred_conditions": [
                  "EXTRACT ( YEAR FROM i . \"DT_INTER\" ) = 2020 i . \"SEXO\" = 1"
                ],
                "intersection_count": 1,
                "union_count": 1,
                "jaccard_similarity": 1.0
              },
              "joins": {
                "gt_normalized": "municipios mu i . \"MUNIC_RES\" = mu . codigo_6d",
                "pred_normalized": "municipios mu i . \"MUNIC_RES\" = mu . codigo_6d",
                "exact_match": true
              },
              "group_by": {
                "gt_normalized": "mu . nome",
                "pred_normalized": "mu . nome",
                "exact_match": true
              },
              "order_by": {
                "gt_normalized": "total_internacoes",
                "pred_normalized": "total_internacoes",
                "exact_match": true
              },
              "having": {
                "match": "both_empty"
              },
              "limit": {
                "gt_numbers": [
                  "1"
                ],
                "pred_numbers": [
                  "1"
                ],
                "match": true
              }
            },
            "ground_truth_components": {
              "select": "mu . nome , COUNT ( i . \"N_AIH\" ) total_internacoes",
              "from": "internacoes i",
              "where": "EXTRACT ( YEAR FROM i . \"DT_INTER\" ) = 2020 i . \"SEXO\" = 1",
              "group_by": "mu . nome",
              "having": "",
              "order_by": "total_internacoes",
              "limit": "1 ;",
              "joins": "municipios mu i . \"MUNIC_RES\" = mu . codigo_6d"
            },
            "predicted_components": {
              "select": "mu . nome , COUNT ( i . \"N_AIH\" ) total_internacoes",
              "from": "internacoes i",
              "where": "EXTRACT ( YEAR FROM i . \"DT_INTER\" ) = 2020 i . \"SEXO\" = 1",
              "group_by": "mu . nome",
              "having": "",
              "order_by": "total_internacoes",
              "limit": "1 ;",
              "joins": "municipios mu i . \"MUNIC_RES\" = mu . codigo_6d"
            },
            "clause_weights": {
              "select": 0.25,
              "from": 0.2,
              "where": 0.2,
              "joins": 0.15,
              "group_by": 0.1,
              "order_by": 0.05,
              "having": 0.03,
              "limit": 0.02
            }
          }
        },
        "Execution Accuracy (EX)": {
          "score": 1.0,
          "is_correct": true,
          "error": null,
          "details": {
            "ground_truth_executed": true,
            "predicted_executed": true,
            "ground_truth_rows": 1,
            "predicted_rows": 1,
            "results_match": true,
            "comparison_details": {
              "gt_size": 1,
              "pred_size": 1,
              "normalized_match": true
            }
          }
        }
      }
    },
    {
      "question_id": "GT042",
      "difficulty": "medium",
      "question": "Quais são as três causas de morte mais frequentes entre mulheres?",
      "ground_truth_sql": "SELECT c.\"CD_DESCRICAO\", COUNT(mo.\"N_AIH\") AS total_mortes FROM cid10 c JOIN mortes mo ON c.\"CID\" = mo.\"CID_MORTE\" JOIN internacoes i ON mo.\"N_AIH\" = i.\"N_AIH\" WHERE i.\"SEXO\" = 3 AND mo.\"CID_MORTE\" IS NOT NULL GROUP BY c.\"CD_DESCRICAO\" ORDER BY total_mortes DESC LIMIT 3;",
      "predicted_sql": "SELECT c.\"CD_DESCRICAO\", COUNT(mo.\"N_AIH\") AS total_mortes FROM cid10 c JOIN mortes mo ON c.\"CID\" = mo.\"CID_MORTE\" JOIN internacoes i ON mo.\"N_AIH\" = i.\"N_AIH\" WHERE i.\"SEXO\" = 3 AND mo.\"CID_MORTE\" IS NOT NULL GROUP BY c.\"CD_DESCRICAO\" ORDER BY total_mortes DESC LIMIT 3;",
      "agent_success": true,
      "agent_execution_time": 16.23362112045288,
      "metrics": {
        "Exact Match (EM)": {
          "score": 1.0,
          "is_correct": true,
          "error": null,
          "details": {
            "ground_truth_original": "SELECT c.\"CD_DESCRICAO\", COUNT(mo.\"N_AIH\") AS total_mortes FROM cid10 c JOIN mortes mo ON c.\"CID\" = mo.\"CID_MORTE\" JOIN internacoes i ON mo.\"N_AIH\" = i.\"N_AIH\" WHERE i.\"SEXO\" = 3 AND mo.\"CID_MORTE\" IS NOT NULL GROUP BY c.\"CD_DESCRICAO\" ORDER BY total_mortes DESC LIMIT 3;",
            "predicted_original": "SELECT c.\"CD_DESCRICAO\", COUNT(mo.\"N_AIH\") AS total_mortes FROM cid10 c JOIN mortes mo ON c.\"CID\" = mo.\"CID_MORTE\" JOIN internacoes i ON mo.\"N_AIH\" = i.\"N_AIH\" WHERE i.\"SEXO\" = 3 AND mo.\"CID_MORTE\" IS NOT NULL GROUP BY c.\"CD_DESCRICAO\" ORDER BY total_mortes DESC LIMIT 3;",
            "ground_truth_normalized": "SELECT c.\"CD_DESCRICAO\", COUNT(mo.\"N_AIH\") AS total_mortes FROM cid10 c JOIN mortes mo ON c.\"CID\" = mo.\"CID_MORTE\" JOIN internacoes i ON mo.\"N_AIH\" = i.\"N_AIH\" WHERE i.\"SEXO\" = 3 AND mo.\"CID_MORTE\" IS NOT NULL GROUP BY c.\"CD_DESCRICAO\" ORDER BY total_mortes DESC LIMIT 3",
            "predicted_normalized": "SELECT c.\"CD_DESCRICAO\", COUNT(mo.\"N_AIH\") AS total_mortes FROM cid10 c JOIN mortes mo ON c.\"CID\" = mo.\"CID_MORTE\" JOIN internacoes i ON mo.\"N_AIH\" = i.\"N_AIH\" WHERE i.\"SEXO\" = 3 AND mo.\"CID_MORTE\" IS NOT NULL GROUP BY c.\"CD_DESCRICAO\" ORDER BY total_mortes DESC LIMIT 3",
            "match": true
          }
        },
        "Component Matching (CM)": {
          "score": 1.0,
          "is_correct": true,
          "error": null,
          "details": {
            "overall_score": 1.0,
            "component_scores": {
              "select": 1.0,
              "from": 1.0,
              "where": 1.0,
              "joins": 1.0,
              "group_by": 1.0,
              "order_by": 1.0,
              "having": 1.0,
              "limit": 1.0
            },
            "component_details": {
              "select": {
                "jaccard_similarity": 1.0,
                "gt_items": [
                  "c . \"CD_DESCRICAO\"",
                  "COUNT ( mo . \"N_AIH\" ) AS <alias>"
                ],
                "pred_items": [
                  "c . \"CD_DESCRICAO\"",
                  "COUNT ( mo . \"N_AIH\" ) AS <alias>"
                ],
                "gt_normalized": [
                  "c . \"CD_DESCRICAO\"",
                  "COUNT ( mo . \"N_AIH\" ) AS <alias>"
                ],
                "pred_normalized": [
                  "c . \"CD_DESCRICAO\"",
                  "COUNT ( mo . \"N_AIH\" ) AS <alias>"
                ],
                "exact_match": true
              },
              "from": {
                "gt_tables": [
                  "cid10"
                ],
                "pred_tables": [
                  "cid10"
                ],
                "intersection_count": 1,
                "union_count": 1,
                "jaccard_similarity": 1.0
              },
              "where": {
                "gt_conditions": [
                  "i . \"SEXO\" = 3 mo . \"CID_MORTE\""
                ],
                "pred_conditions": [
                  "i . \"SEXO\" = 3 mo . \"CID_MORTE\""
                ],
                "intersection_count": 1,
                "union_count": 1,
                "jaccard_similarity": 1.0
              },
              "joins": {
                "gt_normalized": "mortes mo c . \"CID\" = mo . \"CID_MORTE\" internacoes i mo . \"N_AIH\" = i . \"N_AIH\"",
                "pred_normalized": "mortes mo c . \"CID\" = mo . \"CID_MORTE\" internacoes i mo . \"N_AIH\" = i . \"N_AIH\"",
                "exact_match": true
              },
              "group_by": {
                "gt_normalized": "c . \"CD_DESCRICAO\"",
                "pred_normalized": "c . \"CD_DESCRICAO\"",
                "exact_match": true
              },
              "order_by": {
                "gt_normalized": "total_mortes",
                "pred_normalized": "total_mortes",
                "exact_match": true
              },
              "having": {
                "match": "both_empty"
              },
              "limit": {
                "gt_numbers": [
                  "3"
                ],
                "pred_numbers": [
                  "3"
                ],
                "match": true
              }
            },
            "ground_truth_components": {
              "select": "c . \"CD_DESCRICAO\" , COUNT ( mo . \"N_AIH\" ) total_mortes",
              "from": "cid10 c",
              "where": "i . \"SEXO\" = 3 mo . \"CID_MORTE\"",
              "group_by": "c . \"CD_DESCRICAO\"",
              "having": "",
              "order_by": "total_mortes",
              "limit": "3 ;",
              "joins": "mortes mo c . \"CID\" = mo . \"CID_MORTE\" internacoes i mo . \"N_AIH\" = i . \"N_AIH\""
            },
            "predicted_components": {
              "select": "c . \"CD_DESCRICAO\" , COUNT ( mo . \"N_AIH\" ) total_mortes",
              "from": "cid10 c",
              "where": "i . \"SEXO\" = 3 mo . \"CID_MORTE\"",
              "group_by": "c . \"CD_DESCRICAO\"",
              "having": "",
              "order_by": "total_mortes",
              "limit": "3 ;",
              "joins": "mortes mo c . \"CID\" = mo . \"CID_MORTE\" internacoes i mo . \"N_AIH\" = i . \"N_AIH\""
            },
            "clause_weights": {
              "select": 0.25,
              "from": 0.2,
              "where": 0.2,
              "joins": 0.15,
              "group_by": 0.1,
              "order_by": 0.05,
              "having": 0.03,
              "limit": 0.02
            }
          }
        },
        "Execution Accuracy (EX)": {
          "score": 1.0,
          "is_correct": true,
          "error": null,
          "details": {
            "ground_truth_executed": true,
            "predicted_executed": true,
            "ground_truth_rows": 3,
            "predicted_rows": 3,
            "results_match": true,
            "comparison_details": {
              "gt_size": 3,
              "pred_size": 3,
              "normalized_match": true
            }
          }
        }
      }
    },
    {
      "question_id": "GT043",
      "difficulty": "medium",
      "question": "Qual a taxa de mortalidade infantil média no Brasil?",
      "ground_truth_sql": "SELECT AVG(mortalidade_infantil) AS taxa_media_mortalidade_infantil FROM dado_ibge WHERE mortalidade_infantil IS NOT NULL;",
      "predicted_sql": "SELECT AVG(mortalidade_infantil) FROM dado_ibge;",
      "agent_success": true,
      "agent_execution_time": 9.704463481903076,
      "metrics": {
        "Exact Match (EM)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "ground_truth_original": "SELECT AVG(mortalidade_infantil) AS taxa_media_mortalidade_infantil FROM dado_ibge WHERE mortalidade_infantil IS NOT NULL;",
            "predicted_original": "SELECT AVG(mortalidade_infantil) FROM dado_ibge;",
            "ground_truth_normalized": "SELECT AVG(mortalidade_infantil) AS taxa_media_mortalidade_infantil FROM dado_ibge WHERE mortalidade_infantil IS NOT NULL",
            "predicted_normalized": "SELECT AVG(mortalidade_infantil) FROM dado_ibge",
            "match": false,
            "length_difference": -74,
            "first_difference_position": 33,
            "first_difference_context": {
              "ground_truth": "infantil) AS taxa_me",
              "predicted": "infantil) FROM dado_"
            },
            "word_count_difference": -7,
            "differing_words": [
              {
                "position": 2,
                "ground_truth": "AS",
                "predicted": "FROM"
              },
              {
                "position": 3,
                "ground_truth": "taxa_media_mortalidade_infantil",
                "predicted": "dado_ibge"
              },
              {
                "position": 4,
                "ground_truth": "FROM",
                "predicted": "<EXTRA>"
              },
              {
                "position": 5,
                "ground_truth": "dado_ibge",
                "predicted": "<EXTRA>"
              },
              {
                "position": 6,
                "ground_truth": "WHERE",
                "predicted": "<EXTRA>"
              }
            ],
            "common_errors": [
              "Missing WHERE clause"
            ]
          }
        },
        "Component Matching (CM)": {
          "score": 0.525,
          "is_correct": false,
          "error": null,
          "details": {
            "overall_score": 0.525,
            "component_scores": {
              "select": 0.7,
              "from": 0.0,
              "where": 0.0,
              "joins": 1.0,
              "group_by": 1.0,
              "order_by": 1.0,
              "having": 1.0,
              "limit": 1.0
            },
            "component_details": {
              "select": {
                "jaccard_similarity": 0.7,
                "gt_items": [
                  "AVG ( mortalidade_infantil ) AS <alias>"
                ],
                "pred_items": [
                  "AVG ( mortalidade_infantil )"
                ],
                "gt_normalized": [
                  "AVG ( mortalidade_infantil ) AS <alias>"
                ],
                "pred_normalized": [
                  "AVG ( mortalidade_infantil )"
                ],
                "exact_match": false
              },
              "from": {
                "gt_tables": [
                  "dado_ibge"
                ],
                "pred_tables": [
                  "dado_ibge ;"
                ],
                "intersection_count": 0,
                "union_count": 2,
                "jaccard_similarity": 0.0
              },
              "where": {
                "match": "one_empty"
              },
              "joins": {
                "match": "both_empty"
              },
              "group_by": {
                "match": "both_empty"
              },
              "order_by": {
                "match": "both_empty"
              },
              "having": {
                "match": "both_empty"
              },
              "limit": {
                "match": "both_empty"
              }
            },
            "ground_truth_components": {
              "select": "AVG ( mortalidade_infantil ) taxa_media_mortalidade_infantil",
              "from": "dado_ibge",
              "where": "mortalidade_infantil ;",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": ""
            },
            "predicted_components": {
              "select": "AVG ( mortalidade_infantil )",
              "from": "dado_ibge ;",
              "where": "",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": ""
            },
            "clause_weights": {
              "select": 0.25,
              "from": 0.2,
              "where": 0.2,
              "joins": 0.15,
              "group_by": 0.1,
              "order_by": 0.05,
              "having": 0.03,
              "limit": 0.02
            }
          }
        },
        "Execution Accuracy (EX)": {
          "score": 1.0,
          "is_correct": true,
          "error": null,
          "details": {
            "ground_truth_executed": true,
            "predicted_executed": true,
            "ground_truth_rows": 1,
            "predicted_rows": 1,
            "results_match": true,
            "comparison_details": {
              "gt_size": 1,
              "pred_size": 1,
              "normalized_match": true
            }
          }
        }
      }
    },
    {
      "question_id": "GT044",
      "difficulty": "hard",
      "question": "Quantos hospitais ficam em municípios com mais de 100k habitantes?",
      "ground_truth_sql": "SELECT COUNT(DISTINCT h.\"CNES\") AS hospitais_grandes_municipios FROM hospital h JOIN internacoes i ON h.\"CNES\" = i.\"CNES\" JOIN municipios m ON i.\"MUNIC_RES\" = m.codigo_6d JOIN dado_ibge d ON m.codigo_ibge = d.codigo_municipio_completo WHERE d.populacao > 100;",
      "predicted_sql": "",
      "agent_success": false,
      "agent_execution_time": 43.205679416656494,
      "metrics": {
        "Exact Match (EM)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "ground_truth_normalized": "",
            "predicted_normalized": "",
            "reason": "Empty or missing SQL query"
          }
        },
        "Component Matching (CM)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "reason": "Empty or missing SQL query",
            "component_scores": {}
          }
        },
        "Execution Accuracy (EX)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "reason": "Empty or missing SQL query",
            "ground_truth_executed": false,
            "predicted_executed": false
          }
        }
      }
    },
    {
      "question_id": "GT045",
      "difficulty": "medium",
      "question": "Quantas internações de pacientes com mais de 70 anos ocorreram no inverno (junho a agosto)?",
      "ground_truth_sql": " SELECT COUNT(i.\"N_AIH\") FROM internacoes i JOIN cid10 c ON i.\"DIAG_PRINC\" = c.\"CID\" WHERE EXTRACT(MONTH FROM i.\"DT_INTER\") BETWEEN 6 AND 8 AND i.\"IDADE\" > 70;",
      "predicted_sql": "SELECT COUNT(i.\"N_AIH\") FROM internacoes i JOIN cid10 c ON i.\"DIAG_PRINC\" = c.\"CID\" WHERE EXTRACT(MONTH FROM i.\"DT_INTER\") BETWEEN 6 AND 8 AND i.\"IDADE\" > 70;",
      "agent_success": true,
      "agent_execution_time": 11.546470642089844,
      "metrics": {
        "Exact Match (EM)": {
          "score": 1.0,
          "is_correct": true,
          "error": null,
          "details": {
            "ground_truth_original": " SELECT COUNT(i.\"N_AIH\") FROM internacoes i JOIN cid10 c ON i.\"DIAG_PRINC\" = c.\"CID\" WHERE EXTRACT(MONTH FROM i.\"DT_INTER\") BETWEEN 6 AND 8 AND i.\"IDADE\" > 70;",
            "predicted_original": "SELECT COUNT(i.\"N_AIH\") FROM internacoes i JOIN cid10 c ON i.\"DIAG_PRINC\" = c.\"CID\" WHERE EXTRACT(MONTH FROM i.\"DT_INTER\") BETWEEN 6 AND 8 AND i.\"IDADE\" > 70;",
            "ground_truth_normalized": "SELECT COUNT(i.\"N_AIH\") FROM internacoes i JOIN cid10 c ON i.\"DIAG_PRINC\" = c.\"CID\" WHERE EXTRACT(MONTH FROM i.\"DT_INTER\") BETWEEN 6 AND 8 AND i.\"IDADE\" > 70",
            "predicted_normalized": "SELECT COUNT(i.\"N_AIH\") FROM internacoes i JOIN cid10 c ON i.\"DIAG_PRINC\" = c.\"CID\" WHERE EXTRACT(MONTH FROM i.\"DT_INTER\") BETWEEN 6 AND 8 AND i.\"IDADE\" > 70",
            "match": true
          }
        },
        "Component Matching (CM)": {
          "score": 1.0,
          "is_correct": true,
          "error": null,
          "details": {
            "overall_score": 1.0,
            "component_scores": {
              "select": 1.0,
              "from": 1.0,
              "where": 1.0,
              "joins": 1.0,
              "group_by": 1.0,
              "order_by": 1.0,
              "having": 1.0,
              "limit": 1.0
            },
            "component_details": {
              "select": {
                "jaccard_similarity": 1.0,
                "gt_items": [
                  "COUNT ( i . \"N_AIH\" )"
                ],
                "pred_items": [
                  "COUNT ( i . \"N_AIH\" )"
                ],
                "gt_normalized": [
                  "COUNT ( i . \"N_AIH\" )"
                ],
                "pred_normalized": [
                  "COUNT ( i . \"N_AIH\" )"
                ],
                "exact_match": true
              },
              "from": {
                "gt_tables": [
                  "internacoes"
                ],
                "pred_tables": [
                  "internacoes"
                ],
                "intersection_count": 1,
                "union_count": 1,
                "jaccard_similarity": 1.0
              },
              "where": {
                "gt_conditions": [
                  "EXTRACT ( MONTH FROM i . \"DT_INTER\" ) 6 8 i . \"IDADE\" > 70 "
                ],
                "pred_conditions": [
                  "EXTRACT ( MONTH FROM i . \"DT_INTER\" ) 6 8 i . \"IDADE\" > 70 "
                ],
                "intersection_count": 1,
                "union_count": 1,
                "jaccard_similarity": 1.0
              },
              "joins": {
                "gt_normalized": "cid10 c i . \"DIAG_PRINC\" = c . \"CID\"",
                "pred_normalized": "cid10 c i . \"DIAG_PRINC\" = c . \"CID\"",
                "exact_match": true
              },
              "group_by": {
                "match": "both_empty"
              },
              "order_by": {
                "match": "both_empty"
              },
              "having": {
                "match": "both_empty"
              },
              "limit": {
                "match": "both_empty"
              }
            },
            "ground_truth_components": {
              "select": "COUNT ( i . \"N_AIH\" )",
              "from": "internacoes i",
              "where": "EXTRACT ( MONTH FROM i . \"DT_INTER\" ) 6 8 i . \"IDADE\" > 70 ;",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": "cid10 c i . \"DIAG_PRINC\" = c . \"CID\""
            },
            "predicted_components": {
              "select": "COUNT ( i . \"N_AIH\" )",
              "from": "internacoes i",
              "where": "EXTRACT ( MONTH FROM i . \"DT_INTER\" ) 6 8 i . \"IDADE\" > 70 ;",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": "cid10 c i . \"DIAG_PRINC\" = c . \"CID\""
            },
            "clause_weights": {
              "select": 0.25,
              "from": 0.2,
              "where": 0.2,
              "joins": 0.15,
              "group_by": 0.1,
              "order_by": 0.05,
              "having": 0.03,
              "limit": 0.02
            }
          }
        },
        "Execution Accuracy (EX)": {
          "score": 1.0,
          "is_correct": true,
          "error": null,
          "details": {
            "ground_truth_executed": true,
            "predicted_executed": true,
            "ground_truth_rows": 1,
            "predicted_rows": 1,
            "results_match": true,
            "comparison_details": {
              "gt_size": 1,
              "pred_size": 1,
              "normalized_match": true
            }
          }
        }
      }
    },
    {
      "question_id": "GT046",
      "difficulty": "medium",
      "question": "Quantas internações tiveram tanto diagnóstico principal quanto secundário?",
      "ground_truth_sql": "SELECT COUNT(*) AS com_ambos_diagnosticos FROM internacoes WHERE \"DIAG_PRINC\" IS NOT NULL AND \"DIAG_SECUN\" IS NOT NULL;",
      "predicted_sql": "SELECT COUNT(*) FROM internacoes WHERE \"DIAG_PRINC\" IS NOT NULL AND \"DIAG_SECUN\" IS NOT NULL;",
      "agent_success": true,
      "agent_execution_time": 9.704771280288696,
      "metrics": {
        "Exact Match (EM)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "ground_truth_original": "SELECT COUNT(*) AS com_ambos_diagnosticos FROM internacoes WHERE \"DIAG_PRINC\" IS NOT NULL AND \"DIAG_SECUN\" IS NOT NULL;",
            "predicted_original": "SELECT COUNT(*) FROM internacoes WHERE \"DIAG_PRINC\" IS NOT NULL AND \"DIAG_SECUN\" IS NOT NULL;",
            "ground_truth_normalized": "SELECT COUNT(*) AS com_ambos_diagnosticos FROM internacoes WHERE \"DIAG_PRINC\" IS NOT NULL AND \"DIAG_SECUN\" IS NOT NULL",
            "predicted_normalized": "SELECT COUNT(*) FROM internacoes WHERE \"DIAG_PRINC\" IS NOT NULL AND \"DIAG_SECUN\" IS NOT NULL",
            "match": false,
            "length_difference": -26,
            "first_difference_position": 16,
            "first_difference_context": {
              "ground_truth": " COUNT(*) AS com_amb",
              "predicted": " COUNT(*) FROM inter"
            },
            "word_count_difference": -2,
            "differing_words": [
              {
                "position": 2,
                "ground_truth": "AS",
                "predicted": "FROM"
              },
              {
                "position": 3,
                "ground_truth": "com_ambos_diagnosticos",
                "predicted": "internacoes"
              },
              {
                "position": 4,
                "ground_truth": "FROM",
                "predicted": "WHERE"
              },
              {
                "position": 5,
                "ground_truth": "internacoes",
                "predicted": "\"DIAG_PRINC\""
              },
              {
                "position": 6,
                "ground_truth": "WHERE",
                "predicted": "IS"
              }
            ],
            "common_errors": []
          }
        },
        "Component Matching (CM)": {
          "score": 0.925,
          "is_correct": true,
          "error": null,
          "details": {
            "overall_score": 0.925,
            "component_scores": {
              "select": 0.7,
              "from": 1.0,
              "where": 1.0,
              "joins": 1.0,
              "group_by": 1.0,
              "order_by": 1.0,
              "having": 1.0,
              "limit": 1.0
            },
            "component_details": {
              "select": {
                "jaccard_similarity": 0.7,
                "gt_items": [
                  "COUNT ( * ) AS <alias>"
                ],
                "pred_items": [
                  "COUNT ( * )"
                ],
                "gt_normalized": [
                  "COUNT ( * ) AS <alias>"
                ],
                "pred_normalized": [
                  "COUNT ( * )"
                ],
                "exact_match": false
              },
              "from": {
                "gt_tables": [
                  "internacoes"
                ],
                "pred_tables": [
                  "internacoes"
                ],
                "intersection_count": 1,
                "union_count": 1,
                "jaccard_similarity": 1.0
              },
              "where": {
                "gt_conditions": [
                  "\"DIAG_PRINC\" \"DIAG_SECUN\" "
                ],
                "pred_conditions": [
                  "\"DIAG_PRINC\" \"DIAG_SECUN\" "
                ],
                "intersection_count": 1,
                "union_count": 1,
                "jaccard_similarity": 1.0
              },
              "joins": {
                "match": "both_empty"
              },
              "group_by": {
                "match": "both_empty"
              },
              "order_by": {
                "match": "both_empty"
              },
              "having": {
                "match": "both_empty"
              },
              "limit": {
                "match": "both_empty"
              }
            },
            "ground_truth_components": {
              "select": "COUNT ( * ) com_ambos_diagnosticos",
              "from": "internacoes",
              "where": "\"DIAG_PRINC\" \"DIAG_SECUN\" ;",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": ""
            },
            "predicted_components": {
              "select": "COUNT ( * )",
              "from": "internacoes",
              "where": "\"DIAG_PRINC\" \"DIAG_SECUN\" ;",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": ""
            },
            "clause_weights": {
              "select": 0.25,
              "from": 0.2,
              "where": 0.2,
              "joins": 0.15,
              "group_by": 0.1,
              "order_by": 0.05,
              "having": 0.03,
              "limit": 0.02
            }
          }
        },
        "Execution Accuracy (EX)": {
          "score": 1.0,
          "is_correct": true,
          "error": null,
          "details": {
            "ground_truth_executed": true,
            "predicted_executed": true,
            "ground_truth_rows": 1,
            "predicted_rows": 1,
            "results_match": true,
            "comparison_details": {
              "gt_size": 1,
              "pred_size": 1,
              "normalized_match": true
            }
          }
        }
      }
    },
    {
      "question_id": "GT047",
      "difficulty": "hard",
      "question": "Qual o custo médio de UTI por faixa etária dos pacientes?",
      "ground_truth_sql": "SELECT CASE WHEN i.\"IDADE\" < 18 THEN 'Menor' WHEN i.\"IDADE\" < 60 THEN 'Adulto' ELSE 'Idoso' END AS faixa_etaria, AVG(u.\"VAL_UTI\") AS custo_medio_uti FROM internacoes i JOIN uti_detalhes u ON i.\"N_AIH\" = u.\"N_AIH\" WHERE i.\"IDADE\" IS NOT NULL AND u.\"VAL_UTI\" IS NOT NULL GROUP BY CASE WHEN i.\"IDADE\" < 18 THEN 'Menor' WHEN i.\"IDADE\" < 60 THEN 'Adulto' ELSE 'Idoso' END;",
      "predicted_sql": "SELECT EXTRACT(YEAR FROM i.\"DT_INTER\") AS ano, EXTRACT(MONTH FROM i.\"DT_INTER\") AS mes, EXTRACT(DAY FROM i.\"DT_INTER\") AS dia, i.\"IDADE\" AS faixa_etaria, AVG(ud.\"VAL_UTI\") AS custo_medio FROM internacoes i JOIN uti_detalhes ud ON i.\"N_AIH\" = ud.\"N_AIH\" GROUP BY EXTRACT(YEAR FROM i.\"DT_INTER\"), EXTRACT(MONTH FROM i.\"DT_INTER\"), EXTRACT(DAY FROM i.\"DT_INTER\"), i.\"IDADE\" ORDER BY EXTRACT(YEAR FROM i.\"DT_INTER\"), EXTRACT(MONTH FROM i.\"DT_INTER\"), EXTRACT(DAY FROM i.\"DT_INTER\"), i.\"IDADE\" LIMIT 100;",
      "agent_success": true,
      "agent_execution_time": 23.25670552253723,
      "metrics": {
        "Exact Match (EM)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "ground_truth_original": "SELECT CASE WHEN i.\"IDADE\" < 18 THEN 'Menor' WHEN i.\"IDADE\" < 60 THEN 'Adulto' ELSE 'Idoso' END AS faixa_etaria, AVG(u.\"VAL_UTI\") AS custo_medio_uti FROM internacoes i JOIN uti_detalhes u ON i.\"N_AIH\" = u.\"N_AIH\" WHERE i.\"IDADE\" IS NOT NULL AND u.\"VAL_UTI\" IS NOT NULL GROUP BY CASE WHEN i.\"IDADE\" < 18 THEN 'Menor' WHEN i.\"IDADE\" < 60 THEN 'Adulto' ELSE 'Idoso' END;",
            "predicted_original": "SELECT EXTRACT(YEAR FROM i.\"DT_INTER\") AS ano, EXTRACT(MONTH FROM i.\"DT_INTER\") AS mes, EXTRACT(DAY FROM i.\"DT_INTER\") AS dia, i.\"IDADE\" AS faixa_etaria, AVG(ud.\"VAL_UTI\") AS custo_medio FROM internacoes i JOIN uti_detalhes ud ON i.\"N_AIH\" = ud.\"N_AIH\" GROUP BY EXTRACT(YEAR FROM i.\"DT_INTER\"), EXTRACT(MONTH FROM i.\"DT_INTER\"), EXTRACT(DAY FROM i.\"DT_INTER\"), i.\"IDADE\" ORDER BY EXTRACT(YEAR FROM i.\"DT_INTER\"), EXTRACT(MONTH FROM i.\"DT_INTER\"), EXTRACT(DAY FROM i.\"DT_INTER\"), i.\"IDADE\" LIMIT 100;",
            "ground_truth_normalized": "SELECT CASE WHEN i.\"IDADE\" < 18 THEN 'Menor' WHEN i.\"IDADE\" < 60 THEN 'Adulto' ELSE 'Idoso' END AS faixa_etaria, AVG(u.\"VAL_UTI\") AS custo_medio_uti FROM internacoes i JOIN uti_detalhes u ON i.\"N_AIH\" = u.\"N_AIH\" WHERE i.\"IDADE\" IS NOT NULL AND u.\"VAL_UTI\" IS NOT NULL GROUP BY CASE WHEN i.\"IDADE\" < 18 THEN 'Menor' WHEN i.\"IDADE\" < 60 THEN 'Adulto' ELSE 'Idoso' END",
            "predicted_normalized": "SELECT EXTRACT(YEAR FROM i.\"DT_INTER\") AS ano, EXTRACT(MONTH FROM i.\"DT_INTER\") AS mes, EXTRACT(DAY FROM i.\"DT_INTER\") AS dia, i.\"IDADE\" AS faixa_etaria, AVG(ud.\"VAL_UTI\") AS custo_medio FROM internacoes i JOIN uti_detalhes ud ON i.\"N_AIH\" = ud.\"N_AIH\" GROUP BY EXTRACT(YEAR FROM i.\"DT_INTER\"), EXTRACT(MONTH FROM i.\"DT_INTER\"), EXTRACT(DAY FROM i.\"DT_INTER\"), i.\"IDADE\" ORDER BY EXTRACT(YEAR FROM i.\"DT_INTER\"), EXTRACT(MONTH FROM i.\"DT_INTER\"), EXTRACT(DAY FROM i.\"DT_INTER\"), i.\"IDADE\" LIMIT 100",
            "match": false,
            "length_difference": 132,
            "first_difference_position": 7,
            "first_difference_context": {
              "ground_truth": "SELECT CASE WHEN ",
              "predicted": "SELECT EXTRACT(YE"
            },
            "word_count_difference": -2,
            "differing_words": [
              {
                "position": 1,
                "ground_truth": "CASE",
                "predicted": "EXTRACT(YEAR"
              },
              {
                "position": 2,
                "ground_truth": "WHEN",
                "predicted": "FROM"
              },
              {
                "position": 3,
                "ground_truth": "i.\"IDADE\"",
                "predicted": "i.\"DT_INTER\")"
              },
              {
                "position": 4,
                "ground_truth": "<",
                "predicted": "AS"
              },
              {
                "position": 5,
                "ground_truth": "18",
                "predicted": "ano,"
              }
            ],
            "common_errors": [
              "Missing WHERE clause",
              "Extra ORDER BY clause",
              "Extra LIMIT clause",
              "Quote mismatch (identifier quoting)"
            ]
          }
        },
        "Component Matching (CM)": {
          "score": 0.23,
          "is_correct": false,
          "error": null,
          "details": {
            "overall_score": 0.23,
            "component_scores": {
              "select": 0.0,
              "from": 1.0,
              "where": 0.0,
              "joins": 0.0,
              "group_by": 0.0,
              "order_by": 0.0,
              "having": 1.0,
              "limit": 0.0
            },
            "component_details": {
              "select": {
                "jaccard_similarity": 0.0,
                "gt_items": [
                  "i . \"IDADE\" < 18 'Menor' i . \"IDADE\" < 60 'Adulto' 'Idoso' AS <alias>",
                  "AVG ( u . \"VAL_UTI\" ) AS <alias>"
                ],
                "pred_items": [
                  "EXTRACT ( YEAR FROM i . \"DT_INTER\" ) AS <alias>",
                  "EXTRACT ( MONTH FROM i . \"DT_INTER\" ) AS <alias>",
                  "EXTRACT ( DAY FROM i . \"DT_INTER\" ) AS <alias>",
                  "i . \"IDADE\" AS <alias>",
                  "AVG ( ud . \"VAL_UTI\" ) AS <alias>"
                ],
                "gt_normalized": [
                  "i . \"IDADE\" < 18 'Menor' i . \"IDADE\" < 60 'Adulto' 'Idoso' AS <alias>",
                  "AVG ( u . \"VAL_UTI\" ) AS <alias>"
                ],
                "pred_normalized": [
                  "EXTRACT ( YEAR FROM i . \"DT_INTER\" ) AS <alias>",
                  "EXTRACT ( MONTH FROM i . \"DT_INTER\" ) AS <alias>",
                  "EXTRACT ( DAY FROM i . \"DT_INTER\" ) AS <alias>",
                  "i . \"IDADE\" AS <alias>",
                  "AVG ( ud . \"VAL_UTI\" ) AS <alias>"
                ],
                "exact_match": false
              },
              "from": {
                "gt_tables": [
                  "internacoes"
                ],
                "pred_tables": [
                  "internacoes"
                ],
                "intersection_count": 1,
                "union_count": 1,
                "jaccard_similarity": 1.0
              },
              "where": {
                "match": "one_empty"
              },
              "joins": {
                "gt_normalized": "uti_detalhes u i . \"N_AIH\" = u . \"N_AIH\"",
                "pred_normalized": "uti_detalhes ud i . \"N_AIH\" = ud . \"N_AIH\"",
                "exact_match": false
              },
              "group_by": {
                "gt_normalized": "i . \"IDADE\" < 18 'Menor' i . \"IDADE\" < 60 'Adulto' 'Idoso' ",
                "pred_normalized": "EXTRACT ( YEAR FROM i . \"DT_INTER\" ) , EXTRACT ( MONTH FROM i . \"DT_INTER\" ) , EXTRACT ( DAY FROM i . \"DT_INTER\" ) , i . \"IDADE\"",
                "exact_match": false
              },
              "order_by": {
                "match": "one_empty"
              },
              "having": {
                "match": "both_empty"
              },
              "limit": {
                "match": "one_empty"
              }
            },
            "ground_truth_components": {
              "select": "i . \"IDADE\" < 18 'Menor' i . \"IDADE\" < 60 'Adulto' 'Idoso' faixa_etaria , AVG ( u . \"VAL_UTI\" ) custo_medio_uti",
              "from": "internacoes i",
              "where": "i . \"IDADE\" u . \"VAL_UTI\"",
              "group_by": "i . \"IDADE\" < 18 'Menor' i . \"IDADE\" < 60 'Adulto' 'Idoso' ;",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": "uti_detalhes u i . \"N_AIH\" = u . \"N_AIH\""
            },
            "predicted_components": {
              "select": "EXTRACT ( YEAR FROM i . \"DT_INTER\" ) ano , EXTRACT ( MONTH FROM i . \"DT_INTER\" ) mes , EXTRACT ( DAY FROM i . \"DT_INTER\" ) dia , i . \"IDADE\" faixa_etaria , AVG ( ud . \"VAL_UTI\" ) custo_medio",
              "from": "internacoes i",
              "where": "",
              "group_by": "EXTRACT ( YEAR FROM i . \"DT_INTER\" ) , EXTRACT ( MONTH FROM i . \"DT_INTER\" ) , EXTRACT ( DAY FROM i . \"DT_INTER\" ) , i . \"IDADE\"",
              "having": "",
              "order_by": "EXTRACT ( YEAR FROM i . \"DT_INTER\" ) , EXTRACT ( MONTH FROM i . \"DT_INTER\" ) , EXTRACT ( DAY FROM i . \"DT_INTER\" ) , i . \"IDADE\"",
              "limit": "100 ;",
              "joins": "uti_detalhes ud i . \"N_AIH\" = ud . \"N_AIH\""
            },
            "clause_weights": {
              "select": 0.25,
              "from": 0.2,
              "where": 0.2,
              "joins": 0.15,
              "group_by": 0.1,
              "order_by": 0.05,
              "having": 0.03,
              "limit": 0.02
            }
          }
        },
        "Execution Accuracy (EX)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "ground_truth_executed": true,
            "predicted_executed": true,
            "ground_truth_rows": 3,
            "predicted_rows": 100,
            "results_match": false,
            "comparison_details": {
              "size_mismatch": true,
              "gt_size": 3,
              "pred_size": 100,
              "size_difference": 97
            }
          }
        }
      }
    },
    {
      "question_id": "GT049",
      "difficulty": "hard",
      "question": "Quantos casos tiveram VDRL positivo e evoluíram para óbito?",
      "ground_truth_sql": "SELECT COUNT(DISTINCT c.\"N_AIH\") AS vdrl_positivo_obito FROM condicoes_especificas c JOIN mortes m ON c.\"N_AIH\" = m.\"N_AIH\" WHERE c.\"IND_VDRL\" = '1';",
      "predicted_sql": "SELECT COUNT(mo.\"N_AIH\") FROM mortes mo JOIN condicoes_especificas ce ON mo.\"N_AIH\" = ce.\"N_AIH\" WHERE ce.\"IND_VDRL\" = '1' AND mo.\"CID_MORTE\" IS NOT NULL;",
      "agent_success": true,
      "agent_execution_time": 19.1973979473114,
      "metrics": {
        "Exact Match (EM)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "ground_truth_original": "SELECT COUNT(DISTINCT c.\"N_AIH\") AS vdrl_positivo_obito FROM condicoes_especificas c JOIN mortes m ON c.\"N_AIH\" = m.\"N_AIH\" WHERE c.\"IND_VDRL\" = '1';",
            "predicted_original": "SELECT COUNT(mo.\"N_AIH\") FROM mortes mo JOIN condicoes_especificas ce ON mo.\"N_AIH\" = ce.\"N_AIH\" WHERE ce.\"IND_VDRL\" = '1' AND mo.\"CID_MORTE\" IS NOT NULL;",
            "ground_truth_normalized": "SELECT COUNT(DISTINCT c.\"N_AIH\") AS vdrl_positivo_obito FROM condicoes_especificas c JOIN mortes m ON c.\"N_AIH\" = m.\"N_AIH\" WHERE c.\"IND_VDRL\" = '1'",
            "predicted_normalized": "SELECT COUNT(mo.\"N_AIH\") FROM mortes mo JOIN condicoes_especificas ce ON mo.\"N_AIH\" = ce.\"N_AIH\" WHERE ce.\"IND_VDRL\" = '1' AND mo.\"CID_MORTE\" IS NOT NULL",
            "match": false,
            "length_difference": 5,
            "first_difference_position": 13,
            "first_difference_context": {
              "ground_truth": "ECT COUNT(DISTINCT c",
              "predicted": "ECT COUNT(mo.\"N_AIH\""
            },
            "word_count_difference": 2,
            "differing_words": [
              {
                "position": 1,
                "ground_truth": "COUNT(DISTINCT",
                "predicted": "COUNT(mo.\"N_AIH\")"
              },
              {
                "position": 2,
                "ground_truth": "c.\"N_AIH\")",
                "predicted": "FROM"
              },
              {
                "position": 3,
                "ground_truth": "AS",
                "predicted": "mortes"
              },
              {
                "position": 4,
                "ground_truth": "vdrl_positivo_obito",
                "predicted": "mo"
              },
              {
                "position": 5,
                "ground_truth": "FROM",
                "predicted": "JOIN"
              }
            ],
            "common_errors": [
              "Quote mismatch (identifier quoting)"
            ]
          }
        },
        "Component Matching (CM)": {
          "score": 0.2,
          "is_correct": false,
          "error": null,
          "details": {
            "overall_score": 0.2,
            "component_scores": {
              "select": 0.0,
              "from": 0.0,
              "where": 0.0,
              "joins": 0.0,
              "group_by": 1.0,
              "order_by": 1.0,
              "having": 1.0,
              "limit": 1.0
            },
            "component_details": {
              "select": {
                "jaccard_similarity": 0.0,
                "gt_items": [
                  "COUNT ( DISTINCT c . \"N_AIH\" ) AS <alias>"
                ],
                "pred_items": [
                  "COUNT ( mo . \"N_AIH\" )"
                ],
                "gt_normalized": [
                  "COUNT ( DISTINCT c . \"N_AIH\" ) AS <alias>"
                ],
                "pred_normalized": [
                  "COUNT ( mo . \"N_AIH\" )"
                ],
                "exact_match": false
              },
              "from": {
                "gt_tables": [
                  "condicoes_especificas"
                ],
                "pred_tables": [
                  "mortes"
                ],
                "intersection_count": 0,
                "union_count": 2,
                "jaccard_similarity": 0.0
              },
              "where": {
                "gt_conditions": [
                  "c . \"IND_VDRL\" = '1' "
                ],
                "pred_conditions": [
                  "ce . \"IND_VDRL\" = '1' mo . \"CID_MORTE\" "
                ],
                "intersection_count": 0,
                "union_count": 2,
                "jaccard_similarity": 0.0
              },
              "joins": {
                "gt_normalized": "mortes m c . \"N_AIH\" = m . \"N_AIH\"",
                "pred_normalized": "condicoes_especificas ce mo . \"N_AIH\" = ce . \"N_AIH\"",
                "exact_match": false
              },
              "group_by": {
                "match": "both_empty"
              },
              "order_by": {
                "match": "both_empty"
              },
              "having": {
                "match": "both_empty"
              },
              "limit": {
                "match": "both_empty"
              }
            },
            "ground_truth_components": {
              "select": "COUNT ( DISTINCT c . \"N_AIH\" ) vdrl_positivo_obito",
              "from": "condicoes_especificas c",
              "where": "c . \"IND_VDRL\" = '1' ;",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": "mortes m c . \"N_AIH\" = m . \"N_AIH\""
            },
            "predicted_components": {
              "select": "COUNT ( mo . \"N_AIH\" )",
              "from": "mortes mo",
              "where": "ce . \"IND_VDRL\" = '1' mo . \"CID_MORTE\" ;",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": "condicoes_especificas ce mo . \"N_AIH\" = ce . \"N_AIH\""
            },
            "clause_weights": {
              "select": 0.25,
              "from": 0.2,
              "where": 0.2,
              "joins": 0.15,
              "group_by": 0.1,
              "order_by": 0.05,
              "having": 0.03,
              "limit": 0.02
            }
          }
        },
        "Execution Accuracy (EX)": {
          "score": 1.0,
          "is_correct": true,
          "error": null,
          "details": {
            "ground_truth_executed": true,
            "predicted_executed": true,
            "ground_truth_rows": 1,
            "predicted_rows": 1,
            "results_match": true,
            "comparison_details": {
              "gt_size": 1,
              "pred_size": 1,
              "normalized_match": true
            }
          }
        }
      }
    },
    {
      "question_id": "GT050",
      "difficulty": "medium",
      "question": "Qual a evolução de internações para cada ano?",
      "ground_truth_sql": "SELECT EXTRACT(YEAR FROM \"DT_INTER\") AS ano, COUNT(*) AS total_internacoes FROM internacoes WHERE \"DT_INTER\" IS NOT NULL GROUP BY ano ORDER BY ano;",
      "predicted_sql": "",
      "agent_success": false,
      "agent_execution_time": 11.688491821289062,
      "metrics": {
        "Exact Match (EM)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "ground_truth_normalized": "",
            "predicted_normalized": "",
            "reason": "Empty or missing SQL query"
          }
        },
        "Component Matching (CM)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "reason": "Empty or missing SQL query",
            "component_scores": {}
          }
        },
        "Execution Accuracy (EX)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "reason": "Empty or missing SQL query",
            "ground_truth_executed": false,
            "predicted_executed": false
          }
        }
      }
    },
    {
      "question_id": "GT051",
      "difficulty": "medium",
      "question": "Quantas internações por doença respiratória ocorrem no inverno (junho a agosto)?",
      "ground_truth_sql": "SELECT COUNT(*) AS internacoes_respiratorias_inverno FROM internacoes WHERE \"DIAG_PRINC\" LIKE 'J%' AND EXTRACT(MONTH FROM \"DT_INTER\") IN (6, 7, 8);",
      "predicted_sql": "SELECT COUNT(i.\"N_AIH\") AS total_internacoes FROM internacoes i JOIN cid10 c ON i.\"DIAG_PRINC\" = c.\"CID\" WHERE EXTRACT(MONTH FROM i.\"DT_INTER\") BETWEEN 6 AND 8 AND (c.\"CD_DESCRICAO\" ILIKE '%pulm%' OR c.\"CD_DESCRICAO\" ILIKE '%respir%' OR c.\"CD_DESCRICAO\" ILIKE '%pneum%') AND c.\"CID\" LIKE 'J%' LIMIT 100;",
      "agent_success": true,
      "agent_execution_time": 16.215396881103516,
      "metrics": {
        "Exact Match (EM)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "ground_truth_original": "SELECT COUNT(*) AS internacoes_respiratorias_inverno FROM internacoes WHERE \"DIAG_PRINC\" LIKE 'J%' AND EXTRACT(MONTH FROM \"DT_INTER\") IN (6, 7, 8);",
            "predicted_original": "SELECT COUNT(i.\"N_AIH\") AS total_internacoes FROM internacoes i JOIN cid10 c ON i.\"DIAG_PRINC\" = c.\"CID\" WHERE EXTRACT(MONTH FROM i.\"DT_INTER\") BETWEEN 6 AND 8 AND (c.\"CD_DESCRICAO\" ILIKE '%pulm%' OR c.\"CD_DESCRICAO\" ILIKE '%respir%' OR c.\"CD_DESCRICAO\" ILIKE '%pneum%') AND c.\"CID\" LIKE 'J%' LIMIT 100;",
            "ground_truth_normalized": "SELECT COUNT(*) AS internacoes_respiratorias_inverno FROM internacoes WHERE \"DIAG_PRINC\" LIKE 'J%' AND EXTRACT(MONTH FROM \"DT_INTER\") IN (6, 7, 8)",
            "predicted_normalized": "SELECT COUNT(i.\"N_AIH\") AS total_internacoes FROM internacoes i JOIN cid10 c ON i.\"DIAG_PRINC\" = c.\"CID\" WHERE EXTRACT(MONTH FROM i.\"DT_INTER\") BETWEEN 6 AND 8 AND (c.\"CD_DESCRICAO\" ILIKE '%pulm%' OR c.\"CD_DESCRICAO\" ILIKE '%respir%' OR c.\"CD_DESCRICAO\" ILIKE '%pneum%') AND c.\"CID\" LIKE 'J%' LIMIT 100",
            "match": false,
            "length_difference": 156,
            "first_difference_position": 13,
            "first_difference_context": {
              "ground_truth": "ECT COUNT(*) AS inte",
              "predicted": "ECT COUNT(i.\"N_AIH\")"
            },
            "word_count_difference": 22,
            "differing_words": [
              {
                "position": 1,
                "ground_truth": "COUNT(*)",
                "predicted": "COUNT(i.\"N_AIH\")"
              },
              {
                "position": 3,
                "ground_truth": "internacoes_respiratorias_inverno",
                "predicted": "total_internacoes"
              },
              {
                "position": 6,
                "ground_truth": "WHERE",
                "predicted": "i"
              },
              {
                "position": 7,
                "ground_truth": "\"DIAG_PRINC\"",
                "predicted": "JOIN"
              },
              {
                "position": 8,
                "ground_truth": "LIKE",
                "predicted": "cid10"
              }
            ],
            "common_errors": [
              "Extra LIMIT clause",
              "Quote mismatch (identifier quoting)",
              "Unexpected JOIN operation"
            ]
          }
        },
        "Component Matching (CM)": {
          "score": 0.38,
          "is_correct": false,
          "error": null,
          "details": {
            "overall_score": 0.38,
            "component_scores": {
              "select": 0.0,
              "from": 1.0,
              "where": 0.0,
              "joins": 0.0,
              "group_by": 1.0,
              "order_by": 1.0,
              "having": 1.0,
              "limit": 0.0
            },
            "component_details": {
              "select": {
                "jaccard_similarity": 0.0,
                "gt_items": [
                  "COUNT ( * ) AS <alias>"
                ],
                "pred_items": [
                  "COUNT ( i . \"N_AIH\" ) AS <alias>"
                ],
                "gt_normalized": [
                  "COUNT ( * ) AS <alias>"
                ],
                "pred_normalized": [
                  "COUNT ( i . \"N_AIH\" ) AS <alias>"
                ],
                "exact_match": false
              },
              "from": {
                "gt_tables": [
                  "internacoes"
                ],
                "pred_tables": [
                  "internacoes"
                ],
                "intersection_count": 1,
                "union_count": 1,
                "jaccard_similarity": 1.0
              },
              "where": {
                "gt_conditions": [
                  "\"DIAG_PRINC\" LIKE 'J%' EXTRACT ( MONTH FROM \"DT_INTER\" ) ( 6 , 7 , 8 ) "
                ],
                "pred_conditions": [
                  "EXTRACT ( MONTH FROM i . \"DT_INTER\" ) 6 8 ( c . \"CD_DESCRICAO\" ILIKE '%pulm%'",
                  "c . \"CD_DESCRICAO\" ILIKE '%respir%'",
                  "c . \"CD_DESCRICAO\" ILIKE '%pneum%' ) c . \"CID\" LIKE 'J%'"
                ],
                "intersection_count": 0,
                "union_count": 4,
                "jaccard_similarity": 0.0
              },
              "joins": {
                "match": "one_empty"
              },
              "group_by": {
                "match": "both_empty"
              },
              "order_by": {
                "match": "both_empty"
              },
              "having": {
                "match": "both_empty"
              },
              "limit": {
                "match": "one_empty"
              }
            },
            "ground_truth_components": {
              "select": "COUNT ( * ) internacoes_respiratorias_inverno",
              "from": "internacoes",
              "where": "\"DIAG_PRINC\" LIKE 'J%' EXTRACT ( MONTH FROM \"DT_INTER\" ) ( 6 , 7 , 8 ) ;",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": ""
            },
            "predicted_components": {
              "select": "COUNT ( i . \"N_AIH\" ) total_internacoes",
              "from": "internacoes i",
              "where": "EXTRACT ( MONTH FROM i . \"DT_INTER\" ) 6 8 ( c . \"CD_DESCRICAO\" ILIKE '%pulm%' OR c . \"CD_DESCRICAO\" ILIKE '%respir%' OR c . \"CD_DESCRICAO\" ILIKE '%pneum%' ) c . \"CID\" LIKE 'J%'",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "100 ;",
              "joins": "cid10 c i . \"DIAG_PRINC\" = c . \"CID\""
            },
            "clause_weights": {
              "select": 0.25,
              "from": 0.2,
              "where": 0.2,
              "joins": 0.15,
              "group_by": 0.1,
              "order_by": 0.05,
              "having": 0.03,
              "limit": 0.02
            }
          }
        },
        "Execution Accuracy (EX)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "ground_truth_executed": true,
            "predicted_executed": true,
            "ground_truth_rows": 1,
            "predicted_rows": 1,
            "results_match": false,
            "comparison_details": {
              "gt_size": 1,
              "pred_size": 1,
              "normalized_match": false,
              "missing_rows_count": 1,
              "extra_rows_count": 1,
              "missing_rows_sample": [
                [
                  486123
                ]
              ],
              "extra_rows_sample": [
                [
                  361606
                ]
              ],
              "overlap_ratio": 0.0
            }
          }
        }
      }
    },
    {
      "question_id": "GT052",
      "difficulty": "hard",
      "question": "Quais são as 10 principais causas de morte (com descrição)?",
      "ground_truth_sql": "SELECT c.\"CID\", c.\"CD_DESCRICAO\", COUNT(*) AS total_mortes FROM mortes m JOIN cid10 c ON m.\"CID_MORTE\" = c.\"CID\" GROUP BY c.\"CID\", c.\"CD_DESCRICAO\" ORDER BY total_mortes DESC LIMIT 10;",
      "predicted_sql": "SELECT c.\"CD_DESCRICAO\", COUNT(mo.\"N_AIH\") AS total_mortes FROM cid10 c JOIN mortes mo ON c.\"CID\" = mo.\"CID_MORTE\" GROUP BY c.\"CD_DESCRICAO\" ORDER BY total_mortes DESC LIMIT 10;",
      "agent_success": true,
      "agent_execution_time": 15.5681734085083,
      "metrics": {
        "Exact Match (EM)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "ground_truth_original": "SELECT c.\"CID\", c.\"CD_DESCRICAO\", COUNT(*) AS total_mortes FROM mortes m JOIN cid10 c ON m.\"CID_MORTE\" = c.\"CID\" GROUP BY c.\"CID\", c.\"CD_DESCRICAO\" ORDER BY total_mortes DESC LIMIT 10;",
            "predicted_original": "SELECT c.\"CD_DESCRICAO\", COUNT(mo.\"N_AIH\") AS total_mortes FROM cid10 c JOIN mortes mo ON c.\"CID\" = mo.\"CID_MORTE\" GROUP BY c.\"CD_DESCRICAO\" ORDER BY total_mortes DESC LIMIT 10;",
            "ground_truth_normalized": "SELECT c.\"CID\", c.\"CD_DESCRICAO\", COUNT(*) AS total_mortes FROM mortes m JOIN cid10 c ON m.\"CID_MORTE\" = c.\"CID\" GROUP BY c.\"CID\", c.\"CD_DESCRICAO\" ORDER BY total_mortes DESC LIMIT 10",
            "predicted_normalized": "SELECT c.\"CD_DESCRICAO\", COUNT(mo.\"N_AIH\") AS total_mortes FROM cid10 c JOIN mortes mo ON c.\"CID\" = mo.\"CID_MORTE\" GROUP BY c.\"CD_DESCRICAO\" ORDER BY total_mortes DESC LIMIT 10",
            "match": false,
            "length_difference": -7,
            "first_difference_position": 11,
            "first_difference_context": {
              "ground_truth": "ELECT c.\"CID\", c.\"CD",
              "predicted": "ELECT c.\"CD_DESCRICA"
            },
            "word_count_difference": -2,
            "differing_words": [
              {
                "position": 1,
                "ground_truth": "c.\"CID\",",
                "predicted": "c.\"CD_DESCRICAO\","
              },
              {
                "position": 2,
                "ground_truth": "c.\"CD_DESCRICAO\",",
                "predicted": "COUNT(mo.\"N_AIH\")"
              },
              {
                "position": 3,
                "ground_truth": "COUNT(*)",
                "predicted": "AS"
              },
              {
                "position": 4,
                "ground_truth": "AS",
                "predicted": "total_mortes"
              },
              {
                "position": 5,
                "ground_truth": "total_mortes",
                "predicted": "FROM"
              }
            ],
            "common_errors": [
              "Quote mismatch (identifier quoting)"
            ]
          }
        },
        "Component Matching (CM)": {
          "score": 0.3625,
          "is_correct": false,
          "error": null,
          "details": {
            "overall_score": 0.3625,
            "component_scores": {
              "select": 0.25,
              "from": 0.0,
              "where": 1.0,
              "joins": 0.0,
              "group_by": 0.0,
              "order_by": 1.0,
              "having": 1.0,
              "limit": 1.0
            },
            "component_details": {
              "select": {
                "jaccard_similarity": 0.25,
                "gt_items": [
                  "c . \"CID\"",
                  "c . \"CD_DESCRICAO\"",
                  "COUNT ( * ) AS <alias>"
                ],
                "pred_items": [
                  "c . \"CD_DESCRICAO\"",
                  "COUNT ( mo . \"N_AIH\" ) AS <alias>"
                ],
                "gt_normalized": [
                  "c . \"CID\"",
                  "c . \"CD_DESCRICAO\"",
                  "COUNT ( * ) AS <alias>"
                ],
                "pred_normalized": [
                  "c . \"CD_DESCRICAO\"",
                  "COUNT ( mo . \"N_AIH\" ) AS <alias>"
                ],
                "exact_match": false
              },
              "from": {
                "gt_tables": [
                  "mortes"
                ],
                "pred_tables": [
                  "cid10"
                ],
                "intersection_count": 0,
                "union_count": 2,
                "jaccard_similarity": 0.0
              },
              "where": {
                "match": "both_empty"
              },
              "joins": {
                "gt_normalized": "cid10 c m . \"CID_MORTE\" = c . \"CID\"",
                "pred_normalized": "mortes mo c . \"CID\" = mo . \"CID_MORTE\"",
                "exact_match": false
              },
              "group_by": {
                "gt_normalized": "c . \"CID\" , c . \"CD_DESCRICAO\"",
                "pred_normalized": "c . \"CD_DESCRICAO\"",
                "exact_match": false
              },
              "order_by": {
                "gt_normalized": "total_mortes",
                "pred_normalized": "total_mortes",
                "exact_match": true
              },
              "having": {
                "match": "both_empty"
              },
              "limit": {
                "gt_numbers": [
                  "10"
                ],
                "pred_numbers": [
                  "10"
                ],
                "match": true
              }
            },
            "ground_truth_components": {
              "select": "c . \"CID\" , c . \"CD_DESCRICAO\" , COUNT ( * ) total_mortes",
              "from": "mortes m",
              "where": "",
              "group_by": "c . \"CID\" , c . \"CD_DESCRICAO\"",
              "having": "",
              "order_by": "total_mortes",
              "limit": "10 ;",
              "joins": "cid10 c m . \"CID_MORTE\" = c . \"CID\""
            },
            "predicted_components": {
              "select": "c . \"CD_DESCRICAO\" , COUNT ( mo . \"N_AIH\" ) total_mortes",
              "from": "cid10 c",
              "where": "",
              "group_by": "c . \"CD_DESCRICAO\"",
              "having": "",
              "order_by": "total_mortes",
              "limit": "10 ;",
              "joins": "mortes mo c . \"CID\" = mo . \"CID_MORTE\""
            },
            "clause_weights": {
              "select": 0.25,
              "from": 0.2,
              "where": 0.2,
              "joins": 0.15,
              "group_by": 0.1,
              "order_by": 0.05,
              "having": 0.03,
              "limit": 0.02
            }
          }
        },
        "Execution Accuracy (EX)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "ground_truth_executed": true,
            "predicted_executed": true,
            "ground_truth_rows": 10,
            "predicted_rows": 10,
            "results_match": false,
            "comparison_details": {
              "gt_size": 10,
              "pred_size": 10,
              "normalized_match": false,
              "missing_rows_count": 10,
              "extra_rows_count": 10,
              "missing_rows_sample": [
                [
                  "0",
                  "Nao preenchido",
                  335838
                ],
                [
                  "J960",
                  "Insuf respirat aguda",
                  21187
                ],
                [
                  "A419",
                  "Septicemia NE",
                  15601
                ],
                [
                  "I469",
                  "Parada cardiaca NE",
                  12155
                ],
                [
                  "J189",
                  "Pneumonia NE",
                  8037
                ]
              ],
              "extra_rows_sample": [
                [
                  "Nao preenchido",
                  335838
                ],
                [
                  "Insuf respirat aguda",
                  21187
                ],
                [
                  "Septicemia NE",
                  15601
                ],
                [
                  "Parada cardiaca NE",
                  12155
                ],
                [
                  "Pneumonia NE",
                  8037
                ]
              ],
              "overlap_ratio": 0.0
            }
          }
        }
      }
    },
    {
      "question_id": "GT053",
      "difficulty": "hard",
      "question": "Qual a taxa de mortalidade hospitalar geral do Rio Grande do Sul?",
      "ground_truth_sql": "SELECT ROUND((COUNT(DISTINCT m.\"N_AIH\")::numeric / COUNT(DISTINCT i.\"N_AIH\") * 100), 2) AS taxa_mortalidade_perc FROM internacoes i LEFT JOIN mortes m ON i.\"N_AIH\" = m.\"N_AIH\";",
      "predicted_sql": "",
      "agent_success": false,
      "agent_execution_time": 11.326014995574951,
      "metrics": {
        "Exact Match (EM)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "ground_truth_normalized": "",
            "predicted_normalized": "",
            "reason": "Empty or missing SQL query"
          }
        },
        "Component Matching (CM)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "reason": "Empty or missing SQL query",
            "component_scores": {}
          }
        },
        "Execution Accuracy (EX)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "reason": "Empty or missing SQL query",
            "ground_truth_executed": false,
            "predicted_executed": false
          }
        }
      }
    },
    {
      "question_id": "GT054",
      "difficulty": "medium",
      "question": "Qual a taxa de mortalidade para faixa etária 30-45?",
      "ground_truth_sql": "SELECT '30-45 anos' AS faixa_etaria, COUNT(DISTINCT i.\"N_AIH\") AS total_internacoes, COUNT(DISTINCT m.\"N_AIH\") AS total_mortes, ROUND(COUNT(DISTINCT m.\"N_AIH\")::numeric / COUNT(DISTINCT i.\"N_AIH\") * 100, 2) AS taxa_mortalidade FROM internacoes i LEFT JOIN mortes m ON i.\"N_AIH\" = m.\"N_AIH\" WHERE i.\"IDADE\" BETWEEN 30 AND 45;",
      "predicted_sql": "SELECT COUNT(mo.\"N_AIH\") AS total_mortes, COUNT(i.\"N_AIH\") AS total_internacoes FROM mortes mo JOIN internacoes i ON mo.\"N_AIH\" = i.\"N_AIH\" WHERE i.\"IDADE\" BETWEEN 30 AND 45;",
      "agent_success": true,
      "agent_execution_time": 12.228015899658203,
      "metrics": {
        "Exact Match (EM)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "ground_truth_original": "SELECT '30-45 anos' AS faixa_etaria, COUNT(DISTINCT i.\"N_AIH\") AS total_internacoes, COUNT(DISTINCT m.\"N_AIH\") AS total_mortes, ROUND(COUNT(DISTINCT m.\"N_AIH\")::numeric / COUNT(DISTINCT i.\"N_AIH\") * 100, 2) AS taxa_mortalidade FROM internacoes i LEFT JOIN mortes m ON i.\"N_AIH\" = m.\"N_AIH\" WHERE i.\"IDADE\" BETWEEN 30 AND 45;",
            "predicted_original": "SELECT COUNT(mo.\"N_AIH\") AS total_mortes, COUNT(i.\"N_AIH\") AS total_internacoes FROM mortes mo JOIN internacoes i ON mo.\"N_AIH\" = i.\"N_AIH\" WHERE i.\"IDADE\" BETWEEN 30 AND 45;",
            "ground_truth_normalized": "SELECT '30-45 anos' AS faixa_etaria, COUNT(DISTINCT i.\"N_AIH\") AS total_internacoes, COUNT(DISTINCT m.\"N_AIH\") AS total_mortes, ROUND(COUNT(DISTINCT m.\"N_AIH\")::numeric / COUNT(DISTINCT i.\"N_AIH\") * 100, 2) AS taxa_mortalidade FROM internacoes i LEFT JOIN mortes m ON i.\"N_AIH\" = m.\"N_AIH\" WHERE i.\"IDADE\" BETWEEN 30 AND 45",
            "predicted_normalized": "SELECT COUNT(mo.\"N_AIH\") AS total_mortes, COUNT(i.\"N_AIH\") AS total_internacoes FROM mortes mo JOIN internacoes i ON mo.\"N_AIH\" = i.\"N_AIH\" WHERE i.\"IDADE\" BETWEEN 30 AND 45",
            "match": false,
            "length_difference": -150,
            "first_difference_position": 7,
            "first_difference_context": {
              "ground_truth": "SELECT '30-45 ano",
              "predicted": "SELECT COUNT(mo.\""
            },
            "word_count_difference": -17,
            "differing_words": [
              {
                "position": 1,
                "ground_truth": "'30-45",
                "predicted": "COUNT(mo.\"N_AIH\")"
              },
              {
                "position": 2,
                "ground_truth": "anos'",
                "predicted": "AS"
              },
              {
                "position": 3,
                "ground_truth": "AS",
                "predicted": "total_mortes,"
              },
              {
                "position": 4,
                "ground_truth": "faixa_etaria,",
                "predicted": "COUNT(i.\"N_AIH\")"
              },
              {
                "position": 5,
                "ground_truth": "COUNT(DISTINCT",
                "predicted": "AS"
              }
            ],
            "common_errors": [
              "Quote mismatch (identifier quoting)"
            ]
          }
        },
        "Component Matching (CM)": {
          "score": 0.4,
          "is_correct": false,
          "error": null,
          "details": {
            "overall_score": 0.4,
            "component_scores": {
              "select": 0.0,
              "from": 0.0,
              "where": 1.0,
              "joins": 0.0,
              "group_by": 1.0,
              "order_by": 1.0,
              "having": 1.0,
              "limit": 1.0
            },
            "component_details": {
              "select": {
                "jaccard_similarity": 0.0,
                "gt_items": [
                  "'30-45 anos' AS <alias>",
                  "COUNT ( DISTINCT i . \"N_AIH\" ) AS <alias>",
                  "COUNT ( DISTINCT m . \"N_AIH\" ) AS <alias>",
                  "ROUND ( COUNT ( DISTINCT m . \"N_AIH\" ) :: numeric / COUNT ( DISTINCT i . \"N_AIH\" ) * 100",
                  "2 ) AS <alias>"
                ],
                "pred_items": [
                  "COUNT ( mo . \"N_AIH\" ) AS <alias>",
                  "COUNT ( i . \"N_AIH\" ) AS <alias>"
                ],
                "gt_normalized": [
                  "'30-45 anos' AS <alias>",
                  "COUNT ( DISTINCT i . \"N_AIH\" ) AS <alias>",
                  "COUNT ( DISTINCT m . \"N_AIH\" ) AS <alias>",
                  "ROUND ( COUNT ( DISTINCT m . \"N_AIH\" ) :: numeric / COUNT ( DISTINCT i . \"N_AIH\" ) * 100",
                  "2 ) AS <alias>"
                ],
                "pred_normalized": [
                  "COUNT ( mo . \"N_AIH\" ) AS <alias>",
                  "COUNT ( i . \"N_AIH\" ) AS <alias>"
                ],
                "exact_match": false
              },
              "from": {
                "gt_tables": [
                  "internacoes i mortes m i . \"N_AIH\" = m . \"N_AIH"
                ],
                "pred_tables": [
                  "mortes"
                ],
                "intersection_count": 0,
                "union_count": 2,
                "jaccard_similarity": 0.0
              },
              "where": {
                "gt_conditions": [
                  "i . \"IDADE\" 30 45 "
                ],
                "pred_conditions": [
                  "i . \"IDADE\" 30 45 "
                ],
                "intersection_count": 1,
                "union_count": 1,
                "jaccard_similarity": 1.0
              },
              "joins": {
                "match": "one_empty"
              },
              "group_by": {
                "match": "both_empty"
              },
              "order_by": {
                "match": "both_empty"
              },
              "having": {
                "match": "both_empty"
              },
              "limit": {
                "match": "both_empty"
              }
            },
            "ground_truth_components": {
              "select": "'30-45 anos' faixa_etaria , COUNT ( DISTINCT i . \"N_AIH\" ) total_internacoes , COUNT ( DISTINCT m . \"N_AIH\" ) total_mortes , ROUND ( COUNT ( DISTINCT m . \"N_AIH\" ) :: numeric / COUNT ( DISTINCT i . \"N_AIH\" ) * 100 , 2 ) taxa_mortalidade",
              "from": "internacoes i mortes m i . \"N_AIH\" = m . \"N_AIH\"",
              "where": "i . \"IDADE\" 30 45 ;",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": ""
            },
            "predicted_components": {
              "select": "COUNT ( mo . \"N_AIH\" ) total_mortes , COUNT ( i . \"N_AIH\" ) total_internacoes",
              "from": "mortes mo",
              "where": "i . \"IDADE\" 30 45 ;",
              "group_by": "",
              "having": "",
              "order_by": "",
              "limit": "",
              "joins": "internacoes i mo . \"N_AIH\" = i . \"N_AIH\""
            },
            "clause_weights": {
              "select": 0.25,
              "from": 0.2,
              "where": 0.2,
              "joins": 0.15,
              "group_by": 0.1,
              "order_by": 0.05,
              "having": 0.03,
              "limit": 0.02
            }
          }
        },
        "Execution Accuracy (EX)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "ground_truth_executed": true,
            "predicted_executed": true,
            "ground_truth_rows": 1,
            "predicted_rows": 1,
            "results_match": false,
            "comparison_details": {
              "gt_size": 1,
              "pred_size": 1,
              "normalized_match": false,
              "missing_rows_count": 1,
              "extra_rows_count": 1,
              "missing_rows_sample": [
                [
                  "30-45 anos",
                  2017361,
                  37626,
                  "1.87"
                ]
              ],
              "extra_rows_sample": [
                [
                  37626,
                  37626
                ]
              ],
              "overlap_ratio": 0.0
            }
          }
        }
      }
    },
    {
      "question_id": "GT055",
      "difficulty": "hard",
      "question": "Quais são os 10 municípios com mais internações?",
      "ground_truth_sql": "SELECT m.nome AS municipio, COUNT(i.\"N_AIH\") AS total_internacoes FROM internacoes i JOIN municipios m ON i.\"MUNIC_RES\" = m.codigo_6d GROUP BY m.nome ORDER BY total_internacoes DESC LIMIT 10;",
      "predicted_sql": "SELECT mu.nome, COUNT(i.\"N_AIH\") AS total_internacoes FROM internacoes i JOIN municipios mu ON i.\"MUNIC_RES\" = mu.codigo_6d GROUP BY mu.nome ORDER BY total_internacoes DESC LIMIT 10;",
      "agent_success": true,
      "agent_execution_time": 14.960025310516357,
      "metrics": {
        "Exact Match (EM)": {
          "score": 0.0,
          "is_correct": false,
          "error": null,
          "details": {
            "ground_truth_original": "SELECT m.nome AS municipio, COUNT(i.\"N_AIH\") AS total_internacoes FROM internacoes i JOIN municipios m ON i.\"MUNIC_RES\" = m.codigo_6d GROUP BY m.nome ORDER BY total_internacoes DESC LIMIT 10;",
            "predicted_original": "SELECT mu.nome, COUNT(i.\"N_AIH\") AS total_internacoes FROM internacoes i JOIN municipios mu ON i.\"MUNIC_RES\" = mu.codigo_6d GROUP BY mu.nome ORDER BY total_internacoes DESC LIMIT 10;",
            "ground_truth_normalized": "SELECT m.nome AS municipio, COUNT(i.\"N_AIH\") AS total_internacoes FROM internacoes i JOIN municipios m ON i.\"MUNIC_RES\" = m.codigo_6d GROUP BY m.nome ORDER BY total_internacoes DESC LIMIT 10",
            "predicted_normalized": "SELECT mu.nome, COUNT(i.\"N_AIH\") AS total_internacoes FROM internacoes i JOIN municipios mu ON i.\"MUNIC_RES\" = mu.codigo_6d GROUP BY mu.nome ORDER BY total_internacoes DESC LIMIT 10",
            "match": false,
            "length_difference": -9,
            "first_difference_position": 8,
            "first_difference_context": {
              "ground_truth": "SELECT m.nome AS m",
              "predicted": "SELECT mu.nome, CO"
            },
            "word_count_difference": -2,
            "differing_words": [
              {
                "position": 1,
                "ground_truth": "m.nome",
                "predicted": "mu.nome,"
              },
              {
                "position": 2,
                "ground_truth": "AS",
                "predicted": "COUNT(i.\"N_AIH\")"
              },
              {
                "position": 3,
                "ground_truth": "municipio,",
                "predicted": "AS"
              },
              {
                "position": 4,
                "ground_truth": "COUNT(i.\"N_AIH\")",
                "predicted": "total_internacoes"
              },
              {
                "position": 5,
                "ground_truth": "AS",
                "predicted": "FROM"
              }
            ],
            "common_errors": []
          }
        },
        "Component Matching (CM)": {
          "score": 0.625,
          "is_correct": false,
          "error": null,
          "details": {
            "overall_score": 0.625,
            "component_scores": {
              "select": 0.5,
              "from": 1.0,
              "where": 1.0,
              "joins": 0.0,
              "group_by": 0.0,
              "order_by": 1.0,
              "having": 1.0,
              "limit": 1.0
            },
            "component_details": {
              "select": {
                "jaccard_similarity": 0.5,
                "gt_items": [
                  "m . nome AS <alias>",
                  "COUNT ( i . \"N_AIH\" ) AS <alias>"
                ],
                "pred_items": [
                  "mu . AS <alias>",
                  "COUNT ( i . \"N_AIH\" ) AS <alias>"
                ],
                "gt_normalized": [
                  "m . nome AS <alias>",
                  "COUNT ( i . \"N_AIH\" ) AS <alias>"
                ],
                "pred_normalized": [
                  "mu . AS <alias>",
                  "COUNT ( i . \"N_AIH\" ) AS <alias>"
                ],
                "exact_match": false
              },
              "from": {
                "gt_tables": [
                  "internacoes"
                ],
                "pred_tables": [
                  "internacoes"
                ],
                "intersection_count": 1,
                "union_count": 1,
                "jaccard_similarity": 1.0
              },
              "where": {
                "match": "both_empty"
              },
              "joins": {
                "gt_normalized": "municipios m i . \"MUNIC_RES\" = m . codigo_6d",
                "pred_normalized": "municipios mu i . \"MUNIC_RES\" = mu . codigo_6d",
                "exact_match": false
              },
              "group_by": {
                "gt_normalized": "m . nome",
                "pred_normalized": "mu . nome",
                "exact_match": false
              },
              "order_by": {
                "gt_normalized": "total_internacoes",
                "pred_normalized": "total_internacoes",
                "exact_match": true
              },
              "having": {
                "match": "both_empty"
              },
              "limit": {
                "gt_numbers": [
                  "10"
                ],
                "pred_numbers": [
                  "10"
                ],
                "match": true
              }
            },
            "ground_truth_components": {
              "select": "m . nome municipio , COUNT ( i . \"N_AIH\" ) total_internacoes",
              "from": "internacoes i",
              "where": "",
              "group_by": "m . nome",
              "having": "",
              "order_by": "total_internacoes",
              "limit": "10 ;",
              "joins": "municipios m i . \"MUNIC_RES\" = m . codigo_6d"
            },
            "predicted_components": {
              "select": "mu . nome , COUNT ( i . \"N_AIH\" ) total_internacoes",
              "from": "internacoes i",
              "where": "",
              "group_by": "mu . nome",
              "having": "",
              "order_by": "total_internacoes",
              "limit": "10 ;",
              "joins": "municipios mu i . \"MUNIC_RES\" = mu . codigo_6d"
            },
            "clause_weights": {
              "select": 0.25,
              "from": 0.2,
              "where": 0.2,
              "joins": 0.15,
              "group_by": 0.1,
              "order_by": 0.05,
              "having": 0.03,
              "limit": 0.02
            }
          }
        },
        "Execution Accuracy (EX)": {
          "score": 1.0,
          "is_correct": true,
          "error": null,
          "details": {
            "ground_truth_executed": true,
            "predicted_executed": true,
            "ground_truth_rows": 10,
            "predicted_rows": 10,
            "results_match": true,
            "comparison_details": {
              "gt_size": 10,
              "pred_size": 10,
              "normalized_match": true
            }
          }
        }
      }
    }
  ]
}